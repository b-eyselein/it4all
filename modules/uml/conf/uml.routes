# Administrator
GET    /admin                           controllers.uml.UmlAdmin.index()

GET    /jsonSchema                      controllers.uml.UmlAdmin.getJSONSchemaFile()
POST   /upload                          controllers.uml.UmlAdmin.uploadFile()

GET    /import                          controllers.uml.UmlAdmin.importExercises()
GET    /export                          controllers.uml.UmlAdmin.exportExercises()

GET    /newEx/form                      controllers.uml.UmlAdmin.newExerciseForm()
POST   /newEx/text                      controllers.uml.UmlAdmin.newExerciseStep2()
POST   /newEx/solution                  controllers.uml.UmlAdmin.newExerciseStep3()
POST   /newEx/create                    controllers.uml.UmlAdmin.newExercise()

PUT    /newEx/checkSolution             controllers.uml.UmlAdmin.checkSolution()

# All
GET    /                                controllers.uml.Uml.index()


# Step 1: selection of classes
GET    /:exId/classSelection            controllers.uml.Uml.classSelection(exId: Int)
POST   /:exId/corr/classselection       controllers.uml.Uml.correctClassSelection(exId: Int)

# Step 2: finalization of diagram
GET    /:exId/diagramDrawinghelp        controllers.uml.Uml.diagramDrawingWithHelp(exId: Int)
POST   /:exId/corr/diagramDrawingHelp   controllers.uml.Uml.correctDiagramDrawingWithHelp(exId: Int)

# Complete drawing of diagram without any help
GET    /:exId/diagramDrawing            controllers.uml.Uml.diagramDrawing(exId: Int)
POST   /:exId/corr/diagramDrawing       controllers.uml.Uml.correctDiagramDrawing(exId: Int)

# Test Matching of attrs and methods
GET    /:exId/matching                  controllers.uml.Uml.matching(exId: Int)
POST   /:exId/corr/matching             controllers.uml.Uml.correctMatching(exId: Int)