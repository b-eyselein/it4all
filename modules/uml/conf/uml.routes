# Administrator
GET    /admin                    controllers.uml.UmlAdmin.index()

GET    /jsonSchema               controllers.uml.UmlAdmin.getJSONSchemaFile()
POST   /upload                   controllers.uml.UmlAdmin.uploadFile()

GET    /import                   controllers.uml.UmlAdmin.importExercises()
GET    /export                   controllers.uml.UmlAdmin.exportExercises()

GET    /newEx/form               controllers.uml.UmlAdmin.newExerciseForm()
POST   /newEx/text               controllers.uml.UmlAdmin.newExerciseStep2()
POST   /newEx/solution           controllers.uml.UmlAdmin.newExerciseStep3()
POST   /newEx/create             controllers.uml.UmlAdmin.newExercise()

PUT    /newEx/checkSolution      controllers.uml.UmlAdmin.checkSolution()

# All
GET    /                         controllers.uml.UmlController.index()


# Step 1: selection of classes
GET    /classSelection/:id       controllers.uml.UmlController.classSelection(id: Int)
POST   /classSelection/:id       controllers.uml.UmlController.correctClassSelection(id: Int)

# Step 2: finalization of diagram
GET    /diagramDrawingHelp/:id   controllers.uml.UmlController.diagramDrawingWithHelp(id: Int)
POST   /diagramDrawingHelp/:id   controllers.uml.UmlController.correctDiagramDrawingWithHelp(id: Int)

# Complete drawing of diagram without any help
GET    /diagramDrawing/:id       controllers.uml.UmlController.diagramDrawing(id: Int)
POST   /diagramDrawing/:id       controllers.uml.UmlController.correctDiagramDrawing(id: Int)

# Test Matching of attrs and methods
GET    /matching/:id             controllers.uml.UmlController.matching(id: Int)
POST   /matching/:id             controllers.uml.UmlController.correctMatching(id: Int)