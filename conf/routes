# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                        controllers.Application.index

# User
GET           /myCourses                                               controllers.UserController.myCourses

GET           /preferences                                             controllers.UserController.preferences

PUT           /preferences/updateOptions                               controllers.UserController.saveShowHideAgg
PUT           /preferences/updatePassword                              controllers.UserController.saveNewPassword

# Controller
GET           /admin                                                   controllers.AdminController.index

GET           /admin/synchronize                                       controllers.AdminController.synchronize
GET           /admin/synchronize/:toolId                               controllers.AdminController.synchronizeTool(toolId: String)

GET           /users                                                   controllers.AdminController.users
PUT           /users/changeRole                                        controllers.AdminController.changeRole

GET           /courses                                                 controllers.AdminController.courses

# LTI Test
+ nocsrf
GET           /lti                                                     controllers.LTIController.honeypot
+ nocsrf
POST          /lti                                                     controllers.LTIController.honeypot

# Random tools

GET           /random/:toolType/:exPart                                controllers.RandomExerciseController.newExercise(toolType: String, exPart: String)
PUT           /random/:toolType/:exPart                                controllers.RandomExerciseController.correctLive(toolType: String, exPart: String)


# File tools
GET           /fileTools/:toolType/admin/import                        controllers.FileExerciseController.adminImportToRead(toolType: String)
GET           /fileTools/:toolType/admin/export                        controllers.FileExerciseController.adminExportExercises(toolType: String)
GET           /fileTools/:toolType/admin/exportFile                    controllers.FileExerciseController.adminExportExercisesAsFile(toolType: String)

GET           /fileTools/:toolType/admin/exerciseList                  controllers.FileExerciseController.adminExerciseList(toolType: String)
GET           /fileTools/:toolType/admin/newExForm                     controllers.FileExerciseController.adminNewExerciseForm(toolType: String)
PUT           /fileTools/:toolType/admin/exerciseList                  controllers.FileExerciseController.adminCreateExercise(toolType: String)
POST          /fileTools/:toolType/admin/exerciseList                  controllers.FileExerciseController.adminCreateExercise(toolType: String)

GET           /fileTools/:toolType/admin/exerciseList/:id              controllers.FileExerciseController.adminEditExerciseForm(toolType: String, id: Int)
PUT           /fileTools/:toolType/admin/exerciseList/:id              controllers.FileExerciseController.adminEditExercise(toolType: String, id: Int)
POST          /fileTools/:toolType/admin/exerciseList/:id              controllers.FileExerciseController.adminEditExercise(toolType: String, id: Int)
DELETE        /fileTools/:toolType/admin/exerciseList/:id              controllers.FileExerciseController.adminDeleteExercise(toolType: String, id: Int)

PUT           /fileTools/:toolType/admin/exercise/:id/state            controllers.FileExerciseController.adminChangeExState(toolType: String, id: Int)


GET           /fileTools/:toolType/exercises                           controllers.FileExerciseController.exerciseList(toolType: String, page: Int ?= 1)

GET           /fileTools/:toolType/templates/:id/:fileExtension        controllers.FileExerciseController.downloadTemplate(toolType: String, id: Int, fileExtension: String)
GET           /fileTools/:toolType/:id/:fileExtension                  controllers.FileExerciseController.exercise(toolType: String, id: Int, fileExtension: String)
POST          /fileTools/:toolType/:id/:fileExtension                  controllers.FileExerciseController.uploadSolution(toolType: String, id: Int, fileExtension: String)

GET           /fileTools/:toolType/corrected/:id/:part                 controllers.FileExerciseController.downloadCorrected(toolType: String, id: Int, part: String)

# Collection Tools
->            /colTools                                                coll.Routes

# Normal exercises
->            /tools                                                   exes.Routes

# Courses
GET           /courses/new                                             controllers.CourseAdminController.newCourseForm
POST          /courses/new                                             controllers.CourseAdminController.newCourse

GET           /course/:id                                              controllers.CourseAdminController.course(id: Int)
POST          /course/addController/:id                                controllers.CourseAdminController.addAdmin(id: Int)

# Login && Logout
GET           /register                                                controllers.LoginController.registerForm
POST          /register                                                controllers.LoginController.register

GET           /login                                                   controllers.LoginController.loginForm
POST          /authenticate                                            controllers.LoginController.authenticate

GET           /logout                                                  controllers.LoginController.logout

# Unified routes
GET           /:toolType/index                                         controllers.MainExerciseController.index(toolType: String)

GET           /:toolType/learningPaths/read                            controllers.MainExerciseController.readLearningPaths(toolType: String)
GET           /:toolType/learningPaths/:id                             controllers.MainExerciseController.learningPath(toolType: String, id: Int)

GET           /:toolType/playground                                    controllers.MainExerciseController.playground(toolType: String)

GET           /:toolType/evaluate                                      controllers.MainExerciseController.evaluate(toolType: String)
POST          /:toolType/submitEvaluation                              controllers.MainExerciseController.submitEvaluation(toolType: String)

GET           /:toolType/admin/index                                   controllers.MainExerciseController.adminIndex(toolType: String)

# Blockly test
GET           /blockly                                                 controllers.Application.blocklyTest

GET           /ideTest                                                 controllers.Application.ideTest
POST          /ideFiles                                                controllers.Application.ideFiles
PUT           /ideFiles                                                controllers.Application.uploadFiles

# Evaluation
GET           /eval/stats                                              controllers.AdminController.evaluationResults

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                            controllers.Assets.versioned(path="/public", file: Asset)
GET           /favicon.ico                                             controllers.Assets.at(path="/public", file="images/favicon.ico")
