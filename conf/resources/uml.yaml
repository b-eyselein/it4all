%YAML 1.2
---
id: 1
title: Krankenhaus
author: bje40dc
text: >
  Ein Krankenhaus besteht aus Stationen mit einer eindeutigen Nummer. Jede Station hat einen oder mehrere Doktoren,
  Krankenschwestern und Patienten. Jede Person hat jeweils eine eindeutige Id und einen Namen. Ein Doktor kann dem
  Patienten ein Rezept mit einer eindeutigen Id verschreiben, das ein oder mehrere Medikamente beinhalten kann.
  Ein Medikament hat eine eindeutige Id und einen Namen. Ein Patient wiederum kann in einer Station aufgenommen bzw.
  entlassen werden.
status: CREATED

mappings:
- key: Stationen
  value: Station
- key: Doktoren
  value: Doktor
- key: Krankenschwestern
  value: Krankenschwester
- key: Patienten
  value: Patient
- key: Namen
  value: Name
- key: Medikamente
  value: Medikament

ignoreWords: ['Ein', 'Jede']

solution:
  classes:
  - classType: ABSTRACT
    name: Person
    methods: []
    attributes:
    - name: id
      type: String
    - name: name
      type: String
    
  - classType: CLASS
    name: Doktor
    methods: 
    - name: verschreiben(Patient)
      returns: void
    attributes: []
    
  - classType: CLASS
    name: Rezept
    methods: []
    attributes:
    - name: id
      type: String
    
  - classType: CLASS
    name: Patient
    methods:
    - name: entlassen(Station)
      returns: void
    - name: aufnehmen(Station)
      returns: void
    attributes: []
    
  - classType: CLASS
    name: Krankenschwester
    methods: []
    attributes: []
    
  - classType: CLASS
    name: Station
    methods: []
    attributes:
    - name: nummer
      type: int
    
  - classType: CLASS
    name: Medikament
    methods: []
    attributes:
    - name: id
      type: String
    - name: name
      type: String
    
  - classType: CLASS
    name: Krankenhaus
    methods: []
    attributes: []
    
  implementations:
  - subClass: Patient
    superClass: Person
  - subClass: Doktor
    superClass: Person
  - subClass: Krankenschwester
    superClass: Person
    
  associations:
  - assocType: ASSOCIATION
    firstEnd: Doktor
    firstMult: SINGLE
    secondEnd: Rezept
    secondMult: UNBOUND
      
  - assocType: ASSOCIATION
    firstEnd: Doktor
    firstMult: SINGLE
    secondEnd: Patient
    secondMult: UNBOUND
    
  - assocType: ASSOCIATION
    firstEnd: Station
    firstMult: SINGLE
    secondEnd: Patient
    secondMult: UNBOUND

  - assocType: ASSOCIATION
    firstEnd: Station
    firstMult: SINGLE
    secondEnd: Krankenschwester
    secondMult: UNBOUND

  - assocType: ASSOCIATION
    firstEnd: Station
    firstMult: SINGLE
    secondEnd: Doktor
    secondMult: UNBOUND

  - assocType: ASSOCIATION
    firstEnd: Patient
    firstMult: SINGLE
    secondEnd: Rezept
    secondMult: UNBOUND

  - assocType: ASSOCIATION
    firstEnd: Rezept
    firstMult: SINGLE
    secondEnd: Medikament
    secondMult: UNBOUND

  - assocType: COMPOSITION
    firstEnd: Krankenhaus
    firstMult: SINGLE
    secondEnd: Station
    secondMult: UNBOUND
---

id: 2
title: Gärtner
author: bje40dc
text: >
      Sie sollen für den Gärtner ihres Vertrauens ein Programm zur Verwaltung der Produktion erstellen. In diesem
      soll jede Pflanze, die in einem der Gewächshäuser wächst, registriert werden. Jede Pflanze hat einen Typ,
      der die genaue Spezies angibt. Bei jeder Spezie soll die Möglichkeit gegeben sein, diese zu gießen.
      Dieser Typ wird durch einen einzigartigen Code spezifiziert. Außerdem wird der lateinische und deutsche Name
      des Typs gespeichert. Für jede Pflanze soll außerdem die Nummer des Gewächshauses und die Position (als Reihe
      und Spalte, da die Gewächshäuser jeweils in Koordinaten eingeteilt sind) gespeichert werden. Pflanzentypen werden
      in folgende Untertypen unterschieden: Bäume, Blumen und Nutzpflanzen. Für Bäume wird die durchschnittliche
      Höhe gespeichert, ob sie immergrün sind und der Gärtner soll in regelmäßigen Abständen den Baum stutzen
      kontrollieren. Für Blumen die Blütenfarbe vermerkt werden. Bei Nutzpflanzen wird der Beginn und das Ende der
      Erntezeit gespeichert und zwischen Obst und Gemüse unterschieden. Für Obst soll ersichtlich sein, ob ein Kern
      enthalten ist, für Gemüse, ob es zweijährig ist. Bei Blumen und Nutzpflanzen soll außerdem ein Hinweis gespeichert
      werden, wann die Pflanzen gegossen werden sollen.
status: CREATED

mappings:
- key: Vertrauens
  value: Vertrauen
- key: Gewächshäuser
  value: Gewächshaus
- key: Typs
  value: Typ
- key: Koordinaten
  value: Koordinate
- key: Pflanzentypen
  value: Pflanzentyp
- key: Untertypen
  value: Untertyp
- key: Bäume
  value: Baum
- key: Blumen
  value: Blume
- key: Nutzpflanzen
  value: Nutzpflanze
- key: Blütenfarben
  value: Blützenfarbe
- key: Pflanzen
  value: Pflanze

ignoreWords: ['Sie', 'Jede', 'In', 'Dieser', 'Außerdem', 'Für', 'Bei']

solution:
  classes:
  - classType: ABSTRACT
    name: Pflanze
    methods: []
    attributes: []

  - classType: ABSTRACT
    name: Baum
    methods: []
    attributes: []

  implementations:
  - subClass: Baum
    superClass: Pflanze

  associations: [
  ]

