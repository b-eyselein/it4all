%YAML 1.2
---
author: bje40dc
text: |
  Erstellen Sie eine Liste in HTML, die die die Autohersteller Audi, BMW und Mercedes-Benz und Volkswagen enthält. Achten Sie dabei für die Korrektur auf eine korrekte Schreibweise der einzelnen Hersteller!
id: 1
status: ACCEPTED
title: Listen in Html
htmlTasks:
- id: 1
  text: |
    Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL '/assets/lib/bootstrap/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'!
  xpathQuery: /html/head/link
  attributes:
  - {key: href, value: /assets/lib/bootstrap/css/bootstrap.css}
  - {key: rel, value: stylesheet}
- id: 2
  text: Erstellen Sie eine passende h1-Überschrift, die das Wort 'Autohersteller' enthält.
  xpathQuery: /html/body//h1
  textContent: Autohersteller
- id: 3
  text: |
    Erstellen Sie eine ungeordnete Liste auf der Seite, die dann die einzelnen Hersteller enthalten wird. Geben Sie dieser Liste die Klasse 'list-group'.
  xpathQuery: /html/body//ul
  attributes:
  - {key: class, value: list-group}
- id: 4
  text: Erstellen Sie das Listenelement für Audi. Geben Sie diesem Element die Klasse 'list-group-item'.
  textContent: Audi
  attributes:
  - {key: class, value: list-group-item}
  xpathQuery: /html/body//ul/li[contains(text(), 'Audi')]
- id: 5
  text: Erstellen Sie das Listenelement für BMW. Geben Sie diesem Element die Klasse 'list-group-item'.
  textContent: BMW
  attributes:
  - {key: class, value: list-group-item}
  xpathQuery: /html/body//ul/li[contains(text(), 'BMW')]
- id: 6
  text: Erstellen Sie das Listenelement für Mercedes. Geben Sie diesem Element die Klasse 'list-group-item'.
  textContent: Mercedes
  attributes:
  - {key: class, value: list-group-item}
  xpathQuery: /html/body//ul/li[contains(text(), 'Mercedes')]
- id: 7
  text: Erstellen Sie das Listenelement für Volkswagen. Geben Sie diesem Element die Klasse 'list-group-item'.
  textContent: Volkswagen
  attributes:
  - {key: class, value: list-group-item}
  xpathQuery: /html/body//ul/li[contains(text(), 'Volkswagen')]
---
author: bje40dc
text: Erstellen Sie eine Tabelle in Html!
id: 2
status: ACCEPTED
title: Tabellen in Html
htmlTasks:
- id: 1
  text: |
    Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL '/assets/lib/bootstrap/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'
  xpathQuery: /html/head//link
  attributes:
  - {key: href, value: /assets/lib/bootstrap/css/bootstrap.css}
  - {key: rel, value: stylesheet}
- id: 2
  text: Erstellen Sie das Grundtag für die Tabelle Geben Sie der Tabelle die Klassen 'table' und 'table-striped'.
  xpathQuery: /html/body//table
  attributes:
  - {key: class, value: table table-striped}
- id: 3
  text: Erstellen Sie die erste Zeile für die Überschriften
  xpathQuery: /html/body//table//tr[1]
- id: 4
  text: Erstellen Sie die erste Zelle für die Überschrift. Diese soll als Inhalt 'Jahr' haben
  xpathQuery: html/body//table//tr[1]/th[1]
  textContent: 'Jahr'
- id: 5
  text: Erstellen Sie die zweite Zelle für die Überschrift. Diese soll als Inhalt 'Produktion' haben
  xpathQuery: html/body//table//tr[1]/th[2]
  textContent: 'Produktion'
- id: 6
  text: Erstellen Sie die zweite Zeile in der Tabelle
  xpathQuery: /html/body//table//tr[2]
- id: 7
  text: Erstellen Sie die erste Zelle in der zweiten Zeile. Diese soll als Inhalt '1900' haben
  xpathQuery: html/body//table//tr[2]/td[1]
  textContent: '1900'
- id: 8
  text: Erstellen Sie die zweite Zelle in der zweiten Zeile. Diese soll als Inhalt '9504' haben
  xpathQuery: html/body//table//tr[2]/td[2]
  textContent: '9504'
- id: 9
  text: Erstellen Sie die dritte Zeile in der Tabelle
  xpathQuery: /html/body//table//tr[3]
- id: 10
  text: Erstellen Sie die erste Zelle in der dritten Zeile. Diese soll als Inhalt '1950' haben
  xpathQuery: html/body//table//tr[3]/td[1]
  textContent: '1950'
- id: 11
  text: Erstellen Sie die zweite Zelle in der dritten Zeile. Diese soll als Inhalt '10577426' haben
  xpathQuery: html/body//table//tr[3]/td[2]
  textContent: '10577426'
- id: 12
  text: Erstellen Sie die vierte Zeile in der Tabelle
  xpathQuery: /html/body//table//tr[4]
- id: 13
  text: Erstellen Sie die erste Zelle in der vierten Zeile. Diese soll als Inhalt '2000' haben
  xpathQuery: html/body//table//tr[4]/td[1]
  textContent: '2000'
- id: 14
  text: Erstellen Sie die zweite Zelle in der vierten Zeile. Diese soll als Inhalt '58374162' haben
  xpathQuery: html/body//table//tr[4]/td[2]
  textContent: '58374162'
---
author: bje40dc
id: 3
title: Hyperlinks und Bilder in HTML
text: Erstellen Sie ein Bild in HTML, das gleichzeitig ein Link ist.
status: ACCEPTED
htmlTasks:
- id: 1
  text: >
    Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL
    '/assets/lib/bootstrap/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'
  xpathQuery: /html/head//link
  attributes:
  - {key: rel, value: stylesheet}
  - {key: href, value: /assets/lib/bootstrap/css/bootstrap.css}
- id: 2
  text: Erstellen Sie eine passende h1-Überschrift, die 'Ford Mustang' enthält.
  xpathQuery: /html/body//h1
  textContent: Ford Mustang
- id: 3
  text: >
    "Erstellen Sie den Link auf der Seite, der auf Wikipedia verweist. Geben Sie als Ziel die URL 'https://de.wikipedia.org/wiki/Ford_Mustang' an."
  xpathQuery: /html/body//a
  attributes:
  - {key: href, value: 'https://de.wikipedia.org/wiki/Ford_Mustang'}
- id: 4
  text: >
    Erstellen Sie im Link das Bild des Ford Mustang. Geben Sie als Quelle des Bildes die URL 
    'https://upload.wikimedia.org/wikipedia/commons/2/2d/1964_12_Ford_Mustang.jpg' und als alternative Beschreibung
    'Ford Mustang' an. Geben Sie außerdem eine Breite von 250 und eine Höhe von 188 an, um das Bild zu skalieren.
     Geben Sie dem Bild die Klasse 'img-rounded'.
  xpathQuery: /html/body//a//img
  attributes:
  - {key: src, value: 'https://upload.wikimedia.org/wikipedia/commons/2/2d/1964_12_Ford_Mustang.jpg'}
  - {key: alt, value: Ford Mustang}
  - {key: width, value: '250'}
  - {key: height, value: '188'}
  - {key: class, value: img-rounded}
---
author: bje40dc
id: 4
title: Login-Formular
text: Erstellen Sie ein Login-Formular in HTML
status: ACCEPTED
htmlTasks:
- id: 1
  text: |
    Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL '/assets/lib/bootstrap/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'
  xpathQuery: /html/head//link
  attributes:
  - {key: rel, value: stylesheet}
  - {key: href, value: /assets/lib/bootstrap/css/bootstrap.css}
- id: 2
  text: >
    Erstellen Sie das Formular-Tag. Geben Sie für die Attribute 'action' und 'method' jeweils die 
    Werte '/test.php' und 'post' an.
  xpathQuery: /html/body//form
  attributes:
  - {key: action, value: /test.php}
  - {key: method, value: post}
- id: 3
  text: >
    Erstellen Sie ein Feld zur Eingabe der Emailadresse. Benutzen Sie den in der Vorlesung gezeigten Typen
    und geben Sie dem Attribut 'name' den Wert 'email'. Die Eingabe soll außerdem required sein. Geben Sie dem
    Feld zur Eingabe der Emailadressedie Klasse 'form-control'.
  xpathQuery: /html/body//form//input[@type='email']
  attributes:
  - {key: name, value: email}
  - {key: required, value: 'true'}
  - {key: class, value: form-control}
- id: 4
  text: >
    Erstellen Sie ein Feld zur Eingabe des Passworts. Benutzen Sie den in der Vorlesung gezeigten Typen und
    geben Sie dem Attribut 'name' den Wert 'passwort'. Die Eingabe soll außerdem verpflichtend sein. Geben
    Sie dem Feld zur Eingabe des Passworts Klasse 'form-control'.
  xpathQuery: /html/body//form//input[@type='password']
  attributes:
  - {key: name, value: passwort}
  - {key: required, value: 'true'}
  - {key: class, value: form-control}
- id: 5
  text: |
    Erstellen Sie einen Knopf (input) um das Formular abzusenden. Geben Sie den Knopf zum Absenden des Formular die Klasse 'btn btn-default'
  xpathQuery: /html/body//form//input[@type='submit']
  attributes:
  - {key: class, value: btn btn-default}
---
author: bje40dc
id: 5
title: Audio in HTML 5
text: Erstellen Sie ein Audio-Element in Html5!
status: ACCEPTED
htmlTasks:
- id: 1
  text: Erstellen Sie eine passende h1-Überschrift die 'Deutsche Nationalhymne' enthält.
  xpathQuery: /html/body//h1
  textContent: Deutsche Nationalhymne
- id: 2
  text: |
    Erstellen Sie das Grundelement für die Audiodatei. Aktivieren Sie die Kontrollelement. Falls der Browser keine Audiodateiene unterstützt soll der Text 'Ihr Browser unterstützt kein Audio!' ausgegeben werden
  xpathQuery: /html/body//audio
  attributes:
  - {key: controls, value: 'true'}
  textContent: Ihr Browser unterstützt kein Audio!
- id: 3
  text:
    Erstellen Sie das Element für die Quelldatei. Diese ist vom Typ 'audio/ogg' und befindet sich an der URL 'https://upload.wikimedia.org/wikipedia/commons/c/cb/National_anthem_of_Germany_-_U.S._Army_1st_Armored_Division_Band.ogg'
  xpathQuery: /html/body//audio/source
  attributes:
  - {key: type, value: audio/ogg}
  - {key: src, value: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/National_anthem_of_Germany_-_U.S._Army_1st_Armored_Division_Band.ogg'}
---
id: 6
title: Klickzähler
author: bje40dc
text: Erstellen Sie einen Zähler der die Klicks auf einen Button zählt!
status: ACCEPTED
htmlText: Erstellen Sie zunächst den Rumpf der Seite in HTML.
jsText: >
  Implementieren Sie nun die Funktion <code>increment()</code> die aufgerufen wird wenn auf den Knopf
  gedrückt wird. Sie soll den Inhalt (innerHTML) des Elementes mit der id 'theSpan' auslesen und um 1 erhöhen.
  Sie können die Funktion <code>parseInt(str)</code> verwenden um einen String in eine Ganzzahl umzuwandeln.
htmlTasks:
- id: 1
  text: |
    Erstellen Sie einen Button auf den geklickt wird. Dieser soll als Text 'Klick mich!' haben. Außerdem soll beim Klick die Funktion 'increment()' aufgerufen werden.
  xpathQuery: /html/body//button
  attributes:
  - {key: onclick, value: increment()}
  textContent: Klick mich!
- id: 2
  text: |
    Erstellen Sie einen Span mit der ID 'theSpan' in dem die Anzahl der Klicks angezeigt werden. Zu Anfang soll dieser eine 0 anzeigen.
  xpathQuery: /html/body//span[@id='theSpan']
  textContent: '0'
jsTasks:
- id: 1
  text: Test 1
  xpathQuery: /html/body//button
  actiontype: CLICK
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: true
    awaitedValue: 0
  - id: 2
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: false
    awaitedValue: 1
- id: 2
  text: Test 2
  xpathQuery: /html/body//button
  actiontype: CLICK
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: true
    awaitedValue: 1

  - id: 2
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: false
    awaitedValue: 2
- id: 3
  text: Test 3
  xpathQuery: /html/body//button
  actiontype: CLICK
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: true
    awaitedValue: 2

  - id: 2
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: false
    awaitedValue: 3
- id: 4
  text: Test 4
  xpathQuery: /html/body//button
  actiontype: CLICK
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: true
    awaitedValue: 3
  - id: 2
    xpathQuery: /html/body//span[@id='theSpan']
    isPrecondition: false
    awaitedValue: 4
---
id: 7
title: Verzweigungen und Strings
author: alg81dm
text: Erstellen Sie ein Anmeldeformular, das eine einfache Passwort-Qualitätsprüfung durchführt.
htmlText: Erstellen Sie zunächst den Rumpf der Seite in HTML.
status: ACCEPTED
jsText: >
  Implementieren Sie nun die Funktion <code>passwordStrength()</code>, die bei Änderung des Felds aufgerufen wird. Sie
  soll den Inhalt (value) des Passwortfeldes auslesen und verschiedene Tests durchführen. Bei fehlgeschlagenen Tests
  soll der Inhalt des Elements mit der ID 'errors' auf den entsprechenden Text gesetzt werden. Es soll immer nur der
  erste fehlgeschlagene Test (in der Reihenfolge der Teilaufgaben) beachtet werden. Wenn kein Test fehlschlägt,
  soll der Fehlertext gelöscht werden (auf '' setzen). Wenn das Passwort unter 8 Zeichen lang ist, soll der Fehlertext
  'Zu kurz' lauten. Wenn die Eingabe den Teilstring 'passwort' enthält, soll 'Zu einfach' gesetzt werden.
htmlTasks:
- id: 1
  text: Erstellen Sie ein Texteingabefeld mit der ID 'name'
  xpathQuery: /html/body//input[@id='name']
  attributes:
  - {key: type, value: text}
- id: 2
  text: Erstellen Sie ein Passworteingabefeld mit der ID 'password'
  xpathQuery: /html/body//input[@id='password']
  attributes:
  - {key: type, value: password}
- id: 3
  text: Bei Änderung des Passwortfeldes (onchange) soll die Funktion 'passwordStrength()' aufgerufen werden.
  xpathQuery: /html/body//input[@id='password']
  attributes:
  - {key: onchange, value: passwordStrength()}
- id: 4
  text: >
    Erstellen Sie einen Span mit der ID 'errors', der später anzeigen soll, wenn das Passwort zu schwach ist. Zu Anfang
    soll dieser leer sein.
  xpathQuery: /html/body//span[@id='errors']
jsTasks:
- id: 1
  text: Wenn das Passwort unter 8 Zeichen lang ist, setze den Fehlertext auf 'Zu kurz'
  xpathQuery: /html/body//input[@id='password']
  actiontype: FILLOUT
  keysToSend: 123
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='errors']
    isPrecondition: false
    awaitedValue: Zu kurz
- id: 2
  text: Wenn das Passwort 'passwort' enthält, setze den Fehlertext auf 'Zu einfach'
  xpathQuery: /html/body//input[@id='password']
  actiontype: FILLOUT
  keysToSend: meinpasswort
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='errors']
    isPrecondition: false
    awaitedValue: Zu einfach
- id: 3
  text: Für alle anderen Passwörter soll das Fehlerfeld geleert (auf '' gesetzt) werden
  actiontype: FILLOUT
  xpathQuery: /html/body//input[@id='password']
  keysToSend: GanzGanzSicherUndGeheim
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='errors']
    isPrecondition: false
    awaitedValue: ''
---
id: 8
title: Schleifen
author: alg81dm
text: Erstellen Sie ein einfaches Formular zur Berechnung der Fakultät einer Zahl n (alle Zahlen von 1 bis n multipliziert).
htmlText: Erstellen Sie zunächst den Rumpf der Seite in HTML.
status: ACCEPTED
jsText: >
  Implementieren Sie nun die Funktion <code>fakultaet()</code>, die bei Änderung des Felds aufgerufen wird. Sie soll
  den Inhalt (value) des Eingabefeldes auslesen, die Fakultät davon berechnen und den Inhalt (textContent) des Elements
  mit der ID 'result' auf das Ergebnis setzen
htmlTasks:
- id: 1
  text: Erstellen Sie ein Zahlen-Eingabefeld mit der ID 'number'
  xpathQuery: /html/body//input[@id='number']
  attributes:
  - {key: type, value: number}
- id: 2
  text: Bei Änderung des Feldes (onchange) soll die Funktion 'fakultaet()' aufgerufen werden.
  xpathQuery: /html/body//input[@id='number']
  attributes:
  - {key: onchange, value: fakultaet()}
- id: 3
  text: Erstellen Sie einen Span mit der ID 'result', in dem das Ergebnis der Berechnung stehen soll. Zu Anfang soll dieser leer sein.
  xpathQuery: /html/body//span[@id='result']
jsTasks:
- id: 1
  text: Fakultät von 1 muss 1 sein
  actiontype: FILLOUT
  xpathQuery: /html/body//input[@id='number']
  keysToSend: 1
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='result']
    isPrecondition: false
    awaitedValue: 1
- id: 2
  text: Fakultät von 3 muss 6 sein
  actiontype: FILLOUT
  xpathQuery: /html/body//input[@id='number']
  keysToSend: 3
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='result']
    isPrecondition: false
    awaitedValue: 6
- id: 3
  text: Fakultät von 6 muss 720 sein
  actiontype: FILLOUT
  xpathQuery: /html/body//input[@id='number']
  keysToSend: 6
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='result']
    isPrecondition: false
    awaitedValue: 720
- id: 4
  text: Fakultät von 10 muss 3628800 sein
  actiontype: FILLOUT
  xpathQuery: /html/body//input[@id='number']
  keysToSend: 10
  conditions:
  - id: 1
    xpathQuery: /html/body//span[@id='result']
    isPrecondition: false
    awaitedValue: 3628800