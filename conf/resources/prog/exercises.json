[
	{
		"id": 1, 
		"title": "Summen", 
		"text": "Implementieren Sie folgende Funktion <code>sum(a, b)</code>, die zwei Zahlen entegennimmt und deren Summe zurückgibt.", 
		"functionName": "sum", 
		"inputCount": 2, 
		"jsSample": "function sum(a, b) {\n return a + b;\n}", 
		"pythonSample": "def sum(a, b):\n  return a + b", 
		"sampleTestData": [
			{
				"key": {
					"testId": 1, 
					"exerciseId": 1
				}, 
				"input": "1#1", 
				"output": 2
			}, 
			{
				"key": {
					"testId": 2, 
					"exerciseId": 1
				}, 
				"input": "1#2", 
				"output": 3
			}, 
			{
				"key": {
					"testId": 3, 
					"exerciseId": 1
				}, 
				"input": "44#43", 
				"output": 87
			}, 
			{
				"key": {
					"testId": 4, 
					"exerciseId": 1
				}, 
				"input": "555.0#42", 
				"output": 597.0
			}
		]
	}, 
	{
		"id": 2, 
		"title": "Konkatenation von Strings", 
		"text": "Implementieren Sie die folgende Funktion <code>concat(str1, str2, str3)</code>, die drei beliebige Strings entgegennimmt und die Konkatenation der Strings zurückgibt.", 
		"functionName": "concat", 
		"jsSample": "function concat(a, b, c) {\n  return a + b + c;\n}", 
		"pythonSample": "def concat(a, b, c):\nreturn a + b + c", 
		"inputCount": 3, 
		"sampleTestData": [
			{
				"key": {
					"testId": 1, 
					"exerciseId": 2
				}, 
				"input": "'Hallo '#'Welt'#'!'", 
				"output": "'Hallo Welt!'"
			}, 
			{
				"key": {
					"testId": 2, 
					"exerciseId": 2
				}, 
				"input": "'Test'#'Test'#'Test'", 
				"output": "'TestTestTest'"
			}
		]
	}, 
	{
		"id": 3, 
		"title": "Größter gemeinsamer Teiler", 
		"text": "Implementieren Sie die folgende Funktion <code>ggt(a, b)</code>, die den größten gemeinsamen Teiler zweier Zahlen berechnet!", 
		"functionName": "ggt", 
		"jsSample": "function ggt(a, b) {\n  while(b != 0) {\n    var h = a % b;\n    a = b;\n    b = h;\n  }\n  return a;\n}", 
		"pythonSample": "def ggt(a, b):\n while b != 0:\n    h = a % b\n    a = b\n    b = h\n  return a", 
		"inputCount": 2, 
		"sampleTestData": [
			{
				"key": {
					"testId": 1, 
					"exerciseId": 3
				}, 
				"input": "12#4", 
				"output": 4
			}, 
			{
				"key": {
					"testId": 2, 
					"exerciseId": 3
				}, 
				"input": "3#7", 
				"output": 1
			}, 
			{
				"key": {
					"testId": 3, 
					"exerciseId": 3
				}, 
				"input": "64#46", 
				"output": 2
			}, 
			{
				"key": {
					"testId": 4, 
					"exerciseId": 3
				}, 
				"input": "777#777", 
				"output": 777
			}, 
			{
				"key": {
					"testId": 5, 
					"exerciseId": 3
				}, 
				"input": "15#25", 
				"output": 5
			}
		]
	}
]