%YAML 1.2
---
id: 1
title: Größter gemeinsamer Teiler
author: bje40dc
text: >
  Implementieren Sie die folgende Funktion <code>ggt(a, b)</code> die den größten gemeinsamen Teiler
  zweier Zahlen berechnet!
status: APPROVED
functionName: ggt
inputTypes:
- {id: 1, name: a, type: int}
- {id: 2, name: b, type: int}
outputType: int

sampleSolution:
  language: PYTHON_3
  sample: |
    def ggt(a, b):
      while b != 0:
        h = a % b
        a = b
        b = h
      return a
sampleTestData:
- id: 1
  inputs:
  - {id: 1, input: 12}
  - {id: 2, input: 4}
  output: 4

- id: 2
  inputs:
  - {id: 1, input: 3}
  - {id: 2, input: 7}
  output: 1

- id: 3
  inputs:
  - {id: 1, input: 64}
  - {id: 2, input: 46}
  output: 2

- id: 4
  inputs:
  - {id: 1, input: 777}
  - {id: 2, input: 11}
  output: 11

- id: 5
  inputs:
  - {id: 1, input: 15}
  - {id: 2, input: 25}
  output: 5
---
id: 2
title: Durchschnitt
author: bje40dc
text: >
  Berechnen Sie den Durchschnittswert aller Elemente als Gleitkommazahl in der übergebenen Liste von (Ganz-)Zahlen!
  Bei einer leeren Liste soll der String 'Fehler' ausgegeben werden.
status: APPROVED
functionName: average
inputTypes:
- {id: 1, name: myList, type: list<int>}
outputType: float

sampleSolution:
  language: PYTHON
  sample: |
    def average(myList):
      return sum(list) / float(len(list))
sampleTestData:
- id: 1
  inputs:
  - {id: 1, input: []}
  output: Fehler
- id: 2
  inputs:
  - {id: 1, input: [1]}
  output: 1.
- id: 3
  inputs:
  - {id: 1, input: [3, 5, 7]}
  output: 5.
---
id: 3
title: Längste Zeichenkette
author: bje40dc
text: >
  Suchen Sie aus einer Liste von Zeichenketten jeweils die längste heraus! Bei einer leeren Liste soll der leere String zurückgegeben werden.
  Ignorieren Sie dabei Groß- und Kleinschreibung.
status: APPROVED
functionName: longestString
inputTypes:
- {id: 1, name: myList, type: list<string>}
outputType: string

sampleSolution:
  language: PYTHON
  sample: |
    def longestString(myList):
      longest = a[0]

      for string in a:
        if len(string) > len(longest):
          longest = string

      return longest
sampleTestData:
- id: 1
  inputs:
  - {id: 1, input: []}
  output: ""
- id: 2
  inputs:
  - {id: 1, input: ["0"]}
  output: "0"
- id: 3
  inputs:
  - {id: 1, input: ["1", "11", "111"]}
  output: "111"
---
id: 4
title: Palindrom
author: bje40dc
text: >
  Erstellen Sie ein Aktivitätsdiagramm, der prüft ob der übergebene String ein Palindrom darstellt! Ein leerer String ist für diese Aufgabe auch ein Palindrom.
  Ihr Programm soll Groß- und Kleinschreibung ignorieren, d. h. 'a' == 'A'.
status: APPROVED
functionName: palindrom
inputTypes:
- {id: 1, name: word, type: string}
outputType: boolean
sampleSolution:
  language: PYTHON_3
  sample: |
    def isPalindrome(word):
      for i in range(len(word) // 2):
        if word[i] != word[-i-1]:
          return False
      return True
sampleTestData:
- id: 1
  inputs:
  - {id: 1, input: "anna"}
  output: true
- id: 2
  inputs:
  - {id: 1, input: "ananas"}
  output: false
- id: 3
  inputs:
  - {id: 1, input: ""}
  output: true
- id: 4
  inputs:
  - {id: 1, input: "qwertzuiiuztrewq"}
  output: true
- id: 5
  inputs:
  - {id: 1, input: "qwertzuiyiuztrewq"}
  output: true
- id: 6
  inputs:
  - {id: 1, input: "Tacocat"}
  output: true