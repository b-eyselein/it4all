- id: 1
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Listen in Html
  author: bje40dc
  text: >
    Erstellen Sie eine Liste in HTML, die die Autohersteller Audi, BMW und Mercedes-Benz und Volkswagen enthält.
    Achten Sie dabei für die Korrektur auf eine korrekte Schreibweise der einzelnen Hersteller!
  status: APPROVED
  fileName: carList.html

  files:
    - path: carList.html
      resourcePath: web/1-html_elements/1-carList/carList.html
      fileType: htmlmixed
    - path: carListStyle.css
      resourcePath: web/1-html_elements/1-carList/carListStyle.css
      fileType: css
      editable: false

  htmlTasks:
    - id: 1
      text: >
        Binden Sie die vorgegebene Style-Datei 'carListStyle.css' ein. Die entsprechende Datei ist unter der URL
        'carListStyle.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'!
      elementSpec:
        xpathQuery: /html/head/link
        awaitedTag: link
        attributes:
          - {key: href, value: 'carListStyle.css'}
          - {key: rel, value: stylesheet}

    - id: 2
      text: Erstellen Sie eine passende h1-Überschrift, die das Wort 'Autohersteller' enthält.
      elementSpec: {xpathQuery: '/html/body//h1', awaitedTag: 'h1', textContent: 'Autohersteller'}

    - id: 3
      text: >
        Erstellen Sie eine ungeordnete Liste auf der Seite, die dann die einzelnen Hersteller enthalten wird.
        Geben Sie dieser Liste die Klasse 'list-group'.
      elementSpec: {xpathQuery: '/html/body//ul', awaitedTag: 'ul', attributes: [{key: class, value: list-group}]}

    - id: 4
      text: Erstellen Sie das Listenelement für Audi. Geben Sie diesem Element die Klasse 'list-group-item'.
      elementSpec:
        xpathQuery: /html/body//ul/li[contains(text(), 'Audi')]
        awaitedTag: li
        textContent: Audi
        attributes:
          - {key: class, value: list-group-item}

    - id: 5
      text: Erstellen Sie das Listenelement für BMW. Geben Sie diesem Element die Klasse 'list-group-item'.
      elementSpec:
        xpathQuery: /html/body//ul/li[contains(text(), 'BMW')]
        awaitedTag: li
        textContent: BMW
        attributes:
          - {key: class, value: list-group-item}

    - id: 6
      text: Erstellen Sie das Listenelement für Mercedes. Geben Sie diesem Element die Klasse 'list-group-item'.
      elementSpec:
        xpathQuery: /html/body//ul/li[contains(text(), 'Mercedes')]
        awaitedTag: li
        textContent: Mercedes
        attributes:
          - {key: class, value: list-group-item}

    - id: 7
      text: Erstellen Sie das Listenelement für Volkswagen. Geben Sie diesem Element die Klasse 'list-group-item'.
      elementSpec:
        xpathQuery: /html/body//ul/li[contains(text(), 'Volkswagen')]
        awaitedTag: li
        textContent: Volkswagen
        attributes:
          - {key: class, value: list-group-item}

  jsTasks: []

  samples:
    - id: 1
      files:
        name: carList.html
        content: |
          <!doctype html>
          <html>
            <head>
              <title>Musterlösung Aufgabe 1</title>
              <link rel="stylesheet"
                href="/assets/lib/bootstrap/dist/css/bootstrap.css">
            </head>
            <body>
              <h1>Autohersteller</h1>
              <ul class="list-group">
                <li class="list-group-item">Audi</li>
                <li class="list-group-item">BMW</li>
                <li class="list-group-item">Mercedes-Benz</li>
                <li class="list-group-item">Volkswagen</li>
              </ul>
            </body>
          </html>

- id: 2
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Tabellen in Html
  author: bje40dc
  text: Erstellen Sie eine Tabelle in Html!
  status: APPROVED
  fileName: production.html

  files:
    - path: production.html
      resourcePath: web/1-html_elements/2-production/production.html
      fileType: htmlmixed
    - path: style.css
      resourcePath: web/1-html_elements/2-production/productionStyle.css
      fileType: css

  htmlTasks:
    - id: 1
      text: >
        Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL '/assets/lib/bootstrap/dist/css/bootstrap.css'
        zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'.
      elementSpec:
        xpathQuery: /html/head//link
        awaitedTag: link
        attributes:
          - {key: href, value: /assets/lib/bootstrap/dist/css/bootstrap.css}
          - {key: rel, value: stylesheet}

    - id: 2
      text: Erstellen Sie das Grundtag für die Tabelle Geben Sie der Tabelle die Klassen 'table' und 'table-striped'.
      elementSpec:
        xpathQuery: /html/body//table
        awaitedTag: table
        attributes:
          - {key: class, value: table table-striped}

    - id: 3
      text: Erstellen Sie die erste Zeile für die Überschriften
      elementSpec: {xpathQuery: '/html/body//table//tr[1]', awaitedTag: 'tr'}

    - id: 4
      text: Erstellen Sie die erste Zelle für die Überschrift. Diese soll als Inhalt 'Jahr' haben
      elementSpec:
        xpathQuery: html/body//table//tr[1]/th[1]
        awaitedTag: th
        textContent: 'Jahr'

    - id: 5
      text: Erstellen Sie die zweite Zelle für die Überschrift. Diese soll als Inhalt 'Produktion' haben
      elementSpec:
        xpathQuery: html/body//table//tr[1]/th[2]
        awaitedTag: th
        textContent: 'Produktion'

    - id: 6
      text: Erstellen Sie die zweite Zeile in der Tabelle
      elementSpec: {xpathQuery: '/html/body//table//tr[2]', awaitedTag: 'tr'}

    - id: 7
      text: Erstellen Sie die erste Zelle in der zweiten Zeile. Diese soll als Inhalt '1900' haben
      elementSpec:
        xpathQuery: html/body//table//tr[2]/td[1]
        awaitedTag: td
        textContent: '1900'

    - id: 8
      text: Erstellen Sie die zweite Zelle in der zweiten Zeile. Diese soll als Inhalt '9504' haben
      elementSpec:
        xpathQuery: html/body//table//tr[2]/td[2]
        awaitedTag: td
        textContent: '9504'

    - id: 9
      text: Erstellen Sie die dritte Zeile in der Tabelle
      elementSpec: {xpathQuery: '/html/body//table//tr[3]', awaitedTag: 'tr'}

    - id: 10
      text: Erstellen Sie die erste Zelle in der dritten Zeile. Diese soll als Inhalt '1950' haben
      elementSpec:
        xpathQuery: html/body//table//tr[3]/td[1]
        awaitedTag: td
        textContent: '1950'

    - id: 11
      text: Erstellen Sie die zweite Zelle in der dritten Zeile. Diese soll als Inhalt '10577426' haben
      elementSpec:
        xpathQuery: html/body//table//tr[3]/td[2]
        awaitedTag: td
        textContent: '10577426'

    - id: 12
      text: Erstellen Sie die vierte Zeile in der Tabelle
      elementSpec:
        xpathQuery: /html/body//table//tr[4]
        awaitedTag: td

    - id: 13
      text: Erstellen Sie die erste Zelle in der vierten Zeile. Diese soll als Inhalt '2000' haben
      elementSpec:
        xpathQuery: html/body//table//tr[4]/td[1]
        awaitedTag: td
        textContent: '2000'

    - id: 14
      text: Erstellen Sie die zweite Zelle in der vierten Zeile. Diese soll als Inhalt '58374162' haben
      elementSpec: {xpathQuery: 'html/body//table//tr[4]/td[2]', awaitedTag: 'td', textContent: '58374162'}

  jsTasks: []

  samples:
    - id: 1
      htmlSample: |
        <!doctype html>
        <html>
        <head>
            <link rel="stylesheet" href="/assets/lib/bootstrap/dist/css/bootstrap.css">
        </head>
        <body>
        <table class="table table-striped">
            <tr>
                <th>Jahr</th>
                <th>Produktion</th>
            </tr>
            <tr>
                <td>1900</td>
                <td>9504</td>
            </tr>
            <tr>
                <td>1950</td>
                <td>10577426</td>
            </tr>
            <tr>
                <td>2000</td>
                <td>58374162</td>
            </tr>
        </table>
        </body>
        </html>

- id: 3
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Hyperlinks und Bilder in HTML
  author: bje40dc
  text: Erstellen Sie ein Bild in HTML, das gleichzeitig ein Link ist.
  status: APPROVED
  fileName: mustang.html

  htmlTasks:
    - id: 1
      text: >
        Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL
        '/assets/lib/bootstrap/dist/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'
      elementSpec:
        xpathQuery: /html/head//link
        awaitedTag: link
        attributes:
          - {key: rel, value: stylesheet}
          - {key: href, value: /assets/lib/bootstrap/dist/css/bootstrap.css}

    - id: 2
      text: Erstellen Sie eine passende h1-Überschrift, die 'Ford Mustang' enthält.
      elementSpec:
        xpathQuery: /html/body//h1
        awaitedTag: h1
        textContent: Ford Mustang

    - id: 3
      text: >
        "Erstellen Sie den Link auf der Seite, der auf Wikipedia verweist. Geben Sie als Ziel die URL 'https://de.wikipedia.org/wiki/Ford_Mustang' an."
      elementSpec:
        xpathQuery: /html/body//a
        awaitedTag: a
        attributes:
          - {key: href, value: 'https://de.wikipedia.org/wiki/Ford_Mustang'}

    - id: 4
      text: >
        Erstellen Sie im Link das Bild des Ford Mustang. Geben Sie als Quelle des Bildes die URL
        'https://upload.wikimedia.org/wikipedia/commons/2/2d/1964_12_Ford_Mustang.jpg' und als alternative Beschreibung
        'Ford Mustang' an. Geben Sie außerdem eine Breite von 250 und eine Höhe von 188 an, um das Bild zu skalieren.
         Geben Sie dem Bild die Klasse 'rounded'.
      elementSpec:
        xpathQuery: /html/body//a//img
        awaitedTag: img
        attributes:
          - {key: src, value: 'https://upload.wikimedia.org/wikipedia/commons/2/2d/1964_12_Ford_Mustang.jpg'}
          - {key: alt, value: 'Ford Mustang'}
          - {key: width, value: '250'}
          - {key: height, value: '188'}
          - {key: class, value: 'rounded'}

  jsTasks: []

  samples:
    - id: 1
      htmlSample: |
        <!doctype html>
        <html>
        <head>
            <title>Links und Bilder</title>
            <link rel="stylesheet" href="/assets/lib/bootstrap/dist/css/bootstrap.css">
        </head>
        <body>
        <h1>Ford Mustang</h1>
        <a href="https://de.wikipedia.org/wiki/Ford_Mustang">
            <img src="https://upload.wikimedia.org/wikipedia/commons/2/2d/1964_12_Ford_Mustang.jpg"
                 width="250" height="188" class="rounded" alt="Ford Mustang">
        </a>
        </body>
        </html>

- id: 4
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Login-Formular
  author: bje40dc
  text: Erstellen Sie ein Login-Formular in HTML
  status: APPROVED
  fileName: login.html

  htmlTasks:
    - id: 1
      text: >
        Binden Sie Bootstrap über einen Link ein. Die entsprechende Datei ist unter der URL
        '/assets/lib/bootstrap/dist/css/bootstrap.css' zu finden. Setzen Sie auch den entsprechenden Wert für das Attribut 'rel'.
      elementSpec:
        xpathQuery: /html/head//link
        awaitedTag: link
        attributes:
          - {key: rel, value: stylesheet}
          - {key: href, value: /assets/lib/bootstrap/dist/css/bootstrap.css}

    - id: 2
      text: >
        Erstellen Sie das Formular-Tag. Geben Sie für die Attribute 'action' und 'method' jeweils die
        Werte '/test.php' und 'post' an.
      elementSpec:
        xpathQuery: /html/body//form
        awaitedTag: form
        attributes:
          - {key: action, value: /test.php}
          - {key: method, value: post}

    - id: 3
      text: >
        Erstellen Sie ein Feld zur Eingabe der Emailadresse. Benutzen Sie den in der Vorlesung gezeigten Typen
        und geben Sie dem Attribut 'name' den Wert 'email'. Die Eingabe soll außerdem required sein. Geben Sie dem
        Feld zur Eingabe der Emailadressedie Klasse 'form-control'.
      elementSpec:
        xpathQuery: /html/body//form//input[@type='email']
        awaitedTag: input
        attributes:
          - {key: name, value: email}
          - {key: required, value: 'true'}
          - {key: class, value: form-control}

    - id: 4
      text: >
        Erstellen Sie ein Feld zur Eingabe des Passworts. Benutzen Sie den in der Vorlesung gezeigten Typen und
        geben Sie dem Attribut 'name' den Wert 'passwort'. Die Eingabe soll außerdem verpflichtend sein. Geben
        Sie dem Feld zur Eingabe des Passworts Klasse 'form-control'.
      elementSpec:
        xpathQuery: /html/body//form//input[@type='password']
        awaitedTag: input
        attributes:
          - {key: name, value: passwort}
          - {key: required, value: 'true'}
          - {key: class, value: form-control}

    - id: 5
      text: |
        Erstellen Sie einen Knopf (input) um das Formular abzusenden. Geben Sie den Knopf zum Absenden des Formular die Klasse 'btn btn-default'
      elementSpec:
        xpathQuery: /html/body//form//input[@type='submit']
        awaitedTag: input
        attributes:
          - {key: class, value: btn btn-default}

  jsTasks: []

  samples:
    - id: 1
      htmlSample: |
        <!doctype html>
        <html>
        <head>
            <title>Login-Formular</title>
            <link rel="stylesheet" href="/assets/lib/bootstrap/dist/css/bootstrap.css">
        </head>
        <body>
        <form action="/test.php" method="post">
            <p>
                <label for="email">E-Mail-Adresse:</label>
                <input type="email" id="email" name="email" class="form-control" required>
            </p>
            <p>
                <label for="passwort">Passwort:</label>
                <input type="password" id="passwort" name="passwort" class="form-control" required>
            </p>
            <p>
                <input type="submit" class="btn btn-default">
            </p>
        </form>
        </body>
        </html>

- id: 5
  semanticVersion: {major: 1, minor: 0, patch: 0}
  title: Audio in HTML 5
  author: bje40dc
  text: Erstellen Sie ein Audio-Element in Html5!
  status: APPROVED
  fileName: hymn.html

  htmlTasks:
    - id: 1
      text: Erstellen Sie eine passende h1-Überschrift die 'Deutsche Nationalhymne' enthält.
      elementSpec: {xpathQuery: '/html/body//h1', awaitedTag: 'h1', textContent: 'Deutsche Nationalhymne'}

    - id: 2
      text: >
        Erstellen Sie das Grundelement für die Audiodatei. Aktivieren Sie die Kontrollelement. Falls der Browser keine
        Audiodateiene unterstützt soll der Text 'Ihr Browser unterstützt kein Audio!' ausgegeben werden
      elementSpec:
        xpathQuery: /html/body//audio
        awaitedTag: audio
        textContent: Ihr Browser unterstützt kein Audio!
        attributes:
          - {key: controls, value: 'true'}

    - id: 3
      text:
        Erstellen Sie das Element für die Quelldatei. Diese ist vom Typ 'audio/ogg' und befindet sich an der URL 'https://upload.wikimedia.org/wikipedia/commons/c/cb/National_anthem_of_Germany_-_U.S._Army_1st_Armored_Division_Band.ogg'
      elementSpec:
        xpathQuery: /html/body//audio/source
        awaitedTag: source
        attributes:
          - {key: type, value: audio/ogg}
          - {key: src, value: 'https://upload.wikimedia.org/wikipedia/commons/c/cb/National_anthem_of_Germany_-_U.S._Army_1st_Armored_Division_Band.ogg'}

  jsTasks: []

  samples:
    - id: 1
      htmlSample: |
        <!doctype html>
        <html>
        <head>
            <title>Audio in HTML</title>
        </head>
        <body>
        <h1>Deutsche Nationalhymne</h1>
        <audio controls>
            <source type="audio/ogg"
                    src="https://upload.wikimedia.org/wikipedia/commons/c/cb/National_anthem_of_Germany_-_U.S._Army_1st_Armored_Division_Band.ogg">
            Ihr Browser unterst&uuml;tzt kein Audio!
        </audio>
        </body>
        </html>
