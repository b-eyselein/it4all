[
	{
		"shortname": "amazon", 
		"longname": "Amazon", 
		"scriptfile": "amazon.sql", 
		"exercises": {
			"SELECT": [
				{
					"id": 1, 
					"text": "Zeigen Sie Titel, Autor und Preis aller Bücher, die im Carlsen-Verlag erschienen sind an. Hinweis: Die Zuordnung von Verlag-Id zu Verlag-Name befindet sich in der Tabelle 'publishers'.", 
					"samplesolutions": [
						"SELECT title, author, price FROM books JOIN publishers ON publisher_id=publishers.id WHERE publishers.name='Carlsen'", 
						"SELECT title, author, price FROM books JOIN publishers ON publisher_id=publishers.id WHERE publishers.name=\"Carlsen\""
					]
				}, 
				{
					"id": 2, 
					"text": "Bestimmen Sie Titel und Preis aller Bücher des Autors 'J. R. R. Tolkien' (ohne Anführungszeichen), deren Preis unter 10€ liegt. Ordnen Sie die Einträge nach Erscheinungsjahr abwärts.", 
					"samplesolutions": [
						"SELECT title, price FROM books WHERE author = 'J. R. R. Tolkien' AND price < 10 ORDER BY year DESC", 
						"SELECT title, price FROM books WHERE author = \"J. R. R. Tolkien\" AND price < 10 ORDER BY year DESC"
					]
				}, 
				{
					"id": 3, 
					"text": "Geben Sie alle Email-Adressen der Kunden aus, die mit 'gmx.de' enden. Hinweis: Verwenden Sie für die Eingrenzung der Mailadresse den 'LIKE'-Operator.", 
					"samplesolutions": [
						"SELECT email FROM customers WHERE email LIKE '%gmx.de'", 
						"SELECT email FROM customers WHERE email LIKE \"%gmx.de\"", 
						"SELECT email FROM customers WHERE email LIKE '%@gmx.de'", 
						"SELECT email FROM customers WHERE email LIKE \"%@gmx.de\""
					]
				}, 
				{
					"id": 4, 
					"text": "Wählen Sie alle Kunden aus, deren Nachname nur aus vier Buchstaben besteht. Geben Sie nur den Vornamen und Nachnamen aus. Die Datensätze sollen nach dem Nachnamen alphabetisch sortiert werden.", 
					"samplesolutions": [
						"SELECT first_name, family_name FROM customers WHERE LENGTH(family_name) = 4 ORDER BY family_name ASC", 
						"SELECT first_name, family_name FROM customers WHERE LENGTH(family_name) = 4 ORDER BY family_name"
					]
				}, 
				{
					"id": 5, 
					"text": "Finden Sie alle Bücher, die zu einem reduziertem Preis erworben wurden. Geben Sie hierfür die ID der Bestellposition (Tabelle: 'order_positions'), den Buchtitel, den aktuellen Preis (neue Spalte: 'current_price') und den reduzierten Preis (neue Spalte: 'order_price') aus.", 
					"samplesolutions": [
						"SELECT order_positions.id, title, books.price AS current_price, order_positions.price AS order_price FROM order_positions JOIN books ON books.id = book_id WHERE (books.price - order_positions.price) > 0"
					]
				}, 
				{
					"id": 6, 
					"text": "Berechnen Sie die Anzahl der bestellten Bücher, die zum Zeitpunkt des Kaufes weniger als fünf Euro gekostet haben. Geben Sie das Ergebnis unter dem Spaltenname 'sum_books' aus.", 
					"samplesolutions": [
						"SELECT SUM(amount) AS sum_books FROM order_positions WHERE price < 5"
					]
				}, 
				{
					"id": 7, 
					"text": "Ermitteln Sie den Kunden, welcher die höchste durchschnittliche Bewertung abgegeben hat. Geben Sie dazu Vorname, Nachname und seine durchschnittliche Bewertung (Spaltenbezeichnung avg_rating).", 
					"samplesolutions": [
						"SELECT customers.first_name, customers.family_name, avg(rating) AS avg_rating FROM ratings LEFT JOIN customers ON customers.id=customer_id GROUP BY customer_id ORDER BY avg_rating DESC LIMIT 1"
					]
				}, 
				{
					"id": 8, 
					"text": "Ermitteln Sie den Einkaufswert der Wunschlisten für jeden Kunden. Listen Sie dabei Vorname, Nachname und Einkaufswert (Spaltenbezeichnung 'value') auf. Sortieren Sie die Einträge aufwärts nach Einkaufswert.", 
					"samplesolutions": [
						"SELECT customers.first_name, customers.family_name, sum(price) AS value FROM wishlists LEFT JOIN books ON books.id=book_id LEFT JOIN customers ON customers.id=customer_id GROUP BY customer_id ORDER BY value ASC</"
					]
				}, 
				{
					"id": 9, 
					"text": "Wählen Sie alle Bücher aus, die in den Jahren 1998, 2001 oder 2011 veröffentlicht wurden.", 
					"samplesolutions": [
						"SELECT * FROM books WHERE year IN (1998, 2001, 2011)"
					]
				}, 
				{
					"id": 10, 
					"text": "Suchen Sie alle Titel jener Bücher deren Autor George Orwell ist. Ordnen Sie die Titel nach Erscheinungsjahr abwärts.", 
					"samplesolutions": [
						"SELECT title FROM books WHERE author='George Orwell' ORDER By year DESC"
					]
				}, 
				{
					"id": 11, 
					"text": "Zeigen Sie sämtliche Datensätze der Bücher-Tabelle an und ordnen Sie diese nach Erscheinungsjahr abwärts.", 
					"samplesolutions": [
						"SELECT * FROM books ORDER BY year DESC"
					]
				}, 
				{
					"id": 12, 
					"text": "Bestimmen Sie die Signatur des Buches 'The Walking Dead' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT signature FROM books WHERE title='The Walking Dead'"
					]
				}, 
				{
					"id": 13, 
					"text": "Zeigen Sie Titel, Verlag-Name und Lagerbestand sämtlicher Bücher an deren Lagerbestand geringer als 40000 ist. Hinweis: Die Zuordnung von Verlag-Id zu Verlag-Name befindet sich in der Tabelle 'publishers'.", 
					"samplesolutions": [
						"SELECT title, publishers.name, stock FROM books JOIN publishers ON publisher_id=publishers.id WHERE stock < 40000"
					]
				}, 
				{
					"id": 14, 
					"text": "Zeigen sie Titel und Autor der drei teuersten Bücher an. Sortieren Sie die Einträge nach Preis abwärts.", 
					"samplesolutions": [
						"SELECT title, author FROM books ORDER BY price DESC LIMIT 3"
					]
				}, 
				{
					"id": 15, 
					"text": "Geben Sie alle Kunden aus, die vor dem Jahr 2000 geboren sind.", 
					"samplesolutions": [
						"SELECT * FROM customers WHERE birthday < '2000-01-01'"
					]
				}, 
				{
					"id": 16, 
					"text": "Wählen Sie alle Einträge zu Kunden aus, die im Jahr 1981 Geburtstag haben. Hinweis: Verwenden Sie hierfür den 'LIKE'-Operator", 
					"samplesolutions": [
						"SELECT * FROM customers WHERE birthday LIKE '1981-%'"
					]
				}, 
				{
					"id": 17, 
					"text": "Finden Sie alle Kunden, die ihre Bestellung noch nicht bezahlt haben. Geben sie die Bestell-ID (neuer Spaltenname: 'order_id '), den Nachnamen des Kunden und seine zugehörige Email-Adresse aus.", 
					"samplesolutions": [
						"SELECT orders.id AS order_id, family_name, email FROM customers JOIN orders ON customers.id = customer_id WHERE paid=0"
					]
				}, 
				{
					"id": 18, 
					"text": "Geben Sie die Kunden aus, die mehr als eine Bestellung getätigt haben. Geben sie die Kunden-ID, den Nachnamen und die Anzahl seiner Bestellungen (neuer Spaltenname: 'quantity ') aus.", 
					"samplesolutions": [
						"SELECT customers.id, family_name, COUNT(customer_id) AS quantity FROM customers JOIN orders ON customers.id = customer_id GROUP BY customer_id HAVING ( COUNT(customer_id) > 1 )"
					]
				}, 
				{
					"id": 19, 
					"text": "Geben Sie alle Email-Adressen der Kunden aus, die mit 'gmx.de ' oder mit 'gmail.com ' enden.", 
					"samplesolutions": [
						"SELECT email FROM customers WHERE email LIKE '%gmx.de' OR  email LIKE '%gmail.com'"
					]
				}, 
				{
					"id": 20, 
					"text": "Wählen Sie alle Bestellungen aus, die das Buch 'Harry Potter und der Halbblutprinz ' enthalten. Geben Sie hierfür die Bestell-ID (Tabelle: 'orders') und die Bestellmenge (Tabelle: 'order_positions') aus.", 
					"samplesolutions": [
						"SELECT order_id, amount FROM orders JOIN order_positions ON orders.id = order_id JOIN books ON books.id = book_id WHERE title = 'Harry Potter und der Halbblutprinz '"
					]
				}, 
				{
					"id": 21, 
					"text": "Berechnen Sie für jede Bestellung den Gesamtpreis, den der Kunde zahlen muss. Geben Sie nur die Bestell-ID und den Gesamtpreis (neuer Spaltenname 'sum') aus. Beachten Sie, dass die Kunden mehrere Exemplare eines Buches bestellen können (Spalte: 'amount ').", 
					"samplesolutions": [
						"SELECT id, SUM(price*amount) AS 'sum' FROM order_positions GROUP BY order_id"
					]
				}, 
				{
					"id": 22, 
					"text": "Listen Sie die Bücher auf, die unter der Bestellnummer: '9 ' zusammengefasst sind. Sortieren Sie das Ergebnis aufsteigend nach dem Erscheinungsjahr.", 
					"samplesolutions": [
						"SELECT books.* FROM books JOIN order_positions ON books.id = book_id WHERE order_id = 9 ORDER BY year ASC"
					]
				}, 
				{
					"id": 23, 
					"text": "Geben Sie für jeden Kunden aus, wie oft diese bereits Bestellungen abgegeben haben. Listen Sie dafür den Vornamen, Nachnamen und die Anzahl der Bestellungen (neue Spalte: 'order_count '). Sortieren Sie die Liste anschließend absteigend nach der errechneten Anzahl.", 
					"samplesolutions": [
						"SELECT first_name, family_name, COUNT(orders.id) AS order_count FROM customers JOIN orders ON customers.id = customer_id GROUP BY customers.id ORDER BY order_count DESC"
					]
				}, 
				{
					"id": 24, 
					"text": "Berechnen Sie den durchschnittlichen Preis eines bestellten Buches aus der Tabelle 'order_positions'.Das Ergebnis soll in einer Spalte namens: 'average_price' angezeigt werden.", 
					"samplesolutions": [
						"SELECT AVG(price) AS 'average_price' FROM order_positions"
					]
				}, 
				{
					"id": 25, 
					"text": "Geben Sie zu jedem Kunden Vorname, Nachname und Anzahl seiner Bewertungen (Spalte rating_count). Die Bewertungen befinden sich in der Tabelle 'ratings '. Ordnen Sie die Einträge nach Anzahl der Bewertungen abwärts.", 
					"samplesolutions": [
						"SELECT customers.first_name, customers.family_name, count(*) AS rating_count FROM ratings LEFT JOIN customers ON customers.id=customer_id GROUP BY customer_id ORDER BY rating_count DESC"
					]
				}, 
				{
					"id": 26, 
					"text": "Bestimmen Sie jene drei Bücher mit der höchsten durchschnittlichen Bewertung. Geben Sie dabei Buchname und durchschnittliche Bewertung (Spaltenbezeichnung 'avg_rating ') an. Ordnen Sie die Einträge nach durchschnittlicher Bewertung abwärts.", 
					"samplesolutions": [
						"SELECT books.title, avg(rating) AS avg_rating FROM ratings JOIN books ON books.id=book_id GROUP BY book_id ORDER BY avg_rating DESC LIMIT 3"
					]
				}, 
				{
					"id": 27, 
					"text": "Geben Sie durchschnittliche Bewertung und Anzahl der Bewertungen zum Buch 'Harry Potter und der Orden des Phönix ' (ohne Anführungszeichen) an. Benennen Sie die Spalten 'avg_rating' und 'rating_count'.", 
					"samplesolutions": [
						"SELECT avg(rating) AS avg_rating, count(*) AS rating_count FROM ratings JOIN books ON books.id=book_id WHERE books.title='Harry Potter und der Orden des Phönix' GROUP BY book_id"
					]
				}, 
				{
					"id": 28, 
					"text": "Suchen Sie alle Bewertungen der Kundin 'Christl Seeliger' an. Die Einträge sollen Buchnamen sowie die Bewertung enthalten. Ordnen Sie die Einträge zusätzlich nach Bewertung abwärts.", 
					"samplesolutions": [
						"SELECT books.title, rating FROM ratings LEFT JOIN books ON books.id=book_id LEFT JOIN customers ON customers.id=customer_id WHERE customers.first_name = 'Christl ' AND customers.family_name = 'Seeliger ' ORDER BY rating DESC"
					]
				}, 
				{
					"id": 29, 
					"text": "Stellen Sie alle Buchtitel, welche auf der Wunschliste von Wilhard Herold befinden dar.", 
					"samplesolutions": [
						"SELECT books.title FROM wishlists LEFT JOIN books ON books.id=book_id LEFT JOIN customers ON customers.id=customer_id WHERE customers.first_name ='Wilhard ' AND customers.family_name = 'Herold'"
					]
				}, 
				{
					"id": 30, 
					"text": "Ermitteln Sie das meist gewünschteste Buch. Geben Sie dabei Buchtitel sowie Anzahl des Auftretens auf den Wunschzetteln (Spaltenbezeichnung wish_count) an.", 
					"samplesolutions": [
						"SELECT books.title, count(*) AS wish_count FROM wishlists LEFT JOIN books ON books.id=book_id GROUP BY book_id ORDER BY wish_count DESC LIMIT 1"
					]
				}, 
				{
					"id": 31, 
					"text": "Ermitteln sie alle Buchtitel jener Büche, welche sich auf keiner Wunschliste befinden.", 
					"samplesolutions": [
						"SELECT books.title FROM books WHERE id NOT IN (SELECT book_id FROM wishlists)"
					]
				}, 
				{
					"id": 32, 
					"text": "Ermitteln Sie Titel und durchschnittliche Bewertung aller bewerteten Bücher. Ordnen Sie die Einträge aufsteigend nach durchschnittlicher Bewertung. Bezeichen Sie die Spalte der durchschnittlichen Bewertung mit 'avg_rating '.", 
					"samplesolutions": [
						"SELECT books.title, avg(rating) AS avg_rating FROM ratings JOIN books ON books.id=book_id GROUP BY book_id ORDER BY avg_rating ASC"
					]
				}, 
				{
					"id": 33, 
					"text": "Bestimmen Sie den Titel des Buches mit der Signatur 'PF / 286 - A / 3 ' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT title FROM books WHERE signature='PF/286-A/3'"
					]
				}, 
				{
					"id": 34, 
					"text": "Wählen Sie Titel und Preis aller Bücher aus, deren Preis unter 10€ liegt. Ordnen Sie die Einträge zusätzlich preislich aufwärts.", 
					"samplesolutions": [
						"SELECT title, price FROM books WHERE price &lt; 10 ORDER BY price ASC"
					]
				}, 
				{
					"id": 35, 
					"text": "Bestimmen Sie Titel und Signatur sämtlicher Bücher des Autorin 'J.K.Rowling ' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT title, signature FROM books WHERE author='J. K. Rowling'"
					]
				}, 
				{
					"id": 36, 
					"text": "Bestimmen Sie den Autor des Buches 'Der kleine Prinz' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT author FROM books WHERE title='Der kleine Prinz'"
					]
				}, 
				{
					"id": 37, 
					"text": "Zeigen Sie Titel, Autor und Peis aller Bücher an. Ordnen Sie die Einträge zusätzlich preislich aufwärts.", 
					"samplesolutions": [
						"SELECT title, author, price FROM books ORDER BY price ASC"
					]
				}, 
				{
					"id": 38, 
					"text": "Zeigen Sie sämtliche Autoren an deren Bücher über den Carlsen-Verlag publiziert wurden. Hinweis: Die Zuordnung von Verlag-Id zu Verlag-Name befindet sich in der Tabelle 'publishers'.", 
					"samplesolutions": [
						"SELECT author FROM books JOIN publishers ON publisher_id=publishers.id WHERE publishers.name ='Carlsen' GROUP BY author"
					]
				}, 
				{
					"id": 39, 
					"text": "Erfassen Sie alle Autoren und den kumulierten Bestand ihrer Bücher. Ordnen Sie die Einträge nach kumulierten Bestand abwärts. Benennen Sie die Spalte des  kumulierten Bestandes 'stock_sum ' (ohne Anführungszeichen). Hinweise: Verwenden Sie den Sum-Operator und das Schlüsselwort AS.", 
					"samplesolutions": [
						"SELECT author, sum(stock) AS stock_sum FROM books GROUP BY author ORDER BY stock_sum DESC"
					]
				}, 
				{
					"id": 40, 
					"text": "Bestimmen Sie den potentiellen Umsatz des Buches 'Animal Farm ' (ohne Anführungszeichen). Hinweis: Als potentieller Umsatz wird hier das Produkt von Bestand und Preis bezeichnet. Nennen Sie diese Spalte 'revenue ' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT stock*price AS revenue FROM books WHERE title='Animal Farm'", 
						"SELECT price*stock AS revenue FROM books WHERE title='Animal Farm'"
					]
				}, 
				{
					"id": 41, 
					"text": "Bestimmen Sie den Preis des Buches mit der Signatur 'PF / 510 - S / 19 ' (ohne Anführungszeichen).", 
					"samplesolutions": [
						"SELECT price FROM books WHERE signature='PF/510-S/19'"
					]
				}, 
				{
					"id": 42, 
					"text": "Wählen Sie alle Kunden aus, die im Februar Geburtstag haben und geben Sie den Vornamen, Nachnamen und das Geburtsdatum aus. Hinweis: Verwenden Sie für die Eingrenzung des Geburtsdatums den 'LIKE'-Operator.", 
					"samplesolutions": [
						"SELECT first_name, family_name, birthday FROM customers WHERE birthday LIKE '%-02-%'"
					]
				}, 
				{
					"id": 43, 
					"text": "Geben Sie den Vornamen, Nachnamen und Geburtstag des jüngsten Kunden aus. Achten Sie darauf, dass sich die Spaltennamen nicht verändern.", 
					"samplesolutions": [
						"SELECT first_name, family_name, birthday FROM customers ORDER BY birthday DESC LIMIT 1"
					]
				}, 
				{
					"id": 44, 
					"text": "Sie möchten ihre Kunden dazu motivieren sichere Passwörter zu verwenden. Alle Kunden, die als Kennwort 'Passwort ' verwenden, sollen beim nächsten Login über eine Meldung aufgefordert werden sich was neues auszudenken. Die Passwörter der Kunden sind als MD5-Hash-String in der Tabelle 'customers ' gespeichert. Der MD5-Hashstring zu 'Passwort' lautet '3e45 af4ca27ea2b03fc6183af40ea112'. Geben Sie die ID und die Email-Adresse der faulen Kunden aus.", 
					"samplesolutions": [
						"SELECT id, email FROM customers WHERE password = '3e45af4ca27ea2b03fc6183af40ea112'"
					]
				}, 
				{
					"id": 45, 
					"text": "Berechnen Sie das Alter der jeweiligen Kunden. Die Ergebnistabelle soll zu jedem Kunden den Geburtstag und das Alter (in einer neuen Spalte 'age') beinhalten. Hinweis: Verwenden Sie zum Abrunden den FLOOR-Operator.", 
					"samplesolutions": [
						"SELECT birthday, FLOOR(DATEDIFF(NOW(), birthday)/365) AS age FROM customers"
					]
				}, 
				{
					"id": 46, 
					"text": "Finden Sie alle Email-Adressen, die mehrfach in der Tabelle 'customers' vorkommen. Geben Sie zusätzlich die Häufigkeit in einer neuen Spalte mit dem Namen 'occurrences' an.", 
					"samplesolutions": [
						"SELECT email, COUNT(email) AS occurrences FROM customers GROUP BY email HAVING ( COUNT(email) > 1 )"
					]
				}, 
				{
					"id": 47, 
					"text": "Sie möchten zu jeder Bestellung (aus der Tabelle 'orders') den passenden Kunden herausfinden. Geben Sie hierfür das Bestelldatum, die Bestell-ID (Spaltenname: 'order_id'), den Nachnamen des Kunden und seine zugehörige Kunden-ID (Spaltenname: 'customer_id') aus. Ordnen Sie die resultierenden Datensätze absteigend nach dem Bestelldatum.", 
					"samplesolutions": [
						"SELECT date, orders.id AS order_id, family_name, customers.id AS customer_id FROM customers JOIN orders ON customers.id = customer_id ORDER BY date DESC<"
					]
				}
			], 
			"UPDATE": [
				{
					"id": 1, 
					"text": "Aktualisieren Sie den Lagerbestand des Buches 'Dexter' auf den neuene Wert '2042'", 
					"samplesolutions": [
						"UPDATE books SET stock=2042 WHERE title='Dexter'"
					], 
					"validation": "SELECT * FROM books"
				}, 
				{
					"id": 2, 
					"text": "Aktualisieren Sie die Email-Adresse von Paulina Rohl. Die neue Adresse soll 'paulina.r@yahoo.com' lauten.", 
					"samplesolutions": [
						"UPDATE customers SET email='paulina.r@yahoo.com' WHERE first_name='Paulina' AND family_name='Rohr'"
					], 
					"validation": "SELECT * FROM books"
				}
			], 
			"DELETE": [
				{
					"id": 1, 
					"text": "Löschen Sie alle Kunden, die nach dem Jahr 1995 geboren wurden.", 
					"samplesolutions": [
						"DELETE FROM customers WHERE birthday &gt; '1995-01-01'"
					], 
					"validation": "SELECT * FROM customers"
				}, 
				{
					"id": 2, 
					"text": "Löschen Sie alle Kunden, die noch keine Bestellung abgegeben haben.", 
					"samplesolutions": [
						"DELETE FROM customers WHERE id NOT IN (SELECT customer_id FROM orders)"
					], 
					"validation": "SELECT * FROM customers"
				}, 
				{
					"id": 3, 
					"text": "Löschen Sie alle Bücher, die mehr als 8,50 Euro kosten und die Verlags-ID: '7' besitzen.", 
					"samplesolutions": [
						"DELETE FROM books WHERE price > 8.50 AND publisher_id = '7' "
					], 
					"validation": "SELECT * FROM books"
				}, 
				{
					"id": 4, 
					"text": "Löschen Sie alle Bücher, die vom Autor 'J.R.R.Tolkien' geschrieben wurden.", 
					"samplesolutions": [
						"DELETE FROM books WHERE author = 'J.R.R.Tolkien'"
					]
				}
			], 
			"INSERT": [
				{
					"id": 1, 
					"text": "Fügen Sie ein neues Buch mit dem Titel 'Applied Statistical Genetics with R ' in die Datenbank ein (Autor: 'Andrea S.Foulkes', Erscheinungsjahr: 2010, Publisher-ID: '12' , Signatur 'PF / 520 - Y / 2', Lagerbestand '289', Preis: '24.99 ').", 
					"samplesolutions": [
						"INSERT INTO books(title, author, year, publisher_id, signature, stock, price) VALUES('Applied Statistical Genetics with R', 'Andrea S. Foulkes', 2010, 12, 'PF/520-Y/2', 289, 24.99)"
					], 
					"validation": "SELECT * FROM books"
				}, 
				{
					"id": 2, 
					"text": "Fügen Sie einen neuen Kunden in die Datenbank ein. Name 'Ferdinandus Merkle', Email: 'ferdinandus_1856 @yahoo.com', Geburtstag: '1990 - 11 - 24 '. Das Passwort und die Adresse soll vorerst leer gelassen werden.", 
					"samplesolutions": [
						"INSERT INTO customers (first_name, family_name, birthday, email, password, address) VALUES ('Ferdinandus', 'Merkle', '1990 - 11 - 24', 'ferdinandus_1856 @yahoo.com','','');", 
						"INSERT INTO customers (first_name, family_name, birthday, email) VALUES ('Ferdinandus', 'Merkle', '1990 - 11 - 24', 'ferdinandus_1856 @yahoo.com');"
					]
				}
			]
		}
	}
]