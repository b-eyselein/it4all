[
	{
		"id": 1, 
		"title": "Angestellte", 
		"author": "admin", 
		"text": [
			
		], 
		"shortName": "employee", 
		"scriptFile": "employee.sql", 
		"exercises": [
			{
				"id": 101, 
				"exerciseType": "SELECT", 
				"text": "Wie viele Angestellte hat die Firma? Benennen Sie das Ergebnis als 'Anzahl'", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 101, 
							"sampleId": 1
						}, 
						"solution": [
							"SELECT COUNT(*) AS Anzahl", 
							"  FROM Employee"
						]
					}, 
					{
						"key": {
							"exerciseId": 101, 
							"sampleId": 2
						}, 
						"solution": [
							"SELECT COUNT(employeeOID) AS Anzahl", 
							"  FROM Employee"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 102, 
				"exerciseType": "SELECT", 
				"text": "Welche Angestelltennummer (employeeOID) hat Max Becker?", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 102, 
							"sampleId": 1
						}, 
						"solution": [
							"SELECT employeeOID", 
							"  FROM Employee", 
							"  WHERE firstname = 'Max' AND lastname = 'Becker'"
						]
					}, 
					{
						"key": {
							"exerciseId": 102, 
							"sampleId": 2
						}, 
						"solution": [
							"SELECT employeeOID", 
							"  FROM Employee", 
							"  WHERE lastname = 'Becker' AND firstname = 'Max'"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 103, 
				"exerciseType": "SELECT", 
				"text": "Welche Emailadresse hat Max Becker für die Arbeit?", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 103, 
							"sampleId": 1
						}, 
						"solution": [
							"SELECT emailaddress", 
							"  FROM Employee", 
							"    JOIN Emailaddress ON Employee.employeeOID = Emailaddress.employeeOID", 
							"  WHERE firstname = 'Max' AND lastname = 'Becker'"
						]
					}, 
					{
						"key": {
							"exerciseId": 103, 
							"sampleId": 2
						}, 
						"solution": [
							"SELECT emailaddress", 
							"  FROM Employee, Emailaddress", 
							"  WHERE Employee.employeeOID = Emailaddress.employeeOID", 
							"    AND firstname = 'Max' AND lastname = 'Becker'"
						]
					}, 
					{
						"key": {
							"exerciseId": 103, 
							"sampleId": 3
						}, 
						"solution": [
							"SELECT emailaddress", 
							"  FROM Employee emp, Emailaddress email", 
							"  WHERE emp.employeeOID = email.employeeOID", 
							"    AND firstname = 'Max' AND lastname = 'Becker'"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 104, 
				"exerciseType": "SELECT", 
				"text": "Geben Sie die Nutzernamen aller Angestellten alphabetisch geordnet aus!", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 104, 
							"sampleId": 1
						}, 
						"solution": [
							"SELECT username", 
							"  FROM Employee", 
							"  ORDER BY username"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 105, 
				"exerciseType": "SELECT", 
				"text": "Wie viele Untergebene hat jeder Chef? Geben Sie jeweils die EmployeeOID des Chefs und die Anzahl aus!", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 105, 
							"sampleId": 1
						}, 
						"solution": [
							"SELECT chefOID, count(employeeOID)", 
							"  FROM Employee", 
							"  WHERE chefOID IS NOT NULL", 
							"  GROUP BY chefOID"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 106, 
				"exerciseType": "CREATE", 
				"text": "Erstellen Sie das CREATE TABLE-Skript für die Tabelle Employee!", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 106, 
							"sampleId": 1
						}, 
						"solution": [
							"CREATE TABLE Employee (", 
							"  employeeOID INT PRIMARY KEY,", 
							"  firstname VARCHAR(50),", 
							"  lastname VARCHAR(50),", 
							"  username VARCHAR(20),", 
							"  chefOID INT,", 
							"  FOREIGN KEY (chefOID) REFERENCES Employee(employeeOID)", 
							");"
						]
					}
				], 
				"hint": "", 
				"validation": "", 
				"tags": [
					
				]
			}, 
			{
				"id": 107, 
				"exerciseType": "UPDATE", 
				"text": "Der Angestellte mit der OID 8 arbeitet jetzt für den Angestellten mit der OID 3. Aktualisieren Sie die Datenbank!", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 107, 
							"sampleId": 1
						}, 
						"solution": [
							"UPDATE Employee", 
							"  SET chefOID = 3", 
							"  WHERE employeeOID = 8"
						]
					}
				], 
				"hint": "", 
				"tags": [
					
				], 
				"validation": "SELECT * FROM Employee"
			}, 
			{
				"id": 108, 
				"exerciseType": "DELETE", 
				"text": "Der Angestellte mit der OID 7 hat gekündigt. Löschen Sie ihn aus der Angestelltentabelle.", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 108, 
							"sampleId": 1
						}, 
						"solution": [
							"DELETE FROM Employee", 
							"  WHERE employeeOID = 7"
						]
					}
				], 
				"hint": "", 
				"tags": [
					
				], 
				"validation": "SELECT * FROM Employee"
			}, 
			{
				"id": 109, 
				"exerciseType": "INSERT", 
				"text": "Es gibt eine neue Angestellte mit Namen Tina Sattler. Diese arbeitet für die Person mit der OID 2 und soll als OID 9 und als Nutzernamen tina_sattler bekommen.", 
				"sampleSolutions": [
					{
						"key": {
							"exerciseId": 109, 
							"sampleId": 1
						}, 
						"solution": [
							"INSERT INTO Employee VALUES", 
							"  (9, 'Tina', 'Sattler', 'tina_sattler', 2)"
						]
					}, 
					{
						"key": {
							"exerciseId": 109, 
							"sampleId": 2
						}, 
						"solution": [
							"INSERT INTO Employee (`employeeOID`, `firstname`, `lastname`, `username`, `chefOID`) VALUES", 
							"  (9, 'Tina', 'Sattler', 'tina_sattler', 2)"
						]
					}
				], 
				"hint": "", 
				"tags": [
					
				], 
				"validation": "SELECT * FROM Employee"
			}
		]
	}
]