sections:
- id: 1
  type: text
  title: Grundlagen Boolescher Algebra
  text: >
    <p>Die <strong>Boolesche Algebra</strong> stellt die Grundlage für den Entwurf von elektronischen Schaltungen bis hin
    zu Computern dar. Sie ist nach George Bool (1815 - 1864) benannt, der als erster eine "Algebra der Logik" entwickelt hat.</p>

    <p>Diese kennt nur die beiden Zustände <code>wahr</code> und <code>falsch</code>, die in einem Schaltkreis den
    grundlegenden Zuständen "Strom fließt" und "Strom fließt nicht" entsprechen. Diese Zustände werden normalerweise
    durch die Zahlen <code>1</code> und <code>0</code> modelliert. Als Variablen in Booleschen Ausdrücken werden
    normalerweise Kleinbuchstaben (vom Anfang des Alphabets) wie <code>a</code>, <code>b</code>, ..., verwendet.</p>

- id: 2
  type: text
  title: Operationen in der Booleschen Algebra
  text: >
    <p>Die Boolesche Algebra kennt die drei grundlegenden Operationen <strong>Konjunktion</strong>,
    <strong>Disjunktion</strong> und <strong>Negation</strong>. Die Konjuntion und Diskunktion sind binäre
    Verknüpfungen (lat. <i>bina</i>, "doppelt"), die jeweils zwei Argumente miteinander verknüpfen, die Negation
    arbeitet nur auf einem Argument.</p>

    <ul>
        <li>Das Ergebnis einer Konjunktion (<strong>Und</strong>-Verknüpfung) ist genau dann 1, wenn <i>beide</i>
        Argumente 1 sind (Merke: Argument 1 <strong>und</strong> Argument 2 sind 1). Ansonsten ist das Ergebnis 0.
        Eine Konjunktion wird mit dem Operator <code>&wedge;</code> dargestellt: <code>a &wedge; b</code> (sprich: "a und b").</li>

        <li>Das Ergebnis einer Disjunktion (<strong>Oder</strong>-Verknüpfung ist 1, falls <i>eines</i> der beiden
        Argumente (oder auch beide) 1 sind (Merke: Argument 1 <strong>oder</strong> Argument 2 ist 1). Das Ergebnis ist
        nur 0, falls beide Argument 0 sind. Eine Disjunktion wird mit dem Operator <code>&vee;</code> dargestellt:
        <code>a &vee; b</code> (sprich: "a oder b").</li>

        <li>Das Ergebnis einer Negation (<strong>Verneinung</strong>) ist das <i>Gegenteil</i> des Arguments, also 0
        bei einer 1 und eine 1 bei einer Null. Die Negation wird mit dem unären Operator <code>&not;</code> dargestellt:
        <code>&not; a</code> (sprich: "nicht a")</li>
    </ul>

    <p>Ein Ausdruck, der Boolesche Variablen und eine beliebige Anzahl von Boolesche Operatoren beinhaltet, wird <strong>
        Boolesche Funktion</strong> genannt. Beispiele für boolesche Funktionen sind: <code>a</code>,
        <code>a &wedge; b</code>, <code>a &vee; b &wedge; (c &vee; d)</code></p>

- id: 3
  type: exercise
  title: Übung: Boolesche Operationen
  text: |
    TODO...