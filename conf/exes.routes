GET           /:toolType/admin/import                           controllers.exes.ExerciseAdminController.adminImportToRead(toolType: String)
GET           /:toolType/admin/export                           controllers.exes.ExerciseAdminController.adminExportExercises(toolType: String)
GET           /:toolType/admin/exportFile                       controllers.exes.ExerciseAdminController.adminExportExercisesAsFile(toolType: String)

GET           /:toolType/admin/exerciseList                     controllers.exes.ExerciseAdminController.adminExerciseList(toolType: String)

GET           /:toolType/newExForm                              controllers.exes.ExerciseController.newExerciseForm(toolType: String)
POST          /:toolType/newExercise                            controllers.exes.ExerciseController.newExercise(toolType: String)
POST          /:toolType/:id/editExercise                       controllers.exes.ExerciseController.editExercise(toolType: String, id: Int)


GET           /:toolType/admin/newExForm                        controllers.exes.ExerciseAdminController.adminNewExerciseForm(toolType: String)

GET           /:toolType/admin/exerciseList/:id                 controllers.exes.ExerciseAdminController.adminEditExerciseForm(toolType: String, id: Int)

PUT           /:toolType/admin/exerciseList/:id                 controllers.exes.ExerciseAdminController.adminEditExercise(toolType: String, id: Int)
POST          /:toolType/admin/exerciseList/:id                 controllers.exes.ExerciseAdminController.adminEditExercise(toolType: String, id: Int)

DELETE        /:toolType/admin/exerciseList/:id                 controllers.exes.ExerciseAdminController.adminDeleteExercise(toolType: String, id: Int)

PUT           /:toolType/admin/exercise/:id/state               controllers.exes.ExerciseAdminController.adminChangeExState(toolType: String, id: Int)

GET           /:toolType/solutions/:id                          controllers.exes.ExerciseController.showSolutions(toolType: String, id: Int)

GET           /:toolType/exercises                              controllers.exes.ExerciseController.exerciseList(toolType: String, page: Int ?= 1)


GET           /:toolType/solve/:id/:part                        controllers.exes.ExerciseController.exercise(toolType: String, id: Int, part: String, version: String ?= "latest")
PUT           /:toolType/solve/:id/:part                        controllers.exes.ExerciseController.correctLive(toolType: String, id: Int, part: String)

GET           /:toolType/:id/:partStr/evaluationPartForm        controllers.exes.ExerciseController.reviewExercisePartForm(toolType: String, id: Int, partStr: String)
POST          /:toolType/:id/:partStr/evaluatePart              controllers.exes.ExerciseController.reviewExercisePart(toolType: String, id: Int, partStr: String)

GET           /:toolType/:id/:part/solution                     controllers.exes.ExerciseController.sampleSolutionsForPart(toolType: String, id: Int, part: String)

GET           /:toolType/:id/reviews                            controllers.exes.ExerciseController.showReviews(toolType: String, id: Int)

GET           /:toolType/reviews                                controllers.exes.ExerciseController.exerciseReviewsList(toolType: String)

# Other routes
GET           /uml/classDiagram/:id/:part/cd.js                 controllers.exes.ExerciseController.umlClassDiag(id: Int, part: String)
GET           /programming/classDiagram/:id/cd.js               controllers.exes.ExerciseController.progClassDiagram(id: Int)
GET           /web/solution/:id/:part                           controllers.exes.ExerciseController.webSolution(id: Int, part: String)
PUT           /web/solution/:id/:part                           controllers.exes.ExerciseController.updateWebSolution(id: Int, part: String)