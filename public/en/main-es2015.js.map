{"version":3,"sources":["en.js","src/app/tools/random-tools/bool/_model/boolean-formula-parser.ts","src/app/tools/collection-tools/sql/sql-exercise/sql-exercise.component.ts","src/app/tools/collection-tools/sql/sql-exercise/sql-exercise.component.html","src/app/tools/collection-tools/ebnf/ebnf-exercise/ebnf-exercise.component.ts","src/app/tools/collection-tools/ebnf/ebnf-exercise/ebnf-exercise.component.html","src/app/tools/collection-tools/uml/_model/joint-class-diag-elements.ts","src/app/tools/collection-tools/collection-tools.module.ts","src/app/tools/collection-tools/sql/_results/sql-matching-result/sql-matching-result.component.ts","src/app/tools/collection-tools/uml/_components/uml-assoc-match-result/uml-assoc-match-result.component.ts","src/app/tools/collection-tools/lessons/lesson-as-video/lesson-as-video.component.ts","src/app/tools/random-tools/bool/bool-create/bool-create.component.ts","src/app/tools/random-tools/bool/bool-create/bool-create.component.html","src/app/tools/random-tools/bool/bool-drawing/bool-drawing.component.ts","src/app/tools/random-tools/bool/bool-drawing/bool-drawing.component.html","src/app/tools/collection-tools/_components/exercise-files-editor/exercise-files-editor.component.ts","src/app/tools/collection-tools/_components/exercise-files-editor/exercise-files-editor.component.html","src/app/tools/collection-tools/programming/_results/programming-normal-result/programming-implementation-correction-result.component.ts","src/app/graphql.module.ts","src/app/shared/tab/tab.component.ts","src/app/_services/dexie.service.ts","src/app/tools/random-tools/random-tools.routing.ts","src/app/tools/random-tools/_components/random-solve-buttons/random-solve-buttons.component.ts","src/app/tools/random-tools/nary/nary-addition/nary-addition.component.ts","src/app/tools/random-tools/nary/nary-addition/nary-addition.component.html","src/app/tools/collection-tools/regex/regex-extraction-result/regex-extraction-match/regex-extraction-match.component.ts","src/app/tools/collection-tools/lessons/lesson-overview/lesson-overview.component.ts","src/app/tools/collection-tools/regex/regex-cheatsheet/regex-cheatsheet.component.ts","src/app/tools/collection-tools/regex/regex-cheatsheet/regex-cheatsheet.component.html","src/app/helpers.ts","src/app/user_management/login-form/login-form.component.ts","src/app/user_management/login-form/login-form.component.html","src/environments/environment.ts","src/app/tools/random-tools/bool/bool-drawing/_bool-drawing-model/boolDrawing.ts","src/app/tools/collection-tools/collection-tools.routing.ts","src/app/tools/collection-tools/regex/regex-exercise/regex-exercise.component.ts","src/app/tools/collection-tools/regex/regex-exercise/regex-exercise.component.html","src/app/tools/collection-tools/xml/xml-exercise/xml-exercise.component.ts","src/app/tools/collection-tools/xml/xml-exercise/xml-exercise.component.html","src/app/tools/collection-tools/lessons/lesson-questions/lesson-questions-content.component.ts","src/app/tools/collection-tools/sql/_components/query-result-table/query-result-table.component.ts","src/app/tools/random-tools/bool/bool-drawing/_bool-drawing-model/formulaExtractor.ts","src/app/tools/collection-tools/programming/programming-exercise/programming-exercise.component.ts","src/app/tools/collection-tools/programming/programming-exercise/programming-exercise.component.html","src/app/tools/collection-tools/_components/files-exercise/files-exercise.component.ts","src/app/tools/collection-tools/_components/files-exercise/files-exercise.component.html","src/app/tools/random-tools/nary/nary-two-conversion/nary-two-conversion.component.ts","src/app/tools/random-tools/nary/nary-two-conversion/nary-two-conversion.component.html","src/app/tools/random-tools/bool/bool-drawing/_bool-drawing-model/boolDrawingElements.ts","src/app/tools/random-tools/bool/bool-fill-out/bool-fill-out.component.ts","src/app/tools/random-tools/bool/bool-fill-out/bool-fill-out.component.html","src/app/tools/collection-tools/sql/_components/sql-table-contents/sql-table-contents.component.ts","src/app/tools/collection-tools/web/_components/html-attribute-result/html-attribute-result.component.ts","src/app/tools/collection-tools/_helpers/correction-helpers.ts","src/app/tools/collection-tools/sql/_results/sql-result/sql-result.component.html","src/app/tools/collection-tools/sql/_results/sql-result/sql-result.component.ts","src/app/tools/collection-tools/_components/filled-points/filled-points.component.ts","src/app/tools/collection-tools/uml/_model/my-uml-interfaces.ts","src/app/tools/random-tools/random-tools.module.ts","src/app/tools/random-tools/nary/_components/nary-number-read-only-input/nary-number-read-only-input.component.ts","src/app/shared/shared.module.ts","src/app/tools/collection-tools/xml/_components/xml-document-correction/xml-document-correction.component.ts","src/app/tools/collection-tools/uml/uml-tools.ts","src/app/tools/collection-tools/uml/uml-member-allocation/uml-member-allocation.component.ts","src/app/tools/collection-tools/uml/uml-member-allocation/uml-member-allocation.component.html","src/app/tools/collection-tools/exercise-overview/exercise-overview.component.html","src/app/tools/collection-tools/exercise-overview/exercise-overview.component.ts","src/app/tools/random-tools/nary/nary-exercise/nary-exercise.component.ts","src/app/app.component.html","src/app/app.component.ts","src/app/_helpers/auth-guard.ts","src/app/tools/collection-tools/_helpers/component-with-exercise.directive.ts","src/app/tools/random-tools/random-tools-list.ts","src/app/tools/collection-tools/uml/_components/uml-assoc-edit/uml-assoc-edit.component.ts","src/app/tools/collection-tools/uml/_components/uml-assoc-edit/uml-assoc-edit.component.html","src/app/tools/collection-tools/uml/_components/uml-class-edit/uml-class-edit.component.ts","src/app/tools/collection-tools/uml/_components/uml-class-edit/uml-class-edit.component.html","src/app/tools/collection-tools/collection-tool-helpers.ts","src/app/tools/collection-tools/sql/_results/sql-execution-result/sql-execution-result.component.ts","src/app/tools/collection-tools/flask/flask-exercise/flask-exercise.component.ts","src/app/tools/collection-tools/flask/flask-exercise/flask-exercise.component.html","src/app/tools/collection-tools/collections-list/collections-list.component.html","src/app/tools/collection-tools/collections-list/collections-list.component.ts","src/app/tools/random-tools/bool/bool-exercise/bool-exercise.component.ts","src/app/app.module.ts","src/app/tools/collection-tools/all-exercises-overview/all-exercises-overview.component.ts","src/app/tools/collection-tools/all-exercises-overview/all-exercises-overview.component.html","src/app/tools/random-tools/random-overview/random-overview.component.ts","src/app/tools/random-tools/random-overview/random-overview.component.html","src/app/shared/tabs/tabs.component.ts","src/app/tools/collection-tools/_components/exercise-file-card/exercise-file-card.component.ts","src/app/tools/collection-tools/collection-tool-overview/collection-tool-overview.component.html","src/app/tools/collection-tools/collection-tool-overview/collection-tool-overview.component.ts","src/app/tools/collection-tools/lessons/lessons-for-tool-overview/lessons-for-tool-overview.component.ts","src/app/tools/random-tools/nary/nary-conversion/nary-conversion.component.ts","src/app/tools/random-tools/nary/nary-conversion/nary-conversion.component.html","src/app/shared/points-notification/points-notification.component.ts","src/app/lti/lti.component.ts","src/app/tools/collection-tools/uml/uml-exercise/uml-exercise.component.ts","src/app/tools/collection-tools/web/web-exercise/web-exercise.component.ts","src/app/tools/collection-tools/web/web-exercise/web-exercise.component.html","src/app/tools/collection-tools/_components/string-sample-sol/string-sample-sol.component.ts","src/app/tools/collection-tools/lessons/solvable-lesson-content.ts","src/app/tools/collection-tools/regex/regex-extraction-result/regex-extraction-result.component.ts","src/app/tools/collection-tools/uml/_model/class-diag-helpers.ts","src/app/tools/collection-tools/programming/_results/programming-unit-test-result/programming-unit-test-result.component.ts","src/app/shared/breadcrumbs/breadcrumbs.component.ts","src/app/tools/random-tools/nary/nary.ts","src/app/_helpers/error.interceptor.ts","src/app/_services/apollo_services.ts","src/app/user_management/register-form/register-form.component.ts","src/app/user_management/register-form/register-form.component.html","src/app/tools/random-tools/bool/_model/bool-node.ts","src/app/_services/authentication.service.ts","src/app/tools/collection-tools/collection-overview/collection-overview.component.html","src/app/tools/collection-tools/collection-overview/collection-overview.component.ts","src/app/tools/collection-tools/uml/_components/uml-impl-result/uml-impl-result.component.ts","src/app/tools/collection-tools/web/_components/html-task-result/html-task-result.component.ts","src/app/shared/solution-saved/solution-saved.component.ts","src/app/tools/collection-tools/uml/uml-diagram-drawing/uml-diagram-drawing.component.ts","src/app/tools/collection-tools/uml/uml-diagram-drawing/uml-diagram-drawing.component.html","src/app/tools/collection-tools/exercise/exercise.component.html","src/app/tools/collection-tools/exercise/exercise.component.ts","src/app/tools/random-tools/bool/_model/bool-formula.ts","src/app/tools/collection-tools/lessons/lesson-as-text/lesson-as-text.component.ts","src/app/tools/collection-tools/lessons/lesson-as-text/lesson-as-text.component.html","src/app/tool-overview/tool-overview.component.ts","src/app/tool-overview/tool-overview.component.html","src/app/tools/collection-tools/regex/regex-matching-result/regex-matching-result.component.ts","src/app/tools/random-tools/bool/bool-create/bool-create-instructions/bool-create-instructions.component.ts","src/app/tools/random-tools/bool/bool-create/bool-create-instructions/bool-create-instructions.component.html","src/app/tools/random-tools/bool/_model/bool-component-helper.ts","src/app/tools/collection-tools/_components/proficiency-card/proficiency-card.component.ts","src/app/app-routing.module.ts","src/app/tools/collection-tools/xml/_components/xml-element-line-match-result/xml-element-line-match-result.component.ts","src/app/tools/collection-tools/uml/_components/uml-diag-drawing-correction/uml-diag-drawing-correction.component.ts","src/app/tools/collection-tools/_components/exercise-link-card/exercise-link-card.component.ts","src/app/tools/collection-tools/uml/uml-class-selection/uml-class-selection.component.ts","src/app/tools/collection-tools/uml/uml-class-selection/uml-class-selection.component.html","src/app/tools/collection-tools/uml/_model/uml-consts.ts","src/main.ts","$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["\"use strict\";(function(global){global.ng=global.ng||{};global.ng.common=global.ng.common||{};global.ng.common.locales=global.ng.common.locales||{};const u=undefined;function plural(n){let i=Math.floor(Math.abs(n)),v=n.toString().replace(/^[^.]*\\.?/,\"\").length;if(i===1&&v===0)return 1;return 5}global.ng.common.locales[\"en\"]=[\"en\",[[\"a\",\"p\"],[\"AM\",\"PM\"],u],[[\"AM\",\"PM\"],u,u],[[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"]],u,[[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]],u,[[\"B\",\"A\"],[\"BC\",\"AD\"],[\"Before Christ\",\"Anno Domini\"]],0,[6,0],[\"M/d/yy\",\"MMM d, y\",\"MMMM d, y\",\"EEEE, MMMM d, y\"],[\"h:mm a\",\"h:mm:ss a\",\"h:mm:ss a z\",\"h:mm:ss a zzzz\"],[\"{1}, {0}\",u,\"{1} 'at' {0}\",u],[\".\",\",\",\";\",\"%\",\"+\",\"-\",\"E\",\"\\xD7\",\"\\u2030\",\"\\u221E\",\"NaN\",\":\"],[\"#,##0.###\",\"#,##0%\",\"\\xA4#,##0.00\",\"#E0\"],\"USD\",\"$\",\"US Dollar\",{},\"ltr\",plural,[[[\"mi\",\"n\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],[\"midnight\",\"noon\",\"in the morning\",\"in the afternoon\",\"in the evening\",\"at night\"],u],[[\"midnight\",\"noon\",\"morning\",\"afternoon\",\"evening\",\"night\"],u,u],[\"00:00\",\"12:00\",[\"06:00\",\"12:00\"],[\"12:00\",\"18:00\"],[\"18:00\",\"21:00\"],[\"21:00\",\"06:00\"]]]]})(typeof globalThis!==\"undefined\"&&globalThis||typeof global!==\"undefined\"&&global||typeof window!==\"undefined\"&&window);","import {createToken, EmbeddedActionsParser, ILexingResult, IToken, Lexer, TokenType} from 'chevrotain';\nimport {\n  BooleanAnd,\n  BooleanConstant,\n  BooleanFalse,\n  BooleanNode,\n  BooleanNot,\n  BooleanOr,\n  BooleanTrue,\n  BooleanVariable,\n  instantiateOperator\n} from './bool-node';\n\ntype RuleType<T> = (idxInCallingRule?: number, ...args: any[]) => T;\n\ninterface RuleRight {\n  operator: string;\n  right: BooleanNode;\n}\n\n// Tokens\n\nconst whiteSpace = createToken({name: 'WhiteSpace', pattern: /\\s+/, group: Lexer.SKIPPED});\n\nconst variable = createToken({name: 'Variable', pattern: /[a-z]/});\nconst TRUE = createToken({name: 'TRUE', pattern: /1|TRUE/i});\nconst FALSE = createToken({name: 'FALSE', pattern: /0|FALSE/i});\n\nconst leftBracket = createToken({name: 'leftBracket', pattern: /\\(/});\nconst rightBracket = createToken({name: 'rightBracket', pattern: /\\)/});\n\nconst notOperator = createToken({name: 'notOperator', pattern: /not/});\nconst andOperator = createToken({name: 'AndOperator', pattern: /and/});\nconst orOperator = createToken({name: 'OrOperator', pattern: /or/});\nconst otherOperators = createToken({name: 'Operators', pattern: /[x|n]or|nand|equiv|impl/});\n\n\nconst allTokens: TokenType[] = [\n//  andOperator, orOperator, xOrOperator, nOrOerator, nAndOperator, equivOperator, implOperator,\n  leftBracket, rightBracket,\n  notOperator, andOperator, orOperator, otherOperators,\n  TRUE, FALSE, variable, whiteSpace\n];\n\nconst BooleanFormulaLexer: Lexer = new Lexer(allTokens);\n\nexport class BooleanFormulaParser extends EmbeddedActionsParser {\n\n  constructor() {\n    super(allTokens);\n    this.performSelfAnalysis();\n  }\n\n  private trueRule: RuleType<BooleanConstant> = this.RULE('trueRule', () => {\n    this.CONSUME(TRUE);\n    return BooleanTrue;\n  });\n\n  private falseRule: RuleType<BooleanConstant> = this.RULE('falseRule', () => {\n    this.CONSUME(FALSE);\n    return BooleanFalse;\n  });\n\n  private variableRule: RuleType<BooleanVariable> = this.RULE('variableRule', () => {\n    const variableToken: IToken = this.CONSUME(variable);\n    return new BooleanVariable(variableToken.image[0]);\n  });\n\n  private factor: RuleType<BooleanNode> = this.RULE('factor', () => {\n    return this.OR([\n      {\n        ALT: () => {\n          this.CONSUME(leftBracket);\n          const child = this.SUBRULE(this.booleanFormula);\n          this.CONSUME(rightBracket);\n          return child;\n        }\n      },\n      {ALT: () => this.SUBRULE(this.variableRule)},\n      {ALT: () => this.SUBRULE<BooleanNode>(this.trueRule)},\n      {ALT: () => this.SUBRULE<BooleanNode>(this.falseRule)},\n    ]);\n  });\n\n  private notFactor: RuleType<BooleanNode> = this.RULE('notFactor', () => {\n    const negated: boolean = this.OPTION(() => {\n      return this.CONSUME(notOperator);\n    }) !== undefined;\n\n    const child = this.SUBRULE(this.factor);\n\n    return negated ? new BooleanNot(child) : child;\n  });\n\n  private andTermComponent: RuleType<BooleanNode> = this.RULE('otherTerm', () => {\n    const left: BooleanNode = this.SUBRULE(this.notFactor);\n\n    const otherOpRights: RuleRight[] = [];\n\n    this.MANY(() => {\n      const operator: IToken = this.CONSUME(otherOperators);\n      const factor: BooleanNode = this.SUBRULE2(this.notFactor);\n\n      otherOpRights.push({operator: operator.image, right: factor});\n    });\n\n    if (otherOpRights.length === 0) {\n      return left;\n    } else {\n      return otherOpRights.reduce(\n        (prev: BooleanNode, curr: RuleRight) => instantiateOperator(prev, curr.operator, curr.right),\n        left\n      );\n    }\n  });\n\n  private orTermComponent: RuleType<BooleanNode> = this.RULE('orTerm', () => {\n    const left: BooleanNode = this.SUBRULE(this.andTermComponent);\n\n    const rightSides: BooleanNode[] = [];\n\n    this.MANY(() => {\n      this.CONSUME(andOperator);\n      rightSides.push(this.SUBRULE2(this.andTermComponent));\n    });\n\n    return rightSides.length > 0 ? new BooleanAnd(left, rightSides.reduce((l, r) => new BooleanAnd(l, r))) : left;\n  });\n\n  public booleanFormula: RuleType<BooleanNode> = this.RULE('booleanFormula', () => {\n    const left: BooleanNode = this.SUBRULE(this.orTermComponent);\n\n    const rightSides: BooleanNode[] = [];\n\n    this.MANY(() => {\n      this.CONSUME(orOperator);\n      rightSides.push(this.SUBRULE2(this.orTermComponent));\n    });\n\n    return rightSides.length > 0 ? new BooleanOr(left, rightSides.reduce((l, r) => new BooleanOr(l, r))) : left;\n  });\n\n}\n\nexport function parseBooleanFormula(formulaString: string): BooleanNode | undefined {\n  const lexResult: ILexingResult = BooleanFormulaLexer.tokenize(formulaString);\n\n  const parser: BooleanFormulaParser = new BooleanFormulaParser();\n\n  parser.input = lexResult.tokens;\n\n  return parser.booleanFormula();\n}\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {getDefaultEditorOptions} from '../../collection-tool-helpers';\nimport {DbSolution} from '../../../../_interfaces/exercise';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {\n  ExerciseSolveFieldsFragment,\n  SqlCorrectionGQL,\n  SqlCorrectionMutation,\n  SqlCorrectionMutationVariables,\n  SqlCorrectionResultFragment,\n  SqlExerciseContentFragment,\n  SqlExPart,\n  SqlResultFragment\n} from '../../../../_services/apollo_services';\nimport {HasSampleSolutions} from \"../../_helpers/correction-helpers\";\nimport {DexieService} from \"../../../../_services/dexie.service\";\n\nimport 'codemirror/mode/sql/sql';\n\nfunction getIdForSqlExPart(sqlExPart: SqlExPart): string {\n  return 'solve';\n}\n\n@Component({\n  selector: 'it4all-sql-exercise',\n  templateUrl: './sql-exercise.component.html',\n  styleUrls: ['./sql-exercise.component.sass'],\n  encapsulation: ViewEncapsulation.None // style editor also\n})\nexport class SqlExerciseComponent\n  extends ComponentWithExerciseDirective<string, SqlCorrectionMutation, SqlCorrectionMutationVariables>\n  implements OnInit, HasSampleSolutions<string> {\n\n  readonly editorOptions = getDefaultEditorOptions('sql');\n\n  readonly partId = getIdForSqlExPart(SqlExPart.SqlSingleExPart);\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: SqlExerciseContentFragment;\n\n  solution = '';\n\n  constructor(sqlCorrectionGQL: SqlCorrectionGQL, dexieService: DexieService) {\n    super(sqlCorrectionGQL, dexieService);\n  }\n\n  ngOnInit() {\n    this.dexieService\n      .getSolution(this.exerciseFragment, this.partId)\n      .then((solution: DbSolution<string> | undefined) => this.solution = solution ? solution.solution : '');\n  }\n\n  // Result types\n\n  get correctionResult(): SqlCorrectionResultFragment | null {\n    return this.resultQuery?.me.sqlExercise?.correct;\n  }\n\n  get sqlResult(): SqlResultFragment | null {\n    return this.correctionResult?.result;\n  }\n\n  // Correction\n\n  protected getSolution(): string | undefined {\n    return this.solution.length > 0 ? this.solution : undefined;\n  }\n\n  protected getMutationQueryVariables(): SqlCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: SqlExPart.SqlSingleExPart,\n    };\n  }\n\n  correct(): void {\n    this.correctAbstract(this.exerciseFragment, this.partId);\n  }\n\n  // Sample solutions\n\n  displaySampleSolutions = false;\n\n  toggleSampleSolutions() {\n    this.displaySampleSolutions = !this.displaySampleSolutions;\n  }\n\n  get sampleSolutions(): string[] {\n    return this.contentFragment.sqlSampleSolutions;\n  }\n\n}\n","<div class=\"container is-fluid\">\n\n  <div class=\"columns\">\n    <div class=\"column is-two-fifths-desktop\">\n      <h1 class=\"title is-3 has-text-centered\">Aufgabenstellung</h1>\n      <div class=\"notification is-light-grey\">{{exerciseFragment.text}}</div>\n\n      <h1 class=\"title is-4 has-text-centered\">Anfrage</h1>\n\n      <ngx-codemirror [(ngModel)]=\"solution\" [options]=\"editorOptions\"></ngx-codemirror>\n\n      <br>\n\n      <div class=\"columns\">\n        <div class=\"column\">\n          <button class=\"button is-link is-fullwidth\" [class.is-loading]=\"isCorrecting\" (click)=\"correct()\">\n            Lösung testen\n          </button>\n        </div>\n        <div class=\"column\">\n          <a class=\"button is-dark is-fullwidth\" routerLink=\"../..\">Bearbeiten beenden</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"column\">\n      <it4all-tabs>\n        <it4all-tab [title]=\"'Datenbankinhalt'\">\n          <it4all-sql-table-contents [dbContents]=\"contentFragment.sqlDbContents\"></it4all-sql-table-contents>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"correctionTabTitle\">\n\n          <div class=\"message is-danger my-3\" *ngIf=\"queryError\">\n            <div class=\"message-header\">Es gab einen Fehler bei der Korrektur:</div>\n            <div class=\"message-body\">\n              <pre>{{queryError.message}}</pre>\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"resultQuery\">\n\n            <div class=\"my-3\">\n              <it4all-solution-saved [solutionSaved]=\"correctionResult.solutionSaved\"></it4all-solution-saved>\n            </div>\n\n            <!--\n            <div class=\"my-3\">\n              <it4all-points-notification [points]=\"sqlResult.points\" [maxPoints]=\"sqlResult.maxPoints\">\n              </it4all-points-notification>\n            </div>\n            -->\n\n            <div class=\"my-3\">\n              <it4all-sql-result *ngIf=\"sqlResult\" [result]=\"sqlResult\"></it4all-sql-result>\n            </div>\n\n          </ng-container>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"sampleSolutionsTabTitle\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary is-fullwidth\" (click)=\"toggleSampleSolutions()\">\n              Musterlösungen {{displaySampleSolutions ? 'anzeigen' : 'ausblenden'}}\n            </button>\n          </div>\n\n          <ng-container *ngIf=\"displaySampleSolutions\">\n            <ng-container *ngFor=\"let sample of sampleSolutions; let last = last\">\n              <it4all-string-sample-sol [sample]=\"sample\"></it4all-string-sample-sol>\n\n              <br *ngIf=\"!last\">\n            </ng-container>\n          </ng-container>\n        </it4all-tab>\n      </it4all-tabs>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"sqlResult\">\n    <it4all-sql-execution-result [result]=\"sqlResult.executionResult\"></it4all-sql-execution-result>\n  </ng-container>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {EbnfExerciseContentFragment, ExerciseSolveFieldsFragment} from \"../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-ebnf-exercise',\n  templateUrl: './ebnf-exercise.component.html'\n})\nexport class EbnfExerciseComponent implements OnInit {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: EbnfExerciseContentFragment;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    console.info(JSON.stringify(this.contentFragment, null, 2));\n  }\n\n}\n","<div class=\"container\">\n  <p>ebnf-exercise works!</p>\n  TODO!\n</div>\n","import * as joint from 'jointjs';\nimport * as _ from 'lodash';\n\nimport {calcRectHeight, COLORS, fontSize, STD_ELEMENT_WIDTH, STD_PADDING} from './uml-consts';\nimport {buildAttributeString, buildMethodString, CLASS_TYPES} from './my-uml-interfaces';\nimport {UmlAttribute, UmlClassInput, UmlClassType, UmlMethod} from '../../../../_services/apollo_services';\n\nexport const STD_CLASS_HEIGHT = 160;\nexport const STD_CLASS_WIDTH = 200;\n\nconst CLASS_MARKUP = `\n<g class=\"rotatable\">\n  <g class=\"scalable\">\n    <rect class=\"uml-class-name-rect\"/><rect class=\"uml-class-attrs-rect\"/><rect class=\"uml-class-methods-rect\"/>\n  </g>\n  <text class=\"uml-class-name-text\"/><text class=\"uml-class-attrs-text\"/><text class=\"uml-class-methods-text\"/>\n</g>`.trim();\n\nexport class MyJointClass extends joint.shapes.basic.Generic {\n\n  constructor(attributes?: joint.dia.Element.Attributes, options?: joint.dia.Graph.Options) {\n    super(attributes, options);\n    this.set('markup', CLASS_MARKUP);\n  }\n\n  initialize(): void {\n\n    this.on('change:classType change:className change:attributes change:methods', () => {\n      console.log('Update...');\n      this.updateRectangles();\n    });\n\n    this.updateRectangles();\n\n    joint.shapes.basic.Generic.prototype.initialize.apply(this, arguments);\n  }\n\n  updateRectangles(): void {\n    const attrs = this.get('attrs');\n\n    const rects = [\n      {type: 'name', text: this.getClassRectText()},\n      {type: 'attrs', text: this.getAttributesAsStrings()},\n      {type: 'methods', text: this.getMethodsAsStrings()}\n    ];\n\n    let offsetY = 0;\n\n    rects.forEach((rect) => {\n\n      const rectHeight: number = calcRectHeight(rect.text);\n\n      attrs['.uml-class-' + rect.type + '-text'].text = rect.text.join('\\n');\n      attrs['.uml-class-' + rect.type + '-rect'].height = rectHeight;\n      attrs['.uml-class-' + rect.type + '-rect'].transform = 'translate(0,' + offsetY + ')';\n\n      offsetY += rectHeight;\n    });\n\n    this.resize(STD_CLASS_WIDTH, offsetY);\n  }\n\n  defaults(): Backbone.ObjectHash {\n    return _.defaultsDeep({\n      type: 'MyJointClass',\n      size: {width: STD_CLASS_WIDTH, height: STD_CLASS_HEIGHT},\n      attrs: {\n        rect: {width: STD_ELEMENT_WIDTH, stroke: COLORS.Black, strokeWidth: 2},\n        text: {fill: COLORS.Black, fontSize, fontFamily: 'Times New Roman'},\n\n        // Do not delete, needed for later!\n        '.uml-class-name-rect': {},\n        '.uml-class-attrs-rect': {},\n        '.uml-class-methods-rect': {},\n\n        '.uml-class-name-text': {\n          ref: '.uml-class-name-rect', refY: .5, refX: .5,\n          textAnchor: 'middle', yAlignment: 'middle', fontWeight: 'bold',\n        },\n        '.uml-class-attrs-text': {ref: '.uml-class-attrs-rect', refY: STD_PADDING, refX: STD_PADDING},\n        '.uml-class-methods-text': {ref: '.uml-class-methods-rect', refY: STD_PADDING, refX: STD_PADDING}\n      },\n\n      className: '' as string,\n      classType: '',\n      attributes: [] as UmlAttribute[],\n      methods: [] as UmlMethod[]\n    }, joint.shapes.basic.Generic.prototype.defaults);\n  }\n\n  getClassType(): UmlClassType {\n    return this.get('classType') || 'CLASS';\n  }\n\n  setClassType(classType: UmlClassType): void {\n    if (CLASS_TYPES.indexOf(classType) >= 0) {\n      this.prop('classType', classType);\n    } else {\n      console.error('>>' + classType + '<< is no legal value for a class type!');\n    }\n  }\n\n  getClassName(): string {\n    return this.get('className');\n  }\n\n  setClassName(className: string): void {\n    this.set('className', className);\n  }\n\n  getClassRectText(): string[] {\n    const className = this.getClassName();\n\n    switch (this.getClassType()) {\n      case 'ABSTRACT':\n        return ['<<abstract>>', className];\n      case 'INTERFACE':\n        return ['<<interface>>', className];\n      case 'CLASS':\n      default:\n        return [className];\n    }\n  }\n\n  getAttributesAsStrings(): string[] {\n    return this.get('attributes').map(buildAttributeString);\n  }\n\n  getAttributes(): UmlAttribute[] {\n    return this.get('attributes');\n  }\n\n  setAttributes(attributes: UmlAttribute[]): void {\n    this.set('attributes', attributes);\n  }\n\n  getMethods(): UmlMethod[] {\n    return this.get('methods');\n  }\n\n  getMethodsAsStrings(): string[] {\n    return this.get('methods').map(buildMethodString);\n  }\n\n  setMethods(methods: UmlMethod[]): void {\n    this.set('methods', methods);\n  }\n\n  getAsUmlClass(): UmlClassInput {\n    return {\n      name: this.getClassName(),\n      classType: this.getClassType(),\n      attributes: this.getAttributes(),\n      methods: this.getMethods()\n    };\n  }\n\n}\n\n\nexport function isMyJointClass(cell: joint.dia.Cell): cell is MyJointClass {\n  return cell instanceof MyJointClass;\n}\n\nexport function isAssociation(link: joint.dia.Link): link is joint.shapes.uml.Association {\n  return link instanceof joint.shapes.uml.Association;\n}\n\nexport function isImplementation(link: joint.dia.Link): link is joint.shapes.uml.Implementation {\n  return link instanceof joint.shapes.uml.Implementation;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RegexMatchingResultComponent} from './regex/regex-matching-result/regex-matching-result.component';\nimport {RegexExtractionResultComponent} from './regex/regex-extraction-result/regex-extraction-result.component';\nimport {RegexExtractionMatchComponent} from './regex/regex-extraction-result/regex-extraction-match/regex-extraction-match.component';\nimport {RegexCheatsheetComponent} from './regex/regex-cheatsheet/regex-cheatsheet.component';\nimport {SqlResultComponent} from './sql/_results/sql-result/sql-result.component';\nimport {SqlMatchingResultComponent} from './sql/_results/sql-matching-result/sql-matching-result.component';\nimport {collectionToolRoutingComponents, CollectionToolRoutingModule} from './collection-tools.routing';\nimport {FormsModule} from '@angular/forms';\nimport {ExerciseFilesEditorComponent} from './_components/exercise-files-editor/exercise-files-editor.component';\nimport {ExerciseFileCardComponent} from './_components/exercise-file-card/exercise-file-card.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {ExerciseOverviewComponent} from './exercise-overview/exercise-overview.component';\nimport {ExerciseComponent} from './exercise/exercise.component';\nimport {RegexExerciseComponent} from './regex/regex-exercise/regex-exercise.component';\nimport {ProgrammingExerciseComponent} from './programming/programming-exercise/programming-exercise.component';\nimport {SqlExerciseComponent} from './sql/sql-exercise/sql-exercise.component';\nimport {UmlExerciseComponent} from './uml/uml-exercise/uml-exercise.component';\nimport {WebExerciseComponent} from './web/web-exercise/web-exercise.component';\nimport {UmlClassSelectionComponent} from './uml/uml-class-selection/uml-class-selection.component';\nimport {AllExercisesOverviewComponent} from './all-exercises-overview/all-exercises-overview.component';\nimport {XmlExerciseComponent} from './xml/xml-exercise/xml-exercise.component';\nimport {SqlExecutionResultComponent} from './sql/_results/sql-execution-result/sql-execution-result.component';\nimport {UmlDiagramDrawingComponent} from './uml/uml-diagram-drawing/uml-diagram-drawing.component';\nimport {UmlClassEditComponent} from './uml/_components/uml-class-edit/uml-class-edit.component';\nimport {UmlAssocEditComponent} from './uml/_components/uml-assoc-edit/uml-assoc-edit.component';\nimport {ExerciseLinkCardComponent} from './_components/exercise-link-card/exercise-link-card.component';\nimport {UmlDiagDrawingCorrectionComponent} from './uml/_components/uml-diag-drawing-correction/uml-diag-drawing-correction.component';\nimport {UmlMemberAllocationComponent} from './uml/uml-member-allocation/uml-member-allocation.component';\nimport {XmlDocumentCorrectionComponent} from './xml/_components/xml-document-correction/xml-document-correction.component';\nimport {SqlTableContentsComponent} from './sql/_components/sql-table-contents/sql-table-contents.component';\nimport {StringSampleSolComponent} from './_components/string-sample-sol/string-sample-sol.component';\nimport {QueryResultTableComponent} from './sql/_components/query-result-table/query-result-table.component';\nimport {ProgrammingUnitTestResultComponent} from './programming/_results/programming-unit-test-result/programming-unit-test-result.component';\nimport {ProgrammingImplementationCorrectionResultComponent} from './programming/_results/programming-normal-result/programming-implementation-correction-result.component';\nimport {HtmlTaskResultComponent} from './web/_components/html-task-result/html-task-result.component';\nimport {HtmlAttributeResultComponent} from './web/_components/html-attribute-result/html-attribute-result.component';\nimport {FilledPointsComponent} from './_components/filled-points/filled-points.component';\nimport {ProficiencyCardComponent} from './_components/proficiency-card/proficiency-card.component';\nimport {LessonQuestionsContentComponent} from './lessons/lesson-questions/lesson-questions-content.component';\nimport {FlaskExerciseComponent} from './flask/flask-exercise/flask-exercise.component';\nimport {FilesExerciseComponent} from './_components/files-exercise/files-exercise.component';\nimport {UmlImplResultComponent} from \"./uml/_components/uml-impl-result/uml-impl-result.component\";\nimport {XmlElementLineMatchResultComponent} from './xml/_components/xml-element-line-match-result/xml-element-line-match-result.component';\nimport {UmlAssocMatchResultComponent} from './uml/_components/uml-assoc-match-result/uml-assoc-match-result.component';\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {EbnfExerciseComponent} from \"./ebnf/ebnf-exercise/ebnf-exercise.component\";\n\n\n@NgModule({\n  declarations: [\n    ...collectionToolRoutingComponents,\n\n    ExerciseFilesEditorComponent, ExerciseFileCardComponent,\n\n    LessonQuestionsContentComponent,\n\n    AllExercisesOverviewComponent,\n    ExerciseOverviewComponent,\n    ExerciseLinkCardComponent,\n\n    ProficiencyCardComponent,\n\n    ExerciseComponent,\n\n    StringSampleSolComponent, FilledPointsComponent,\n\n    FilesExerciseComponent,\n\n    EbnfExerciseComponent,\n\n    FlaskExerciseComponent,\n\n    ProgrammingExerciseComponent, ProgrammingUnitTestResultComponent, ProgrammingImplementationCorrectionResultComponent,\n\n    RegexExerciseComponent, RegexMatchingResultComponent, RegexExtractionResultComponent, RegexExtractionMatchComponent,\n    RegexCheatsheetComponent,\n\n    SqlExerciseComponent, SqlResultComponent, SqlMatchingResultComponent, SqlExecutionResultComponent, SqlTableContentsComponent, QueryResultTableComponent,\n\n    UmlDiagramDrawingComponent, UmlClassEditComponent, UmlAssocEditComponent, UmlExerciseComponent, UmlClassSelectionComponent,\n    UmlDiagDrawingCorrectionComponent, UmlMemberAllocationComponent,\n\n    WebExerciseComponent, HtmlTaskResultComponent, HtmlAttributeResultComponent,\n\n    XmlExerciseComponent, XmlDocumentCorrectionComponent, UmlImplResultComponent, UmlImplResultComponent, XmlElementLineMatchResultComponent, UmlAssocMatchResultComponent\n  ],\n  providers: [],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    CodemirrorModule,\n    SharedModule,\n    CollectionToolRoutingModule\n  ]\n})\nexport class CollectionToolsModule {\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {MatchType, StringMatchFragment, StringMatchingResultFragment} from '../../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-sql-matching-result',\n  template: `\n    <div [ngClass]=\"successful ? 'has-text-success' : 'has-text-danger'\">\n      <!-- ({{matchingResult.points.toFixed(1)}} / {{matchingResult.maxPoints.toFixed(1)}} P) -->\n      Der Vergleich der {{matchName}} war {{successful ? \"\" : \"nicht\"}} erfolgreich.\n    </div>\n    <div class=\"content\" *ngIf=\"!successful\">\n      <ul>\n        <li *ngFor=\"let match of matchingResult.allMatches\" [class]=\"getCssClassForMatchType(match.matchType)\">\n          Die Angabe {{matchSingularName}}\n          <code>{{getArgDescription(match)}}</code> {{getTextForMatchType(match.matchType)}}.\n        </li>\n        <li *ngFor=\"let notMatchedForUser of matchingResult.notMatchedForUser\" class=\"has-text-danger\">\n          Die Angabe {{matchSingularName}} <code>{{notMatchedForUser}}</code> ist falsch.\n        </li>\n        <li *ngFor=\"let notMatchedForSample of matchingResult.notMatchedForSample\" class=\"has-text-danger\">\n          Die Angabe {{matchSingularName}} <code>{{notMatchedForSample}}</code> fehlt.\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class SqlMatchingResultComponent implements OnChanges {\n\n  @Input() matchName: string;\n  @Input() matchSingularName: string;\n\n  @Input() matchingResult: StringMatchingResultFragment;\n\n  successful: boolean;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.successful = this.matchingResult.allMatches\n      .every((m) => m.matchType === MatchType.SuccessfulMatch);\n  }\n\n  getCssClassForMatchType(matchType: MatchType): string {\n    return (matchType === MatchType.SuccessfulMatch) ? 'has-text-success' : 'has-text-danger';\n  }\n\n  getArgDescription(match: StringMatchFragment): string {\n    return match.userArg;\n  }\n\n  getTextForMatchType(matchType: MatchType): string {\n    return matchType === MatchType.SuccessfulMatch ? 'ist korrekt' : 'ist nicht komplett richtig.';\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {\n  MatchType,\n  UmlAssociationMatchFragment,\n  UmlAssociationMatchingResultFragment,\n  UmlMultiplicity\n} from \"../../../../../_services/apollo_services\";\n\nfunction printCardinality(c: UmlMultiplicity): string {\n  return c === UmlMultiplicity.Unbound ? '*' : '1';\n}\n\n@Component({\n  selector: 'it4all-uml-assoc-match-result',\n  template: `\n    <ul>\n      <li *ngFor=\"let m of assocResult.allMatches\">\n        <div [ngClass]=\"isCorrect(m) ? 'has-text-dark-success' : 'has-text-danger'\">\n          Die Assoziation von <code>{{m.userArg.firstEnd}}</code> nach\n          <code>{{m.userArg.secondEnd}}</code> ist {{isCorrect(m) ? '' : 'nicht'}} korrekt.\n\n          <div *ngIf=\"!isCorrect\" class=\"content\">\n            <ul>\n              <li [ngClass]=\"m.analysisResult.assocTypeEqual ? 'has-text-dark-success' : 'has-text-danger'\">\n                Der Typ der Assoziation <code>{{m.userArg.assocType}}</code>\n                war {{m.analysisResult.assocTypeEqual ? '' : 'nicht'}} korrekt.\n              </li>\n              <li\n                [ngClass]=\"m.analysisResult.multiplicitiesEqual ? 'has-text-dark-success' : 'has-text-danger'\">\n                Die Kardinalitäten der Assoziation <code>{{gottenMultiplicities(m)}}</code>\n                waren {{m.analysisResult.multiplicitiesEqual ? '' : 'nicht'}}\n                korrekt.\n                <ng-container *ngIf=\"!m.analysisResult.multiplicitiesEqual\">Erwartet\n                  wurde {{correctCardinalities}}</ng-container>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </li>\n\n      <li *ngFor=\"let mu of assocResult.notMatchedForUser\" class=\"has-text-danger\">\n        Die Assoziation von <code>{{mu.firstEnd}}</code> nach <code>{{mu.secondEnd}}</code> ist falsch.\n      </li>\n\n      <li *ngFor=\"let ms of assocResult.notMatchedForSample\" class=\"has-text-danger\">\n        Die Assoziation von <code>{{ms.firstEnd}}</code> nach <code>{{ms.secondEnd}}</code> fehlt.\n      </li>\n    </ul>\n  `\n})\nexport class UmlAssocMatchResultComponent {\n\n  @Input() assocResult: UmlAssociationMatchingResultFragment;\n\n  isCorrect(m: UmlAssociationMatchFragment): boolean {\n    return m.matchType === MatchType.SuccessfulMatch;\n  }\n\n  gottenMultiplicities(m: UmlAssociationMatchFragment): string {\n    return `${printCardinality(m.userArg.firstMult)} : ${printCardinality(m.userArg.secondMult)}`;\n  }\n\n  correctCardinalities(m: UmlAssociationMatchFragment): string {\n    if (m.userArg.firstEnd === m.sampleArg.firstEnd) {\n      return printCardinality(m.sampleArg.firstMult) + ' : ' + printCardinality(m.sampleArg.secondMult);\n    } else {\n      return printCardinality(m.sampleArg.secondMult) + ' : ' + printCardinality(m.sampleArg.firstMult);\n    }\n  }\n\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl} from '@angular/platform-browser';\nimport {Subscription} from 'rxjs';\nimport {LessonAsVideoGQL, LessonAsVideoQuery} from '../../../../_services/apollo_services';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'it4all-lesson-as-video',\n  template: `\n    <div class=\"container\">\n\n      <h1 class=\"title is-3 has-text-centered\">{{lessonAsVideoQuery.me.tool.lesson.title}}</h1>\n\n      <figure class=\"image is-16by9\" *ngIf=\"lessonAsVideoQuery.me.tool.lesson.video\">\n        <iframe [src]=\"sanitizeUrl(lessonAsVideoQuery.me.tool.lesson.video)\"\n                frameborder=\"0\" width=\"560\" height=\"315\" class=\"has-ratio\"\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                allowfullscreen></iframe>\n      </figure>\n    </div>\n  `\n})\nexport class LessonAsVideoComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  lessonAsVideoQuery: LessonAsVideoQuery;\n\n  constructor(\n    private route: ActivatedRoute,\n    private lessonAsVideoGQL: LessonAsVideoGQL,\n    private domSanitizer: DomSanitizer\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n      const lessonId = parseInt(paramMap.get('lessonId'), 10);\n\n      this.lessonAsVideoGQL\n        .watch({toolId, lessonId})\n        .valueChanges\n        .subscribe(({data}) => this.lessonAsVideoQuery = data);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  sanitizeUrl(videoUrl: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(videoUrl);\n  }\n\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {parseBooleanFormula} from '../_model/boolean-formula-parser';\nimport {BoolComponentHelper} from '../_model/bool-component-helper';\nimport {BooleanNode, calculateAssignments} from '../_model/bool-node';\nimport {generateBooleanFormula} from '../_model/bool-formula';\n\n@Component({\n  selector: 'it4all-bool-create',\n  templateUrl: './bool-create.component.html'\n})\nexport class BoolCreateComponent extends BoolComponentHelper implements OnInit {\n\n  solution = '';\n\n  oldSolution: BooleanNode | undefined;\n\n  formulaParsed = false;\n\n  showInstructions = false;\n  showSampleSolutions = false;\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.showSampleSolutions = false;\n    this.showInstructions = false;\n\n    this.completelyCorrect = false;\n    this.formulaParsed = false;\n    this.corrected = false;\n\n    this.oldSolution = undefined;\n\n    this.solution = '';\n\n    this.formula = generateBooleanFormula(this.sampleVariable);\n\n    this.assignments = calculateAssignments(this.formula.getVariables());\n    this.assignments.forEach((assignment) => assignment.set(this.sampleVariable.variable, this.formula.evaluate(assignment)));\n  }\n\n  correct(): void {\n    this.corrected = true;\n\n    const booleanFormula: BooleanNode | undefined = parseBooleanFormula(this.solution);\n\n    if (!booleanFormula) {\n      alert('Konnte Formel >>' + this.solution + '<< nicht parsen!');\n      return;\n    }\n\n    this.oldSolution = booleanFormula;\n\n    this.formulaParsed = true;\n\n    // check contained variables!\n    const variablesAllowed: string[] = this.formula.getVariables().map((v) => v.variable);\n    const variablesUsed: string[] = booleanFormula.getVariables().map((v) => v.variable);\n\n    const illegalVariables = variablesUsed.filter((v) => !variablesAllowed.includes(v));\n\n\n    if (illegalVariables.length > 0) {\n      alert('Sie haben die falschen Variablen ' + illegalVariables + ' benutzt!');\n      return;\n    }\n\n    this.completelyCorrect = this.assignments\n      .map((assignment) => {\n        const value: boolean = booleanFormula.evaluate(assignment);\n        assignment.set(this.learnerVariable.variable, value);\n        return assignment.get(this.sampleVariable.variable) === value;\n      })\n      .every((a) => a);\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      if (this.completelyCorrect) {\n        this.update();\n      } else {\n        this.correct();\n      }\n    }\n  }\n\n}\n","<div class=\"columns\">\n  <div class=\"column is-half-desktop is-offset-one-quarter-desktop\">\n\n    <table class=\"table is-bordered is-fullwidth\">\n      <thead>\n        <tr>\n          <th class=\"has-text-centered\" *ngFor=\"let variable of formula.getVariables()\">{{variable.variable}}</th>\n          <th class=\"has-text-centered\">{{sampleVariable.variable}}</th>\n          <th class=\"has-text-centered\">{{learnerVariable.variable}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let assignment of assignments\">\n          <td class=\"has-text-centered\"\n              *ngFor=\"let variable of formula.getVariables()\">{{displayAssignmentValue(assignment, variable)}}</td>\n          <td class=\"has-text-centered\">{{displayAssignmentValue(assignment, sampleVariable)}}</td>\n          <td [class.has-background-danger]=\"corrected && !isCorrect(assignment)\"\n              [class.has-background-success]=\"corrected && isCorrect(assignment)\"\n              [class.has-text-white]=\"corrected\" class=\"has-text-centered\">\n            {{displayAssignmentValue(assignment, learnerVariable)}}\n            &nbsp;\n            <span class=\"has-text-white\" *ngIf=\"corrected && !isCorrect(assignment)\">&#10008;</span>\n            <span class=\"has-text-white\" *ngIf=\"corrected && isCorrect(assignment)\">&#10004;</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <hr>\n\n    <div class=\"field has-addons\">\n      <div class=\"control\">\n        <label for=\"solution\" class=\"button is-static\">{{sampleVariable.variable}} = </label>\n      </div>\n      <div class=\"control is-expanded\">\n        <input type=\"text\" class=\"input\" id=\"solution\" autocomplete=\"off\" placeholder=\"Boolesche Formel\"\n               autofocus [(ngModel)]=\"solution\">\n      </div>\n    </div>\n\n    <!-- FIXME: show current solutions... -->\n    <div class=\"notification has-text-centered\" *ngIf=\"oldSolution\">\n      <code [innerHTML]=\"'y = ' + oldSolution.asHtmlString()\"></code>\n    </div>\n\n    <div class=\"notification has-text-centered is-danger\" *ngIf=\"corrected && !formulaParsed\">\n      &#10071; Ihre Formel konnte nicht geparst werden!\n    </div>\n    <div class=\"notification has-text-centered is-danger\" *ngIf=\"corrected && formulaParsed && !completelyCorrect\">\n      &#10008; Die Formel ist nicht korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\" *ngIf=\"corrected && formulaParsed && completelyCorrect\">\n      &#10004; Die Formel ist korrekt.\n    </div>\n\n    <br>\n\n    <it4all-random-solve-buttons\n      (correctEmitter)=\"correct()\"\n      (nextEmitter)=\"update()\">\n    </it4all-random-solve-buttons>\n\n    <br>\n\n    <div class=\"columns\">\n      <div class=\"column is-half-desktop\">\n        <button class=\"button is-primary is-fullwidth\" (click)=\"showSampleSolutions = !showSampleSolutions\">\n          Musterlösungen anzeigen\n        </button>\n      </div>\n      <div class=\"column is-half-desktop\">\n        <button class=\"button is-info is-fullwidth\" (click)=\"showInstructions = !showInstructions\">\n          Hilfe anzeigen\n        </button>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngIf=\"showSampleSolutions\">\n      <header class=\"card-header\">\n        <p class=\"card-header-title is-centered\">Musterlösungen</p>\n      </header>\n      <div class=\"card-content\">\n        <code>{{formula.asString()}}</code>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<it4all-bool-create-instructions *ngIf=\"showInstructions\"></it4all-bool-create-instructions>\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {\n  broadcastSignal,\n  createElementInGraph,\n  dragX,\n  dragY,\n  draw,\n  graph,\n  paper,\n  SIGNALS,\n  toggleLive\n} from './_bool-drawing-model/boolDrawing';\nimport {extractFormulaFromGraph} from './_bool-drawing-model/formulaExtractor';\nimport {BooleanNode, BooleanVariable, calculateAssignments} from '../_model/bool-node';\nimport {Event} from 'jquery';\nimport * as joint from 'jointjs';\nimport {generateBooleanFormula} from '../_model/bool-formula';\nimport {BoolComponentHelper} from '../_model/bool-component-helper';\n\n@Component({\n  templateUrl: './bool-drawing.component.html',\n  styles: [`\n    #paper {\n      border: 1px solid grey;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BoolDrawingComponent extends BoolComponentHelper implements OnInit {\n\n  readonly gateTypes: string[] = ['not', 'and', 'nand', 'or', 'nor', 'xor', 'xnor'/*, 'equiv', 'impl'*/];\n\n  elementToCreate: string | undefined = undefined;\n\n  private createElement(elementName: string, x: number, y: number) {\n    createElementInGraph(elementName, x, y);\n    this.elementToCreate = undefined;\n  }\n\n  private initPaperEvents(): void {\n    paper.on('blank:pointerclick', (evt: Event, x: number, y: number) => {\n      if (this.elementToCreate) {\n        this.createElement('element' + this.elementToCreate.toUpperCase(), x, y);\n      }\n    });\n\n    paper.on('cell:pointerclick', (cellView: joint.dia.CellView) => {\n      // Left click on cell\n      const inputCell: joint.dia.Cell = cellView.model;\n\n      if (inputCell instanceof joint.shapes.logic.Input) {\n        const logicSymbol: string = inputCell.attr('logicSymbol');\n\n        const newSignal: boolean = !SIGNALS.get(logicSymbol);\n        SIGNALS.set(logicSymbol, newSignal);\n\n        toggleLive(inputCell, newSignal);\n\n        broadcastSignal(inputCell, newSignal);\n      }\n    });\n\n    paper.on('cell:contextmenu', (evt: joint.dia.CellView) => {\n      // Right click on cell\n      if (evt.model instanceof joint.shapes.logic.IO) {\n        alert('You cannot delete in Input or an Output!');\n      } else {\n        graph.getCell(evt.model.id).remove();\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.update();\n\n    draw(this.formula);\n\n    this.initPaperEvents();\n  }\n\n  update() {\n    this.formula = generateBooleanFormula(this.sampleVariable);\n    this.assignments = calculateAssignments(this.formula.getVariables());\n  }\n\n  toggleGateButton(event: MouseEvent, gateType: string): void {\n    this.elementToCreate = this.elementToCreate === gateType ? undefined : gateType;\n  }\n\n  gateButtonOnDragstart(event: DragEvent, item: string): void {\n    event.dataTransfer.setData('text', item);\n  }\n\n  paperOnDragover(event: DragEvent): void {\n    event.preventDefault();\n  }\n\n  paperOnDrop(event: DragEvent): void {\n    event.preventDefault();\n\n    const elementToCreate: string = event.dataTransfer.getData('text');\n\n    console.error(elementToCreate);\n\n    // scale: Coordinates offset by graph scale, correct with factor\n    const scale = joint.V(paper.viewport).scale();\n\n    this.createElement('element' + elementToCreate.toUpperCase(), dragX / scale.sx, dragY / scale.sy);\n  }\n\n  updateCreatedFormula(): void {\n    const formulas: [BooleanVariable, (BooleanNode | undefined)][] = extractFormulaFromGraph(graph);\n\n    formulas.forEach((outputFormula: [BooleanVariable, (BooleanNode | undefined)]) => {\n      if (outputFormula[1]) {\n        // tslint:disable-next-line:no-console\n        console.info(outputFormula[0].variable + ' = ' + outputFormula[1].asString());\n      } else {\n        // tslint:disable-next-line:no-console\n        console.info(outputFormula[0].variable + ' = undefined!');\n      }\n    });\n  }\n\n}\n","<div class=\"container is-fluid\">\n  <div class=\"columns\">\n    <div class=\"column is-two-thirds-desktop\">\n\n      <div id=\"paper\" (dragover)=\"paperOnDragover($event)\" (drop)=\"paperOnDrop($event)\"></div>\n\n      <br>\n\n      <div class=\"columns\">\n        <div class=\"column\" *ngFor=\"let gateType of gateTypes\">\n          <button (click)=\"toggleGateButton($event, gateType)\"\n                  draggable=\"true\" (dragstart)=\"gateButtonOnDragstart($event, gateType)\"\n                  class=\"button is-fullwidth\" [class.is-primary]=\"elementToCreate === gateType\">\n            {{gateType}}\n          </button>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"column is-one-third-desktop\">\n\n      <!-- TODO: Wertetabelle -->\n      <table class=\"table is-bordered is-striped is-fullwidth\">\n        <thead>\n          <tr>\n            <th class=\"has-text-centered\" *ngFor=\"let variable of formula.getVariables()\">{{variable.variable}}</th>\n            <th class=\"has-text-centered\">{{formula.left.variable}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let assignment of formula.getAssignments()\">\n            <td class=\"has-text-centered\" *ngFor=\"let variable of formula.getVariables()\">\n              {{displayAssignmentValue(assignment, variable)}}\n            </td>\n            <td class=\"has-text-centered\">{{formula.getValueFor(assignment) ? '1' : '0'}}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <button class=\"button is-link is-fullwidth\" (click)=\"updateCreatedFormula()\">Formel aktualisieren</button>\n\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnChanges, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {getDefaultEditorOptions} from '../../collection-tool-helpers';\nimport {ExerciseFileFragment} from '../../../../_services/apollo_services';\n\ninterface ActivatableExerciseFile {\n  file: ExerciseFileFragment;\n  active: boolean;\n}\n\n@Component({\n  selector: 'it4all-exercise-files-editor',\n  templateUrl: './exercise-files-editor.component.html',\n  styleUrls: ['./exercise-files-editor.component.sass'],\n  encapsulation: ViewEncapsulation.None // Style child component with same sass\n})\nexport class ExerciseFilesEditorComponent implements OnChanges {\n\n  @Input() exerciseFileFragments: ExerciseFileFragment[];\n  @Input() mode: string;\n\n  activatableExerciseFiles: ActivatableExerciseFile[];\n\n  currentFileName: string | undefined = undefined;\n\n  editorOptions = getDefaultEditorOptions('');\n\n  private theContent = '';\n\n  get content(): string {\n    return this.theContent;\n  }\n\n  /**\n   * called only from CodeMirror editor\n   */\n  set content(newContent: string) {\n    this.theContent = newContent;\n    this.saveEditorContent();\n  }\n\n  private saveEditorContent(): void {\n    if (this.currentFileName) {\n      this.activatableExerciseFiles.find((f) => f.file.name === this.currentFileName).file.content = this.content;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.activatableExerciseFiles = this.exerciseFileFragments.map((file) => {\n      // Delete __typename field that was added by apollo\n      delete file.__typename;\n      return {file, active: false};\n    });\n\n    this.updateFirstFile();\n  }\n\n  private updateFirstFile(): void {\n    if (this.activatableExerciseFiles && this.activatableExerciseFiles.length > 0) {\n      // console.log(this.currentFileName);\n\n      if (!this.currentFileName) {\n        const editableExerciseFile: ActivatableExerciseFile | undefined =\n          this.activatableExerciseFiles.find((ef) => ef.file.editable);\n\n        if (editableExerciseFile) {\n          this.updateEditor(editableExerciseFile, false);\n        } else {\n          this.updateEditor(this.activatableExerciseFiles[0], false);\n        }\n      } else {\n        const currentFile = this.activatableExerciseFiles.find((f) => f.file.name === this.currentFileName);\n        this.updateEditor(currentFile, false);\n      }\n    }\n  }\n\n  private updateEditor(exerciseFile: ActivatableExerciseFile, saveContent: boolean = true): void {\n    if (saveContent) {\n      this.saveEditorContent();\n    }\n\n    exerciseFile.active = true;\n\n    this.theContent = exerciseFile.file.content;\n    this.currentFileName = exerciseFile.file.name;\n\n    this.editorOptions.mode = exerciseFile.file.fileType;\n    this.editorOptions.readOnly = !exerciseFile.file.editable;\n  }\n\n  changeFile($event: MouseEvent): void {\n    const fileName: string = ($event.target as HTMLElement).textContent;\n\n    // disable other files...\n    this.activatableExerciseFiles.forEach((ef) => {\n      ef.active = false;\n    });\n\n    const exerciseFile = this.activatableExerciseFiles.find((ef) => ef.file.name === fileName);\n\n    if (exerciseFile) {\n      this.updateEditor(exerciseFile);\n    }\n  }\n\n}\n","<div class=\"tabs is-centered\">\n  <ul>\n    <li *ngFor=\"let file of activatableExerciseFiles\" (click)=\"changeFile($event)\" [class.is-active]=\"file.active\">\n      <a [class.has-text-grey-light]=\"!file.file.editable\"\n         [title]=\"file.file.editable ? '' : 'Nicht editierbar'\">{{file.file.name}}</a>\n    </li>\n  </ul>\n</div>\n<ngx-codemirror [options]=\"editorOptions\" [(ngModel)]=\"content\"></ngx-codemirror>\n","import {Component, Input} from '@angular/core';\nimport {ImplementationCorrectionResult} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-programming-normal-result',\n  template: `\n    <div class=\"notification\" [ngClass]=\"normalResult.successful ? 'is-success': 'is-danger'\">\n      <pre>{{stderr}}</pre>\n    </div>\n  `\n})\nexport class ProgrammingImplementationCorrectionResultComponent {\n\n  @Input() normalResult: ImplementationCorrectionResult;\n\n  get stderr(): string {\n    return this.normalResult.stderr.join('\\n');\n  }\n\n}\n","import {APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLink} from 'apollo-angular/http';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache, NormalizedCacheObject} from '@apollo/client/core';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {setContext} from \"@apollo/client/link/context\";\nimport {getCurrentUser} from \"./_services/authentication.service\";\nimport {LoggedInUserWithTokenFragment} from \"./_services/apollo_services\";\n\nfunction createApollo(httpLink: HttpLink): ApolloClientOptions<NormalizedCacheObject> {\n\n  const auth = setContext(() => {\n    const loggedInUser: LoggedInUserWithTokenFragment | null = getCurrentUser();\n\n    if (loggedInUser === null) {\n      return {};\n    } else {\n      return {\n        headers: {\n          Authorization: loggedInUser.jwt\n        }\n      }\n    }\n  });\n\n  return {\n    link: ApolloLink.from([auth, httpLink.create({uri: '/api/graphql'})]),\n    cache: new InMemoryCache(),\n    defaultOptions: {\n      watchQuery: {fetchPolicy: 'no-cache'},\n      query: {fetchPolicy: 'no-cache'},\n      mutate: {fetchPolicy: 'no-cache'}\n    }\n  };\n}\n\n@NgModule({\n  imports: [BrowserModule, HttpClientModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'it4all-tab',\n  template: `\n      <div [hidden]=\"!active\">\n          <ng-content></ng-content>\n      </div>`,\n})\nexport class TabComponent {\n\n  @Input() title: string;\n  @Input() active = false;\n  @Input() selectable = true;\n\n}\n","import {Injectable} from '@angular/core';\nimport Dexie from 'dexie';\nimport {DbSolution} from '../_interfaces/exercise';\nimport {ExerciseSolveFieldsFragment} from './apollo_services';\n\n@Injectable({providedIn: 'root'})\nexport class DexieService extends Dexie {\n\n  private solutions: Dexie.Table<DbSolution<any>, [string, number, number, string]>;\n\n  constructor() {\n    super('it4all-client');\n\n    this.version(1).stores({\n      solutions: '[toolId+collId+exId+partId]',\n    });\n\n    this.solutions = this.table('solutions');\n  }\n\n  getSolution<T>(exerciseFragment: ExerciseSolveFieldsFragment, partId: string): Dexie.Promise<DbSolution<T> | undefined> {\n    return this.solutions.get([exerciseFragment.toolId, exerciseFragment.collectionId, exerciseFragment.exerciseId, partId]);\n  }\n\n  upsertSolution<T>(\n    exerciseFragment: ExerciseSolveFieldsFragment,\n    partId: string,\n    solution: T\n  ): Dexie.Promise<[string, number, number, string]> {\n    return this.solutions.put({\n      exId: exerciseFragment.exerciseId,\n      collId: exerciseFragment.collectionId,\n      toolId: exerciseFragment.toolId,\n      partId,\n      solution\n    });\n  }\n\n}\n","import {RandomOverviewComponent} from './random-overview/random-overview.component';\nimport {AuthGuard} from '../../_helpers/auth-guard';\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BoolExerciseComponent} from \"./bool/bool-exercise/bool-exercise.component\";\nimport {NaryExerciseComponent} from \"./nary/nary-exercise/nary-exercise.component\";\n\nconst randomToolRoutes: Routes = [\n  {\n    path: 'randomTools', canActivate: [AuthGuard], children: [\n      {path: ':toolId', component: RandomOverviewComponent},\n      {path: 'bool/:part', component: BoolExerciseComponent},\n      {path: 'nary/:part', component: NaryExerciseComponent},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(randomToolRoutes)],\n  exports: [RouterModule]\n})\nexport class RandomToolsRoutingModule {\n}\n\n\nexport const randomToolRoutingComponents = [\n  RandomOverviewComponent,\n  BoolExerciseComponent,\n  NaryExerciseComponent,\n];\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n  selector: 'it4all-random-solve-buttons',\n  template: `\n    <div class=\"columns\">\n      <div class=\"column is-one-third-desktop\">\n        <button class=\"button is-link is-fullwidth\" (click)=\"correctEmitter.emit()\">Lösung testen</button>\n      </div>\n      <div class=\"column is-one-third-desktop\">\n        <button class=\"button is-primary is-fullwidth\" (click)=\"nextEmitter.emit()\">Nächste Aufgabe</button>\n      </div>\n      <div class=\"column is-one-third-desktop\">\n        <a class=\"button is-dark is-fullwidth\" routerLink=\"..\">Bearbeiten beenden</a>\n      </div>\n    </div>\n  `\n})\nexport class RandomSolveButtonsComponent {\n\n  @Output() correctEmitter: EventEmitter<void> = new EventEmitter<void>();\n  @Output() nextEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {BINARY_SYSTEM, NaryComponentBase, NaryReadOnlyNumberInput, NUMBERING_SYSTEMS, NumberingSystem} from '../nary';\nimport {randomInt} from '../../../../helpers';\n\n@Component({\n  selector: 'it4all-nary-addition',\n  templateUrl: './nary-addition.component.html',\n  styles: [`\n    #solution {\n      direction: rtl;\n      unicode-bidi: bidi-override\n    }`\n  ]\n})\nexport class NaryAdditionComponent extends NaryComponentBase implements OnInit {\n\n  // noinspection JSMismatchedCollectionQueryUpdate\n  numberingSystems: NumberingSystem[] = NUMBERING_SYSTEMS;\n\n  system: NumberingSystem = BINARY_SYSTEM;\n\n  target = 0;\n\n  firstSummandInput: NaryReadOnlyNumberInput = {\n    decimalNumber: 0,\n    numberingSystem: this.system,\n    fieldId: 'firstSummand',\n    labelContent: 'Summand 1:',\n    maxValueForDigits: this.max\n  };\n\n  secondSummandInput: NaryReadOnlyNumberInput = {\n    decimalNumber: 0,\n    numberingSystem: this.system,\n    fieldId: 'secondSummand',\n    labelContent: 'Summand 2:',\n    maxValueForDigits: this.max\n  };\n\n  checked = false;\n  correct = false;\n  solutionString = '';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.checked = false;\n    this.correct = false;\n    this.solutionString = '';\n\n    this.target = randomInt(1, this.max);\n\n    const firstSummand = randomInt(1, this.target);\n\n    this.firstSummandInput.decimalNumber = firstSummand;\n    this.firstSummandInput.numberingSystem = this.system;\n    this.firstSummandInput.maxValueForDigits = this.max;\n\n    this.secondSummandInput.decimalNumber = this.target - firstSummand;\n    this.secondSummandInput.numberingSystem = this.system;\n    this.secondSummandInput.maxValueForDigits = this.max;\n  }\n\n  checkSolution(): void {\n    const reversedSolutionString: string = this.solutionString\n      .replace(/\\s/g, '')\n      .split('').reverse().join('');\n\n    const solution: number = parseInt(reversedSolutionString, this.system.radix);\n\n    this.checked = true;\n\n    this.correct = solution === this.target;\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      if (this.correct) {\n        this.update();\n      } else {\n        this.checkSolution();\n      }\n    }\n  }\n\n}\n","<div class=\"container\">\n\n  <div class=\"columns\">\n    <div class=\"column\">\n      <label class=\"label has-text-centered\" for=\"max\">Maximalwert</label>\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <button class=\"button\" (click)=\"doubleMax()\" [disabled]=\"max === maximalMax\">* 2</button>\n        </div>\n        <div class=\"control is-expanded\">\n          <input class=\"input has-text-centered\" type=\"number\" id=\"max\" value=\"{{max}}\">\n        </div>\n        <div class=\"control\">\n          <button class=\"button\" (click)=\"halveMax()\" [disabled]=\"max === minimalMax\">/ 2</button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"column\">\n      <div class=\"field\">\n        <label for=\"numberSystem\" class=\"label has-text-centered\">Zahlensystem</label>\n        <div class=\"control\">\n          <div class=\"select is-fullwidth\">\n            <select [(ngModel)]=\"system\" (change)=\"update()\" id=\"numberSystem\">\n              <option *ngFor=\"let ns of numberingSystems\" [ngValue]=\"ns\">{{ns.radix}} - {{ns.name}}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <hr/>\n\n  <div class=\"my-3\">\n    <it4all-nary-number-read-only-input [naryNumberInput]=\"firstSummandInput\"></it4all-nary-number-read-only-input>\n  </div>\n\n  <div class=\"my-3\">\n    <it4all-nary-number-read-only-input [naryNumberInput]=\"secondSummandInput\"></it4all-nary-number-read-only-input>\n  </div>\n\n  <hr/>\n\n  <div class=\"field\">\n    <div class=\"field has-addons\">\n      <div class=\"control\">\n        <div class=\"button is-static\">\n          <label for=\"solution\">Lösung:</label>\n        </div>\n      </div>\n      <div class=\"control is-expanded\">\n        <input type=\"text\" class=\"input\" id=\"solution\" [(ngModel)]=\"solutionString\"\n               [ngClass]=\"{'is-success': checked && correct, 'is-danger': checked && !correct}\"\n               placeholder=\"Lösung\" autofocus autocomplete=\"off\">\n      </div>\n      <div class=\"control\">\n        <div class=\"button is-static\">\n          <sub>{{system.radix}}</sub>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"notification has-text-centered is-danger\" *ngIf=\"checked && !correct\">\n    &#10008; Die Lösung ist nicht korrekt.\n  </div>\n  <div class=\"notification has-text-centered is-success\" *ngIf=\"checked && correct\">\n    &#10004; Die Lösung ist korrekt.\n  </div>\n\n  <br>\n\n  <it4all-random-solve-buttons (correctEmitter)=\"checkSolution()\" (nextEmitter)=\"update()\">\n  </it4all-random-solve-buttons>\n\n</div>\n","import {Component, Input} from '@angular/core';\nimport {MatchType, RegexExtractionMatchFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-regex-extraction-match',\n  template: `\n    <div class=\"notification\" [ngClass]=\"isCorrect() ? 'is-success' : 'is-danger'\">\n      <span *ngIf=\"isCorrect()\">{{isCorrect() ? '&#10004;' : '&#10008;'}}</span>\n      <span *ngIf=\"match.sampleArg\">Erwartet: <code>{{match.sampleArg}}</code></span>,\n      <span *ngIf=\"match.userArg\">Bekommen: <code>{{match.userArg}}</code></span>\n    </div>\n  `\n})\nexport class RegexExtractionMatchComponent {\n\n  @Input() match: RegexExtractionMatchFragment;\n\n  isCorrect(): boolean {\n    return this.match.matchType === MatchType.SuccessfulMatch;\n  }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonOverviewFragment, LessonOverviewGQL, LessonOverviewQuery} from '../../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'it4all-lesson-overview',\n  template: `\n    <div class=\"container\">\n\n      <ng-container *ngIf=\"lessonOverviewQuery; else loadingDataBlock\">\n\n        <h1 class=\"title is-2 has-text-centered\">{{lessonOverviewFragment.title}}</h1>\n\n        <div class=\"content box\">{{lessonOverviewFragment.description}}</div>\n\n        <div class=\"columns\">\n          <div class=\"column\">\n            <a class=\"button is-fullwidth\" *ngIf=\"lessonOverviewFragment.video\" routerLink=\"video\">Als Video</a>\n          </div>\n          <div class=\"column\">\n            <a class=\"button is-fullwidth\" *ngIf=\"lessonOverviewFragment.contentCount > 0\" routerLink=\"text\">Als\n              Text</a>\n          </div>\n        </div>\n\n      </ng-container>\n\n    </div>\n\n    <ng-template #loadingDataBlock>\n      <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n    </ng-template>\n  `,\n})\nexport class LessonOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  lessonOverviewQuery: LessonOverviewQuery;\n\n  constructor(private route: ActivatedRoute, private lessonOverviewGQL: LessonOverviewGQL) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n      const lessonId = parseInt(paramMap.get('lessonId'), 10);\n\n      this.lessonOverviewGQL\n        .watch({toolId, lessonId})\n        .valueChanges\n        .subscribe(({data}) => this.lessonOverviewQuery = data);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  get lessonOverviewFragment(): LessonOverviewFragment | null {\n    return this.lessonOverviewQuery ? this.lessonOverviewQuery.me.tool.lesson : undefined;\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({selector: 'it4all-regex-cheatsheet', templateUrl: './regex-cheatsheet.component.html'})\nexport class RegexCheatsheetComponent {\n\n  constructor() {\n  }\n\n}\n","<table class=\"table is-bordered is-fullwidth\">\n  <thead>\n    <tr>\n      <th>Symbol</th>\n      <th>Bedeutung</th>\n      <th>Symbol</th>\n      <th>Bedeutung</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>\\d</code></td>\n      <td>Eine Ziffer zwischen 0 und 9</td>\n      <td><code>\\D</code></td>\n      <td>Zeichen, das keine Ziffer ist</td>\n    <tr>\n      <td><code>\\s</code></td>\n      <td>Leerzeichen, Tabulator, ...</td>\n      <td><code>\\w</code></td>\n      <td>Buchstabe, Ziffer oder Unterstrich</td>\n    </tr>\n    <tr>\n      <td><code>.</code></td>\n      <td>Ein beliebiges Zeichen</td>\n      <td><code>\\.</code></td>\n      <td>Ein Punkt</td>\n    </tr>\n    <tr>\n      <td><code>+</code></td>\n      <td>Ein oder mehr Vorkommen</td>\n      <td><code>&#123;x&#125;</code></td>\n      <td>Genau x Vorkommen</td>\n    </tr>\n    <tr>\n      <td><code>&#123;x,y&#125;</code></td>\n      <td>x bis y Vorkommen</td>\n      <td><code>&#123;x,&#125;</code></td>\n      <td>x bis unendlich viele Vorkommen</td>\n    </tr>\n    <tr>\n      <td><code>*</code></td>\n      <td>Beliebig viele (auch 0) Vorkommen</td>\n      <td><code>?</code></td>\n      <td>Ein oder kein Vorkommen</td>\n    </tr>\n    <tr>\n      <td><code>x | y</code></td>\n      <td>x oder y</td>\n      <td><code>[x-y]</code></td>\n      <td>Ein Zeichen im Bereich zwischen x und y</td>\n    </tr>\n  </tbody>\n</table>\n","export function randomInt(minInclusive: number, maxExclusive: number): number {\n  const intMax = Math.floor(maxExclusive);\n  const intMin = Math.floor(minInclusive);\n  return Math.floor(Math.random() * (intMax - intMin)) + intMin;\n}\n\nexport function takeRandom<T>(from: T[]): T {\n  return from[Math.floor(Math.random() * from.length)];\n}\n\nexport function flatMapArray<T, U>(ts: T[], f: (t: T) => U[]): U[] {\n  return ts.reduce((acc, t) => acc.concat(f(t)), []);\n}\n\nexport function distinctStringArray(ts: string[]): string[] {\n  return [...new Set(ts)];\n}\n\nexport function distinctObjectArray<T, K>(ts: T[], key: (t: T) => K): T[] {\n  const helperMap: Map<K, T> = new Map<K, T>();\n\n  for (const t of ts) {\n    const tKey = key(t);\n    if (!helperMap.has(tKey)) {\n      helperMap.set(tKey, t);\n    }\n  }\n\n  return Array.from(helperMap.values());\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {first} from 'rxjs/operators';\n\n@Component({templateUrl: './login-form.component.html'})\nexport class LoginFormComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  inValid = false;\n  returnUrl: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n\n    if (this.authenticationService.currentUserValue) {\n      // noinspection JSIgnoredPromiseFromCall\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    const username = this.f.username.value;\n    const password = this.f.password.value;\n\n    if (this.loginForm.invalid) {\n      alert('Daten sind nicht valide!');\n      return;\n    }\n\n    this.loading = true;\n\n    this.authenticationService.login(username, password)\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          if (data) {\n            // noinspection JSIgnoredPromiseFromCall\n            this.router.navigate([this.returnUrl]);\n          } else {\n            this.inValid = true;\n          }\n        },\n        () => this.loading = false\n      );\n  }\n\n}\n","<div class=\"container\">\n\n  <h1 class=\"title is-3 has-text-centered\" i18n>Login</h1>\n\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"field\">\n      <label for=\"username\" class=\"label\"><span i18n>Nutzername</span>:</label>\n      <div class=\"control\">\n        <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"input\"\n               placeholder=\"Nutzername\" i18n-placeholder autofocus>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label for=\"password\" class=\"label\"><span i18n>Passwort</span>:</label>\n      <div class=\"control\">\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Passwort\" i18n-placeholder id=\"password\"\n               class=\"input\">\n      </div>\n    </div>\n\n    <div class=\"notification is-danger\" *ngIf=\"submitted && inValid\">\n      <span i18n>Kombination aus Nutzername und Password ist nicht valide</span>!\n    </div>\n\n    <br>\n\n    <div class=\"field\">\n      <div class=\"control\">\n        <button class=\"button is-link\" i18n>Login</button>\n      </div>\n    </div>\n\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as $ from 'jquery';\nimport * as joint from 'jointjs';\nimport * as _ from 'underscore';\n\nimport './boolDrawingElements';\nimport {BooleanFormula} from '../../_model/bool-formula';\nimport {BooleanVariable} from '../../_model/bool-node';\nimport Cell = joint.dia.Cell;\nimport CellView = joint.dia.CellView;\nimport Element = joint.dia.Element;\nimport Graph = joint.dia.Graph;\nimport Link = joint.dia.Link;\nimport LinkView = joint.dia.LinkView;\n\nexport const graph: Graph = new Graph();\n\nconst elementWidth = 60;\nconst gridSize = elementWidth / 2;\n\nexport let paper: joint.dia.Paper;\n\nexport let dragX; // Postion within div : X\nexport let dragY;\t// Postion within div : Y\n\nexport const SIGNALS: Map<string, boolean> = new Map([\n  ['a', true],\n  ['b', true],\n  ['c', true],\n  ['d', true]\n]);\n\nexport function createElementInGraph(elementName: string, x: number, y: number): void {\n  let element: joint.shapes.logic.Gate;\n  let svg: string;\n  const elementPos = {position: {x, y}};\n\n  switch (elementName) {\n    case 'elementAND':\n      element = new joint.shapes.logic.And(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/0/0f/AND_IEC.svg';\n      break;\n    case 'elementNAND':\n      element = new joint.shapes.logic.Nand(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/d/d8/NAND_IEC.svg';\n      break;\n    case 'elementOR':\n      element = new joint.shapes.logic.Or(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/4/42/OR_IEC.svg';\n      break;\n    case 'elementNOR':\n      element = new joint.shapes.logic.Nor(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/6/6d/NOR_IEC.svg';\n      break;\n    case 'elementXOR':\n      element = new joint.shapes.logic.Xor(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/4/4e/XOR_IEC.svg';\n      break;\n    case 'elementXNOR':\n      element = new joint.shapes.logic.Xnor(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/5/56/XNOR_IEC.svg';\n      break;\n    case 'elementNOT':\n      element = new joint.shapes.logic.Not(elementPos);\n      svg = 'https://upload.wikimedia.org/wikipedia/commons/e/ef/NOT_IEC.svg';\n      break;\n  }\n\n  element.attr('image/xlink:href', svg);\n\n  graph.addCell(element);\n}\n\ndocument.addEventListener('dragover', (e: DragEvent) => {\n  const offset = $('#paper').offset();\n  // console.warn(offset);\n  dragX = e.pageX - offset.left;\n  dragY = e.pageY - offset.top;\n}, false);\n\nfunction initGraph(inputsToAdd, outputsToAdd): void {\n  for (const inputToAdd of inputsToAdd) {\n    const newGate = new joint.shapes.logic.Input(inputToAdd);\n\n    newGate.attr('logicSymbol', inputToAdd.symbol);\n    newGate.attr('text', {text: inputToAdd.symbol});\n\n    graph.addCell(newGate);\n  }\n\n\n  for (const outputToAdd of outputsToAdd) {\n    const newGate = new joint.shapes.logic.Output(outputToAdd);\n\n    newGate.attr('logicSymbol', outputToAdd.symbol);\n    newGate.attr('text', {text: outputToAdd.symbol});\n\n    graph.addCell(newGate);\n  }\n\n}\n\nexport function toggleLive(model: Cell, signal: boolean): void {\n  // add 'live' class to the element if there is a positive signal\n  // FIXME: cast should not work?\n  const x = (paper.findViewByModel(model).el as unknown) as SVGElement;\n  joint.V(x).toggleClass('live', signal);\n}\n\nexport function broadcastSignal(gate: joint.shapes.logic.Gate, signal: boolean): void {\n  toggleLive(gate, signal);\n\n  // broadcast signal to all output ports\n  const outGoingWires = graph.getConnectedLinks(gate, {outbound: true}) as joint.shapes.logic.Wire[];\n  for (const wire of outGoingWires) {\n    wire.set('signal', signal);\n  }\n}\n\nfunction initializeSignals(): void {\n  // cancel all signals stores in wires\n  for (const wire of graph.getLinks()) {\n    wire.set('signal', false);\n  }\n\n  // remove all 'live' classes\n  $('.live').each(() => {\n    // TODO:        joint.V(this).removeClass('live');\n  });\n\n  for (const element of graph.getElements()) {\n    const outGoingLinks: Link[] = graph.getConnectedLinks(element, {outbound: true});\n    if (element instanceof joint.shapes.logic.Input && outGoingLinks.length > 0) {\n      broadcastSignal(element, SIGNALS[element.attr('logicSymbol')]);\n    }\n  }\n}\n\nfunction initGraphEvents(): void {\n\n  graph.on('change:source change:target', (model, end) => {\n\n    const e: string = 'target' in model.changed ? 'target' : 'source';\n\n    if ((model.previous(e).id && !model.get(e).id) || (!model.previous(e).id && model.get(e).id)) {\n      // if source/target has been connected to a port or disconnected from a port reinitialize signals\n      initializeSignals();\n    }\n  });\n\n  graph.on('change:signal', (wire: joint.shapes.logic.Wire, signal: boolean) => {\n\n    toggleLive(wire, signal);\n\n    const gate: joint.shapes.logic.Gate = graph.getCell(wire.get('target').id) as joint.shapes.logic.Gate;\n\n    if (gate && false) {\n      // FIXME: implement!\n      if (gate instanceof joint.shapes.logic.Gate11) {\n        gate.onSignal(signal, () => {\n          const maybeInput = graph.getConnectedLinks(gate, {inbound: true});\n          const input: boolean = (maybeInput.length === 1) ? maybeInput[0].get('signal') : false;\n\n          // calculate the output signal\n          throw Error('TODO');\n          // const output: boolean = gate.operation(input);\n          // broadcastSignal(gate, output);\n        });\n      } else if (gate instanceof joint.shapes.logic.Gate21) {\n        const maybeInput = graph.getConnectedLinks(gate, {inbound: true});\n\n        const input1: boolean = (maybeInput.length >= 1) ? maybeInput[0].get('signal') : false;\n        const input2: boolean = (maybeInput.length === 2) ? maybeInput[1].get('signal') : false;\n\n        // calculate the output signal\n        throw Error('TODO');\n        // const output: boolean = gate.operation(input1, input2);\n        // broadcastSignal(gate, output);\n      } else {\n        // TODO!\n      }\n    }\n  });\n\n  graph.on('change:position', (cell, newPosition, opt) => {\n\n    if (opt.skipParentHandler) {\n      return;\n    }\n\n    if (cell.get('embeds') && cell.get('embeds').length) {\n      // If we're manipulating a parent element, let's store it's original position to a special property so that\n      // we can shrink the parent element back while manipulating its children.\n      cell.set('originalPosition', cell.get('position'));\n    }\n\n    const parentId = cell.get('parent');\n    if (!parentId) {\n      return;\n    }\n\n    const parent = graph.getCell(parentId);\n    if (!parent.get('originalPosition')) {\n      parent.set('originalPosition', parent.get('position'));\n    }\n    if (!parent.get('originalSize')) {\n      parent.set('originalSize', parent.get('size'));\n    }\n\n    const originalPosition = parent.get('originalPosition');\n    const originalSize = parent.get('originalSize');\n\n    let newX = originalPosition.x;\n    let newY = originalPosition.y;\n    let newCornerX = originalPosition.x + originalSize.width;\n    let newCornerY = originalPosition.y + originalSize.height;\n\n    _.each(parent.getEmbeddedCells(), (child: Element) => {\n\n      const childBbox: joint.g.Rect = child.getBBox();\n\n      if (childBbox.x < newX) {\n        newX = childBbox.x;\n      }\n      if (childBbox.y < newY) {\n        newY = childBbox.y;\n      }\n      if (childBbox.corner().x > newCornerX) {\n        newCornerX = childBbox.corner().x;\n      }\n      if (childBbox.corner().y > newCornerY) {\n        newCornerY = childBbox.corner().y;\n      }\n    });\n\n    // Note that we also pass a flag so that we know we shouldn't adjust the `originalPosition` and `originalSize` in our handlers as a\n    // reaction on the following `set()` call.\n    parent.set({\n      position: {x: newX, y: newY},\n      size: {width: newCornerX - newX, height: newCornerY - newY}\n    }/*, {skipParentHandler: true}*/);\n  });\n\n  graph.on('change:size', (cell, newPosition, opt) => {\n    if (opt.skipParentHandler) {\n      return;\n    }\n\n    if (cell.get('embeds') && cell.get('embeds').length) {\n      // If we're manipulating a parent element, let's store it's original size to a special property so that\n      // we can shrink the parent element back while manipulating its children.\n      cell.set('originalSize', cell.get('size'));\n    }\n  });\n}\n\nexport function draw(formula: BooleanFormula): void {\n  const paperSelector: JQuery<HTMLElement> = $('#paper');\n\n  paper = new joint.dia.Paper({\n    el: paperSelector,\n    model: graph,\n\n    width: paperSelector.width(), height: 600,\n\n    gridSize, drawGrid: {color: 'grey', thickness: 1, name: 'mesh'},\n\n    snapLinks: true, linkPinning: false,\n    defaultLink: (cellView: CellView, magnet: SVGElement) => new joint.shapes.logic.Wire(cellView, magnet),\n\n    validateConnection(\n      cellViewSource: CellView, magnetSource: SVGElement,\n      cellViewTarget: CellView, magnetTarget: SVGElement,\n      end: string, linkView: LinkView\n    ) {\n      if (end === 'target') {\n        //        target requires an input port to connect\n        if (!magnetTarget || !magnetTarget.getAttribute('class') || magnetTarget.getAttribute('class').indexOf('input') < 0) {\n          return false;\n        }\n\n        //  check whether the port is being already used\n        const portUsed = _.find(this.model.getLinks(), (link: joint.dia.Link) => {\n\n          return (link.id !== linkView.model.id &&\n            link.get('target').id === cellViewTarget.model.id &&\n            link.get('target').port === magnetTarget.getAttribute('port'));\n        });\n\n        return !portUsed;\n\n      } else { // e === 'source'\n        //     source requires an output port to connect\n        return magnetSource && magnetSource.getAttribute('class') && magnetSource.getAttribute('class').indexOf('output') >= 0;\n      }\n    }\n  });\n\n\n  // Graph events\n  initGraphEvents();\n\n  const outputVariables: string[] = ['z'];\n\n  const inputsToAdd = formula.getVariables().map((variable: BooleanVariable, index: number) => {\n    return {symbol: variable.variable, position: {x: gridSize, y: gridSize + index * (2 * elementWidth + gridSize)}};\n  });\n\n  const xMaxPos: number = paper.getArea().width - 60 - gridSize;\n  // const yPos: number = paper.getArea().height;\n\n  const outputsToAdd = outputVariables.map((variable: string, index: number) => {\n    // TODO: calculate if more than one input!\n    return {symbol: variable, position: {x: xMaxPos, y: 3 * elementWidth}};\n  });\n\n  initGraph(inputsToAdd, outputsToAdd);\n}\n","import {NgModule} from '@angular/core';\nimport {CollectionToolOverviewComponent} from './collection-tool-overview/collection-tool-overview.component';\nimport {AuthGuard} from '../../_helpers/auth-guard';\nimport {CollectionOverviewComponent} from './collection-overview/collection-overview.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ExerciseOverviewComponent} from './exercise-overview/exercise-overview.component';\nimport {ExerciseComponent} from './exercise/exercise.component';\nimport {AllExercisesOverviewComponent} from './all-exercises-overview/all-exercises-overview.component';\nimport {CollectionsListComponent} from './collections-list/collections-list.component';\nimport {LessonsForToolOverviewComponent} from './lessons/lessons-for-tool-overview/lessons-for-tool-overview.component';\nimport {LessonAsTextComponent} from './lessons/lesson-as-text/lesson-as-text.component';\nimport {LessonAsVideoComponent} from './lessons/lesson-as-video/lesson-as-video.component';\nimport {LessonOverviewComponent} from './lessons/lesson-overview/lesson-overview.component';\n\nconst collectionToolRoutes: Routes = [\n  {\n    path: 'tools/:toolId', canActivate: [AuthGuard], children: [\n      {path: '', component: CollectionToolOverviewComponent},\n      {\n        path: 'lessons', children: [\n          {path: '', component: LessonsForToolOverviewComponent},\n          {\n            path: ':lessonId', children: [\n              {path: '', component: LessonOverviewComponent},\n              {path: 'text', component: LessonAsTextComponent},\n              {path: 'video', component: LessonAsVideoComponent}\n            ]\n          }\n        ]\n      },\n      {\n        path: 'collections', children: [\n          {path: '', component: CollectionsListComponent},\n          {\n            path: ':collId', children: [\n              {path: '', component: CollectionOverviewComponent},\n              {path: 'exercises/:exId', component: ExerciseOverviewComponent},\n              {path: 'exercises/:exId/parts/:partId', component: ExerciseComponent},\n            ]\n          },\n        ]\n      },\n      {path: 'allExercises', component: AllExercisesOverviewComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(collectionToolRoutes)],\n  exports: [RouterModule]\n})\nexport class CollectionToolRoutingModule {\n}\n\nexport const collectionToolRoutingComponents = [\n  CollectionToolOverviewComponent,\n  // Lesssons\n  LessonsForToolOverviewComponent,\n  LessonOverviewComponent,\n  LessonAsTextComponent,\n  LessonAsVideoComponent,\n  // Collections\n  CollectionsListComponent,\n  CollectionOverviewComponent,\n  // Exercises\n  ExerciseOverviewComponent,\n  ExerciseComponent,\n  // AllExercises\n  AllExercisesOverviewComponent,\n];\n","import {Component, HostListener, Input, OnInit} from '@angular/core';\nimport {DexieService} from '../../../../_services/dexie.service';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {\n  ExerciseSolveFieldsFragment,\n  RegexAbstractResultFragment,\n  RegexCorrectionGQL,\n  RegexCorrectionMutation,\n  RegexCorrectionMutationVariables,\n  RegexCorrectionResultFragment,\n  RegexExerciseContentFragment,\n  RegexExPart,\n  RegexExtractionResultFragment,\n  RegexMatchingResultFragment\n} from '../../../../_services/apollo_services';\nimport {HasSampleSolutions} from \"../../_helpers/correction-helpers\";\n\n\nfunction getIdForRegexExercisePart(regexExPart: RegexExPart): string {\n  switch (regexExPart) {\n    case RegexExPart.RegexSingleExPart:\n      return 'regex';\n  }\n}\n\n@Component({\n  selector: 'it4all-regex-exercise',\n  templateUrl: './regex-exercise.component.html'\n})\nexport class RegexExerciseComponent\n  extends ComponentWithExerciseDirective<string, RegexCorrectionMutation, RegexCorrectionMutationVariables>\n  implements OnInit, HasSampleSolutions<string> {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: RegexExerciseContentFragment;\n\n  solution = '';\n\n  showInfo = false;\n\n  readonly partId: string = getIdForRegexExercisePart(RegexExPart.RegexSingleExPart);\n\n  constructor(regexCorrectionGQL: RegexCorrectionGQL, dexieService: DexieService) {\n    super(regexCorrectionGQL, dexieService);\n  }\n\n  ngOnInit(): void {\n    this.loadOldSolutionAbstract(this.exerciseFragment, this.partId, (oldSol) => this.solution = oldSol);\n  }\n\n  // Sample solutions\n\n  displaySampleSolutions = false;\n\n  toggleSampleSolutions() {\n    this.displaySampleSolutions = !this.displaySampleSolutions;\n  }\n\n  get sampleSolutions(): string[] {\n    return this.contentFragment.regexSampleSolutions;\n  }\n\n  // Correction\n\n  protected getSolution(): string {\n    return this.solution;\n  }\n\n  protected getMutationQueryVariables(): RegexCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: RegexExPart.RegexSingleExPart,\n    };\n  }\n\n  correct(): void {\n    if (this.solution === undefined || this.solution.length === 0) {\n      alert('Sie können keine leere Lösung abgeben!');\n      return;\n    }\n\n    this.correctAbstract(this.exerciseFragment, this.partId);\n  }\n\n  // Results\n\n  get correctionResult(): RegexCorrectionResultFragment | null {\n    return this.resultQuery?.me.regexExercise?.correct;\n  }\n\n  get abstractResult(): RegexAbstractResultFragment & (RegexMatchingResultFragment | RegexExtractionResultFragment) | null {\n    return this.correctionResult?.result;\n  }\n\n  get regexMatchingResult(): RegexMatchingResultFragment | null {\n    return this.abstractResult?.__typename === 'RegexMatchingResult' ? this.abstractResult : null;\n  }\n\n  get regexExtractionResult(): RegexExtractionResultFragment | undefined {\n    return this.abstractResult?.__typename === 'RegexExtractionResult' ? this.abstractResult : undefined;\n  }\n\n  // Other\n\n  // FIXME: make directive?\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      // if (this.correct) {\n      // this.update();\n      // } else {\n      this.correct();\n      // }\n    }\n  }\n\n}\n","<div class=\"container is-fluid\">\n\n  <div class=\"columns\">\n    <div class=\"column is-two-fifths-desktop\">\n      <h1 class=\"title is-3 has-text-centered\">Aufgabenstellung</h1>\n      <div class=\"notification is-light-grey\">{{exerciseFragment.text}}</div>\n\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <label class=\"button is-static\" for=\"solution\">Ihre Lösung:</label>\n        </div>\n        <div class=\"control is-expanded\">\n          <input type=\"text\" class=\"input\" id=\"solution\" [(ngModel)]=\"solution\" placeholder=\"Ihre Lösung\" autofocus\n                 autocomplete=\"off\">\n        </div>\n      </div>\n\n      <div class=\"columns\">\n        <div class=\"column\">\n          <button class=\"button is-link is-fullwidth\" (click)=\"correct()\">Lösung testen</button>\n        </div>\n        <div class=\"column\">\n          <a [routerLink]=\"['../..']\" class=\"button is-dark is-fullwidth\">Bearbeiten beenden</a>\n        </div>\n      </div>\n      <div class=\"buttons\">\n        <button (click)=\"showInfo = !showInfo;\" class=\"button is-info is-fullwidth\">\n          Hilfe&nbsp;<span *ngIf=\"!showInfo\">anzeigen</span><span *ngIf=\"showInfo\">ausblenden</span>\n        </button>\n      </div>\n\n      <it4all-regex-cheatsheet *ngIf=\"showInfo\"></it4all-regex-cheatsheet>\n    </div>\n\n    <div class=\"column\">\n      <it4all-tabs>\n        <it4all-tab [title]=\"correctionTabTitle\">\n\n          <div class=\"message is-danger\" *ngIf=\"queryError\">\n            <div class=\"message-header\">Fehler beim Parsen des regulären Ausdrucks:</div>\n            <div class=\"message-body\">\n              <pre>{{queryError.message}}</pre>\n            </div>\n          </div>\n\n\n          <ng-container *ngIf=\"resultQuery\">\n\n            <div class=\"my-3\">\n              <it4all-solution-saved *ngIf=\"correctionResult\" [solutionSaved]=\"correctionResult.solutionSaved\">\n              </it4all-solution-saved>\n            </div>\n\n\n            <div class=\"my-3\">\n              <it4all-points-notification [points]=\"abstractResult.points\" [maxPoints]=\"abstractResult.maxPoints\">\n              </it4all-points-notification>\n            </div>\n\n            <div class=\"columns is-multiline my-3\" *ngIf=\"regexMatchingResult\">\n              <div class=\"column is-half-desktop\" *ngFor=\"let matchingResult of regexMatchingResult.matchingResults\">\n                <it4all-regex-matching-result [matchingResult]=\"matchingResult\"></it4all-regex-matching-result>\n              </div>\n            </div>\n\n            <ng-container *ngIf=\"regexExtractionResult\">\n              <div class=\"my-3\" *ngFor=\"let extractionResult of regexExtractionResult.extractionResults\">\n                <it4all-regex-extraction-result [extractionResult]=\"extractionResult\"></it4all-regex-extraction-result>\n              </div>\n            </ng-container>\n\n          </ng-container>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"sampleSolutionsTabTitle\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary is-fullwidth\" (click)=\"toggleSampleSolutions()\">\n              Musterlösungen {{displaySampleSolutions ? 'ausblenden' : 'anzeigen'}}\n            </button>\n          </div>\n\n          <ng-container *ngIf=\"displaySampleSolutions\">\n            <ng-container *ngFor=\"let sample of sampleSolutions; let last = last\">\n              <it4all-string-sample-sol [sample]=\"sample\"></it4all-string-sample-sol>\n\n              <br *ngIf=\"!last\">\n            </ng-container>\n          </ng-container>\n        </it4all-tab>\n      </it4all-tabs>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {\n  ExerciseFileFragment,\n  ExerciseSolveFieldsFragment,\n  XmlCorrectionGQL,\n  XmlCorrectionMutation,\n  XmlCorrectionMutationVariables,\n  XmlCorrectionResultFragment,\n  XmlDocumentResultFragment,\n  XmlExerciseContentFragment,\n  XmlExPart,\n  XmlGrammarResultFragment,\n  XmlResultFragment,\n  XmlSolution,\n  XmlSolutionInput\n} from '../../../../_services/apollo_services';\nimport {HasSampleSolutions} from \"../../_helpers/correction-helpers\";\nimport {DexieService} from \"../../../../_services/dexie.service\";\n\nimport 'codemirror/mode/dtd/dtd';\nimport 'codemirror/mode/xml/xml';\n\n\nexport function getIdForXmlExPart(xmlExPart: XmlExPart): string {\n  switch (xmlExPart) {\n    case XmlExPart.DocumentCreationXmlPart:\n      return 'document';\n    case XmlExPart.GrammarCreationXmlPart:\n      return 'grammar';\n  }\n}\n\nexport function getXmlGrammarContent(rootNode: string): string {\n  return `<!ELEMENT ${rootNode} (EMPTY)>`;\n}\n\nexport function getXmlDocumentContent(rootNode: string): string {\n  return `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE ${rootNode} SYSTEM \"${rootNode}.dtd\">\n<${rootNode}>\n</${rootNode}>`.trim();\n}\n\n\n@Component({\n  selector: 'it4all-xml-exercise',\n  templateUrl: './xml-exercise.component.html'\n})\nexport class XmlExerciseComponent\n  extends ComponentWithExerciseDirective<XmlSolutionInput, XmlCorrectionMutation, XmlCorrectionMutationVariables>\n  implements OnInit, HasSampleSolutions<XmlSolution> {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: XmlExerciseContentFragment;\n\n  partId: string;\n\n  isGrammarPart: boolean;\n\n  grammarFile: ExerciseFileFragment;\n  documentFile: ExerciseFileFragment;\n\n  exerciseFileFragments: ExerciseFileFragment[] = [];\n\n  constructor(xmlCorrectionGQL: XmlCorrectionGQL, dexieService: DexieService) {\n    super(xmlCorrectionGQL, dexieService);\n  }\n\n  ngOnInit() {\n    const rootNode = this.contentFragment.rootNode;\n\n    this.partId = getIdForXmlExPart(this.contentFragment.xmlPart);\n    this.isGrammarPart = this.partId === 'grammar';\n\n    const grammarFileName = `${rootNode}.dtd`;\n    this.grammarFile = {\n      name: grammarFileName,\n      content: this.isGrammarPart ? getXmlGrammarContent(rootNode) : this.contentFragment.xmlSampleSolutions[0].grammar,\n      fileType: 'dtd',\n      editable: this.isGrammarPart,\n    };\n\n    const documentFileName = `${rootNode}.xml`;\n    this.documentFile = {\n      name: documentFileName,\n      content: getXmlDocumentContent(rootNode),\n      fileType: 'xml',\n      editable: !this.isGrammarPart,\n    };\n\n    this.exerciseFileFragments = [this.grammarFile, this.documentFile];\n\n    this.loadOldSolutionAbstract(this.exerciseFragment, this.partId, (oldSol) => {\n      this.grammarFile.content = oldSol.grammar;\n      this.documentFile.content = oldSol.document;\n\n      // do not delete or else editor does not get updated...\n      this.exerciseFileFragments = [this.grammarFile, this.documentFile];\n    });\n  }\n\n  // Correction\n\n  protected getSolution(): XmlSolutionInput {\n    return {\n      grammar: this.grammarFile.content,\n      document: this.documentFile.content\n    };\n  }\n\n  protected getMutationQueryVariables(): XmlCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: this.contentFragment.xmlPart,\n    };\n  }\n\n  correct(): void {\n    this.correctAbstract(this.exerciseFragment, this.partId);\n  }\n\n  // Results\n\n  get correctionResult(): XmlCorrectionResultFragment | null {\n    return this.resultQuery?.me.xmlExercise?.correct;\n  }\n\n  get xmlResult(): XmlResultFragment | null {\n    return this.correctionResult?.result;\n  }\n\n  get grammarResult(): XmlGrammarResultFragment | null {\n    return this.xmlResult?.grammarResult;\n  }\n\n  get documentResult(): XmlDocumentResultFragment | null {\n    return this.xmlResult?.documentResult;\n  }\n\n  // Sample solutions\n\n  displaySampleSolutions = false;\n\n  toggleSampleSolutions() {\n    this.displaySampleSolutions = !this.displaySampleSolutions;\n  }\n\n  get sampleSolutions(): XmlSolution[] {\n    return this.contentFragment.xmlSampleSolutions;\n  }\n\n}\n","<div class=\"container is-fluid\">\n\n  <div class=\"columns\">\n    <div class=\"column is-half-desktop\">\n      <it4all-exercise-files-editor [exerciseFileFragments]=\"exerciseFileFragments\" [mode]=\"'xml'\">\n      </it4all-exercise-files-editor>\n    </div>\n\n    <div class=\"column is-half-desktop\">\n      <it4all-tabs>\n        <it4all-tab [title]=\"'Aufgabenstellung'\">\n\n          <div class=\"notification is-light-grey\">\n            <ng-container *ngIf=\"isGrammarPart; else documentTextBlock\">\n              <p class=\"has-text-weight-bold\">Erstellen Sie eine DTD zu folgender Beschreibung:</p>\n              <p>{{contentFragment.grammarDescription}}</p>\n              <p class=\"is-italic has-text-info\">\n                Hinweis: Benutzen Sie die in Klammern angegebenen Element- bzw. Attributnamen. Falls nichts anderes\n                angegeben ist, sollen die Elemente nur Text enthalten.\n              </p>\n            </ng-container>\n            <ng-template #documentTextBlock>{{exerciseFragment.text}}</ng-template>\n          </div>\n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <button class=\"button is-link is-fullwidth\" [class.is-loading]=\"isCorrecting\" (click)=\"correct()\">\n                Korrektur\n              </button>\n            </div>\n            <!--\n            FIXME: show sample solution for xml exercise!\n           -->\n            <div class=\"column\">\n              <a [routerLink]=\"['../..']\" class=\"button is-dark is-fullwidth\">Bearbeiten beenden</a>\n            </div>\n          </div>\n        </it4all-tab>\n        <it4all-tab [title]=\"correctionTabTitle\">\n\n          <div class=\"message is-danger\" *ngIf=\"queryError\">\n            <div class=\"message-header\">Es gab einen Fehler bei der Korrektur:</div>\n            <div class=\"message-body\">\n              <pre>{{queryError.message}}</pre>\n            </div>\n          </div>\n\n\n          <ng-container *ngIf=\"resultQuery\">\n            <div class=\"my-3\">\n              <it4all-solution-saved [solutionSaved]=\"correctionResult.solutionSaved\"></it4all-solution-saved>\n            </div>\n\n            <div class=\"my-3\">\n              <it4all-points-notification\n                *ngIf=\"isGrammarPart && xmlResult\"\n                [points]=\"xmlResult.points\"\n                [maxPoints]=\"xmlResult.maxPoints\">\n              </it4all-points-notification>\n            </div>\n\n            <div class=\"my-3\" *ngIf=\"documentResult\">\n              <!-- Document correction! -->\n              <it4all-xml-document-correction [result]=\"documentResult\"></it4all-xml-document-correction>\n            </div>\n            <ng-container *ngIf=\"documentResult && documentResult.errors.length === 0\">\n              <!-- todo: what is missing here? -->\n            </ng-container>\n\n            <div class=\"my-3\" *ngIf=\"grammarResult\">\n              <!-- Grammar correction -->\n\n              <div *ngFor=\"let parseError of grammarResult.parseErrors\" class=\"message is-danger\">\n                <div class=\"message-header\">\n                  Fehler beim Parse von &quot;<code>{{parseError.parsedLine}}</code>&quot;:\n                </div>\n                <div class=\"message-body\">\n                  <pre>\n                    <code class=\"has-text-danger\">{{parseError.msg}}</code>\n                  </pre>\n                </div>\n              </div>\n\n              <it4all-xml-element-line-match-result [result]=\"grammarResult.results\">\n              </it4all-xml-element-line-match-result>\n\n            </div>\n\n          </ng-container>\n\n        </it4all-tab>\n        <it4all-tab [title]=\"sampleSolutionsTabTitle\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary is-fullwidth\" (click)=\"toggleSampleSolutions()\">\n              Musterlösung {{displaySampleSolutions ? 'ausblenden' : 'anzeigen'}}\n            </button>\n          </div>\n\n          <div class=\"overflowHiddenDiv\" *ngIf=\"displaySampleSolutions\">\n            <div *ngFor=\"let sampleSolution of sampleSolutions; let last = last\">\n              <pre>{{isGrammarPart ? sampleSolution.grammar : sampleSolution.document}}</pre>\n\n              <br *ngIf=\"!last\">\n            </div>\n          </div>\n\n        </it4all-tab>\n      </it4all-tabs>\n\n    </div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {\n  LessonMultipleChoiceQuestionAnswerFragment,\n  LessonMultipleChoiceQuestionContentFragment,\n  LessonMultipleChoiceQuestionFragment\n} from '../../../../_services/apollo_services';\n\ninterface SelectableAnswer extends LessonMultipleChoiceQuestionAnswerFragment {\n  selected: boolean;\n}\n\ninterface QuestionWithSelectableAnswer {\n  question: LessonMultipleChoiceQuestionFragment;\n  corrected: boolean;\n  answers: SelectableAnswer[];\n}\n\nfunction shuffleArray<T>(array: T[]): void {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\n@Component({\n  selector: 'it4all-lesson-questions-content',\n  template: `\n    <div class=\"card my-3\" *ngFor=\"let questionWithSelectableAnswer of selectableAnswers\">\n      <header class=\"card-header\">\n        <p class=\"card-header-title\" [innerHTML]=\"questionWithSelectableAnswer.question.questionText\">\n          {{ questionWithSelectableAnswer.question.questionText }}\n        </p>\n      </header>\n\n      <div class=\"card-content\">\n        <div class=\"field\" *ngFor=\"let answer of questionWithSelectableAnswer.answers\">\n          <label class=\"checkbox\" [ngClass]=\"isCorrectedAndCorrect(questionWithSelectableAnswer, answer)\">\n            <input type=\"checkbox\" (change)=\"answer.selected = !answer.selected\">\n            &nbsp;\n            <span [innerHTML]=\"answer.answer\">{{ answer.answer }}</span>\n          </label>\n        </div>\n\n        <button class=\"button is-link\"\n                (click)=\"questionWithSelectableAnswer.corrected = true\"\n                [disabled]=\"questionWithSelectableAnswer.corrected\">\n          Korrektur\n        </button>\n\n      </div>\n    </div>\n  `\n})\nexport class LessonQuestionsContentComponent implements OnInit {\n\n  @Input() private content: LessonMultipleChoiceQuestionContentFragment;\n\n  selectableAnswers: QuestionWithSelectableAnswer[];\n\n  ngOnInit() {\n    this.selectableAnswers = this.content.questions.map((question) => {\n      const answers: SelectableAnswer[] = question.answers.map((answer) => {\n        return {selected: false, ...answer};\n      });\n\n      shuffleArray(answers);\n\n      return {question, corrected: false, answers};\n    });\n  }\n\n  isCorrectedAndCorrect(questionWithSelectableAnswer: QuestionWithSelectableAnswer, answer: SelectableAnswer): string {\n    // FIXME: implement!\n    if (questionWithSelectableAnswer.corrected) {\n      return 'TODO!';\n    } else {\n      return '';\n    }\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SqlCellFragment, SqlQueryResultFragment, SqlRowFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-query-result-table',\n  template: `\n    <table class=\"table is-bordered is-fullwidth\">\n      <thead>\n        <tr>\n          <th *ngFor=\"let colName of queryResult.columnNames\">{{colName}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let row of queryResult.rows\">\n          <td *ngFor=\"let colName of queryResult.columnNames\"\n              [ngClass]=\"getCell(row, colName).different ? 'is-light-danger' : ''\"\n          >{{getCell(row, colName).content}}</td>\n        </tr>\n      </tbody>\n    </table>`\n})\nexport class QueryResultTableComponent implements OnInit {\n\n  @Input() queryResult: SqlQueryResultFragment;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  getCell(row: SqlRowFragment, key: string): SqlCellFragment | undefined {\n    return row.cells.find((r) => r.key === key).value;\n  }\n\n}\n","import * as joint from 'jointjs';\nimport {BooleanNode, BooleanNot, BooleanVariable, instantiateOperator} from '../../_model/bool-node';\nimport {paper} from './boolDrawing';\n\nfunction getSubOutputFormula(wire: joint.dia.Link, graph: joint.dia.Graph): BooleanNode | undefined {\n  const inputGate: joint.shapes.logic.Gate = graph.getCell(wire.prop('source').id) as joint.shapes.logic.Gate;\n  return getOutputFormula(inputGate, graph);\n}\n\nfunction getOutputFormulaFromSingleInputGate(\n  gate: joint.shapes.logic.Gate11,\n  ingoingWires: joint.dia.Link[],\n  graph: joint.dia.Graph\n): BooleanNode | undefined {\n  if (gate instanceof joint.shapes.logic.Not) {\n    if (ingoingWires.length !== 1) {\n      // Not cannot have more than 1 ingoing wire...\n      gate.findView(paper).highlight();\n      return undefined;\n    }\n\n    const sourceInput: BooleanNode | undefined = getSubOutputFormula(ingoingWires[0], graph);\n    return sourceInput ? new BooleanNot(sourceInput) : undefined;\n\n  } else if (gate instanceof joint.shapes.logic.Repeater) {\n    // TODO: Repeater!\n    return undefined;\n  } else {\n    return undefined;\n  }\n}\n\nfunction getOutputFormulaFromDoubleInputGate(\n  gate: joint.shapes.logic.Gate21,\n  ingoingWires: joint.dia.Link[],\n  graph: joint.dia.Graph\n): BooleanNode | undefined {\n  if (ingoingWires.length !== 2) {\n    paper.findViewByModel(gate.id).highlight();\n    return undefined;\n  }\n\n  const firstInput: BooleanNode | undefined = getSubOutputFormula(ingoingWires[0], graph);\n  const secondInput: BooleanNode | undefined = getSubOutputFormula(ingoingWires[1], graph);\n\n  if (firstInput && secondInput) {\n    const operationString: string = gate.attributes.type.split('\\.')[1].toLocaleLowerCase();\n    return instantiateOperator(firstInput, operationString, secondInput);\n  } else {\n    return undefined;\n  }\n}\n\nfunction getOutputFormula(gate: joint.shapes.logic.Gate, graph: joint.dia.Graph): BooleanNode | undefined {\n  const ingoingWires: joint.dia.Link[] = graph.getConnectedLinks(gate, {inbound: true});\n\n  if (gate instanceof joint.shapes.logic.Gate11) {\n\n    return getOutputFormulaFromSingleInputGate(gate, ingoingWires, graph);\n\n  } else if (gate instanceof joint.shapes.logic.Gate21) {\n\n    // gate is and, nand, or, nor, xor, xnor, equiv or impl\n    return getOutputFormulaFromDoubleInputGate(gate, ingoingWires, graph);\n\n  } else if (gate instanceof joint.shapes.logic.IO) {\n\n    if (gate instanceof joint.shapes.logic.Input) {\n      return new BooleanVariable(gate.attr('logicSymbol').toString().charAt(0));\n    } else if (gate instanceof joint.shapes.logic.Output) {\n\n      if (ingoingWires.length !== 1) {\n        gate.findView(paper).highlight();\n        return undefined;\n      }\n\n      return getSubOutputFormula(ingoingWires[0], graph);\n    }\n  }\n}\n\nexport function extractFormulaFromGraph(graph: joint.dia.Graph): [BooleanVariable, (BooleanNode | undefined)][] {\n  const formulas: [BooleanVariable, (BooleanNode | undefined)][] = [];\n\n  for (const element of graph.getElements()) {\n    paper.findViewByModel(element).unhighlight();\n\n    if (element instanceof joint.shapes.logic.Output) {\n      const variable = new BooleanVariable(element.attr('logicSymbol').toString().charAt(0));\n\n      formulas.push([variable, getOutputFormula(element, graph)]);\n    }\n  }\n\n  return formulas;\n}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {DexieService} from '../../../../_services/dexie.service';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {\n  ExerciseFileFragment,\n  ExerciseSolveFieldsFragment,\n  FilesSolution,\n  FilesSolutionInput, ImplementationCorrectionResultFragment,\n  ProgExPart,\n  ProgrammingCorrectionGQL,\n  ProgrammingCorrectionMutation,\n  ProgrammingCorrectionMutationVariables,\n  ProgrammingCorrectionResultFragment,\n  ProgrammingExerciseContentFragment,\n  ProgrammingResultFragment,\n  UnitTestCorrectionResultFragment\n} from '../../../../_services/apollo_services';\nimport {FilesExerciseComponent} from \"../../_components/files-exercise/files-exercise.component\";\n\nimport 'codemirror/mode/python/python';\n\nfunction getIdForProgExPart(progExPart: ProgExPart): string {\n  switch (progExPart) {\n    case ProgExPart.ActivityDiagram:\n    case ProgExPart.Implementation:\n      return 'implementation';\n    case ProgExPart.TestCreation:\n      return 'testCreation';\n  }\n}\n\n@Component({\n  selector: 'it4all-programming-exercise',\n  templateUrl: './programming-exercise.component.html'\n})\nexport class ProgrammingExerciseComponent\n  extends ComponentWithExerciseDirective<FilesSolutionInput, ProgrammingCorrectionMutation, ProgrammingCorrectionMutationVariables>\n  implements OnInit {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: ProgrammingExerciseContentFragment;\n\n  @ViewChild(FilesExerciseComponent) filesExerciseComponent: FilesExerciseComponent;\n\n  partId: string;\n\n  exerciseFiles: ExerciseFileFragment[] = [];\n\n  constructor(programmingCorrectionGQL: ProgrammingCorrectionGQL, dexieService: DexieService) {\n    super(programmingCorrectionGQL, dexieService);\n  }\n\n  ngOnInit(): void {\n    this.partId = getIdForProgExPart(this.contentFragment.programmingPart);\n\n    this.exerciseFiles = (this.contentFragment.programmingPart === ProgExPart.Implementation)\n      ? this.contentFragment.implementationPart.files\n      : this.contentFragment.unitTestPart.unitTestFiles;\n\n    this.loadOldSolutionAbstract(this.exerciseFragment, this.partId, (oldSol: FilesSolutionInput) => this.exerciseFiles = oldSol.files);\n  }\n\n  // Sample solutions\n\n  get sampleSolutions(): FilesSolution[] {\n    return this.contentFragment.programmingSampleSolutions;\n  }\n\n  // Correction\n\n  protected getSolution(): FilesSolutionInput {\n    return {files: this.exerciseFiles};\n  }\n\n  protected getMutationQueryVariables(): ProgrammingCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: this.contentFragment.programmingPart,\n    };\n  }\n\n  correct(): void {\n    this.correctAbstract(this.exerciseFragment, this.partId, () => {\n      if (this.filesExerciseComponent) {\n        this.filesExerciseComponent.toggleCorrectionTab();\n      }\n    });\n  }\n\n  // Results\n\n  get correctionResult(): ProgrammingCorrectionResultFragment | null {\n    return this.resultQuery?.me.programmingExercise?.correct;\n  }\n\n  get abstractResult(): ProgrammingResultFragment | null {\n    return this.correctionResult?.result;\n  }\n\n  get unitTestResults(): UnitTestCorrectionResultFragment[] {\n    return this.abstractResult.unitTestResults || [];\n  }\n\n  get implementationCorrectionResult(): ImplementationCorrectionResultFragment | null {\n    return this.abstractResult?.implementationCorrectionResult;\n  }\n\n}\n","<it4all-files-exercise\n  [exerciseFiles]=\"exerciseFiles\"\n  [isCorrecting]=\"isCorrecting\"\n  [sampleSolutions]=\"sampleSolutions\"\n  (correct)=\"correct()\"\n  defaultMode=\"python\">\n  <ng-container exText>\n    <span [innerHTML]=\"exerciseFragment.text\"></span>\n  </ng-container>\n  <ng-container correctionContent>\n\n    <div class=\"message is-danger\" *ngIf=\"queryError\">\n      <div class=\"message-header\">Es gab einen internen Fehler bei der Korrektur:</div>\n      <div class=\"message-body\">\n        <pre>{{queryError.message}}</pre>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"correctionResult\">\n\n      <div class=\"my-3\">\n        <it4all-solution-saved [solutionSaved]=\"correctionResult.solutionSaved\"></it4all-solution-saved>\n      </div>\n\n      <div class=\"my-3\">\n        <it4all-points-notification [points]=\"abstractResult.points\" [maxPoints]=\"abstractResult.maxPoints\">\n        </it4all-points-notification>\n      </div>\n\n      <div class=\"content my-3\" *ngIf=\"unitTestResults && unitTestResults.length > 0\">\n        <ul *ngFor=\"let unitTestResult of unitTestResults\">\n          <it4all-programming-unit-test-result [unitTestResult]=\"unitTestResult\">\n          </it4all-programming-unit-test-result>\n        </ul>\n      </div>\n\n      <it4all-programming-normal-result *ngIf=\"implementationCorrectionResult\"\n                                        [normalResult]=\"implementationCorrectionResult\">\n      </it4all-programming-normal-result>\n    </ng-container>\n  </ng-container>\n</it4all-files-exercise>\n","import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {CorrectionHelpers, HasSampleSolutions} from \"../../_helpers/correction-helpers\";\nimport {TabsComponent} from \"../../../../shared/tabs/tabs.component\";\nimport {ExerciseFile, FilesSolution} from \"../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-files-exercise',\n  templateUrl: './files-exercise.component.html',\n  styles: [\n    `.overflow-hidden {\n      max-height: 750px;\n      overflow-y: auto;\n    }`\n  ]\n})\nexport class FilesExerciseComponent\n  extends CorrectionHelpers\n  implements HasSampleSolutions<FilesSolution> {\n\n  @Input() exerciseFiles: ExerciseFile[];\n\n  @Input() defaultMode: string;\n\n  @Input() sampleSolutions: FilesSolution[];\n\n  @Input() hasLivePreview: boolean = false;\n\n  @Input() isCorrecting = false;\n\n  @Output() correct: EventEmitter<void> = new EventEmitter<void>();\n\n  displaySampleSolutions = false;\n\n  @ViewChild(TabsComponent) tabsComponent: TabsComponent;\n\n  toggleSampleSolutions(): void {\n    this.displaySampleSolutions = !this.displaySampleSolutions;\n  }\n\n  performCorrection(): void {\n    this.correct.emit();\n  }\n\n  toggleCorrectionTab() {\n    if (this.tabsComponent) {\n      this.tabsComponent.selectTabByTitle(this.correctionTabTitle);\n    }\n  }\n\n}\n","<div class=\"container is-fluid\">\n\n  <div class=\"columns\">\n    <div class=\"column is-half-desktop\">\n      <it4all-exercise-files-editor\n        [exerciseFileFragments]=\"exerciseFiles\"\n        [mode]=\"defaultMode\">\n      </it4all-exercise-files-editor>\n    </div>\n\n    <div class=\"column is-half-desktop\">\n\n      <it4all-tabs>\n        <it4all-tab [title]=\"exerciseTextTabTitle\">\n          <div class=\"notification mb-3 is-light-grey\">\n            <ng-content select=\"[exText]\"></ng-content>\n          </div>\n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <button class=\"button is-link is-fullwidth\" [class.is-loading]=\"isCorrecting\" (click)=\"correct.emit()\">\n                Korrektur\n              </button>\n            </div>\n            <div class=\"column\">\n              <a routerLink=\"../..\" class=\"button is-dark is-fullwidth\">Bearbeiten beenden</a>\n            </div>\n          </div>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"correctionTabTitle\">\n          <div class=\"notification is-dark-warning\" *ngIf=\"isCorrecting\">\n            Die Korrektur läuft gerade...\n          </div>\n\n          <div class=\"overflow-hidden\">\n            <ng-content select=\"[correctionContent]\"></ng-content>\n          </div>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"livePreviewTabTitle\" *ngIf=\"hasLivePreview\">\n          <ng-content select=\"[livePreview]\"></ng-content>\n        </it4all-tab>\n\n        <it4all-tab [title]=\"sampleSolutionsTabTitle\">\n          <div class=\"buttons\">\n            <button class=\"button is-primary is-fullwidth\" (click)=\"toggleSampleSolutions()\">\n              Musterlösung {{displaySampleSolutions ? 'ausblenden' : 'anzeigen'}}\n            </button>\n          </div>\n\n          <ng-container *ngIf=\"displaySampleSolutions\">\n            <div class=\"overflow-hidden\">\n              <ng-container *ngFor=\"let sample of sampleSolutions; let lastList = last\">\n                <div class=\"mb-3\" *ngFor=\"let exFile of sample.files\">\n                  <it4all-exercise-file-card [exerciseFile]=\"exFile\"></it4all-exercise-file-card>\n                </div>\n\n                <br *ngIf=\"!lastList\">\n              </ng-container>\n            </div>\n\n          </ng-container>\n        </it4all-tab>\n      </it4all-tabs>\n\n    </div>\n  </div>\n\n</div>\n\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {DECIMAL_SYSTEM, NaryComponentBase, NaryReadOnlyNumberInput} from '../nary';\nimport {randomInt} from '../../../../helpers';\n\n@Component({\n  selector: 'it4all-nary-two-conversion',\n  templateUrl: './nary-two-conversion.component.html'\n})\nexport class NaryTwoConversionComponent extends NaryComponentBase implements OnInit {\n\n  withIntermediateSteps = true;\n\n  toConvertInput: NaryReadOnlyNumberInput = {\n    decimalNumber: 0,\n    numberingSystem: DECIMAL_SYSTEM,\n    fieldId: 'startNumber',\n    labelContent: 'Startzahl:',\n    maxValueForDigits: this.max\n  };\n\n  binaryAbsoluteString = '';\n  invertedAbsoluteString = '';\n  solutionString = '';\n\n  checked = false;\n\n  binaryAbsoluteCorrect = false;\n  invertedAbsoluteCorrect = false;\n  solutionCorrect = false;\n\n  completelyCorrect = false;\n\n  constructor() {\n    super(128);\n  }\n\n  private static swapOnesAndZeros(str: string): string {\n    return str\n      .replace(/0/g, 'a')\n      .replace(/1/g, '0')\n      .replace(/a/g, '1');\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.toConvertInput.decimalNumber = randomInt(0, this.max);\n    this.toConvertInput.maxValueForDigits = this.max;\n\n    this.checked = false;\n\n    this.binaryAbsoluteString = '';\n    this.invertedAbsoluteString = '';\n    this.solutionString = '';\n  }\n\n  checkSolution(): void {\n    this.checked = true;\n\n    const absoluteToConvert = Math.abs(this.toConvertInput.decimalNumber);\n\n    const binAbsStr: string = this.binaryAbsoluteString.replace(/\\s+/g, '');\n    this.binaryAbsoluteCorrect = binAbsStr.length === 8 && parseInt(binAbsStr, 2) === absoluteToConvert;\n\n    const invAbsStr: string = this.invertedAbsoluteString.replace(/\\s+/g, '');\n    const awaitedInvertedAbs: string = NaryTwoConversionComponent.swapOnesAndZeros(absoluteToConvert.toString(2).padStart(8, '0'));\n    this.invertedAbsoluteCorrect = invAbsStr.length === 8 && awaitedInvertedAbs === invAbsStr;\n\n    const solStr: string = this.solutionString.replace(/\\s+/g, '');\n    const awaitedSolution: string = (parseInt(awaitedInvertedAbs, 2) + 1).toString(2).padStart(8, '0');\n\n    this.solutionCorrect = solStr.length === 8 && awaitedSolution === solStr;\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      if (this.completelyCorrect) {\n        this.update();\n      } else {\n        this.checkSolution();\n      }\n    }\n  }\n\n}\n","<div class=\"columns\">\n  <div class=\"column is-half-desktop is-offset-one-quarter-desktop\">\n\n    <label class=\"label has-text-centered\" for=\"max\">Maximalwert</label>\n    <div class=\"field has-addons\">\n      <div class=\"control\">\n        <button class=\"button\" (click)=\"doubleMax()\" [disabled]=\"max === maximalMax\">* 2</button>\n      </div>\n      <div class=\"control is-expanded\">\n        <input class=\"input has-text-centered\" type=\"number\" id=\"max\" value=\"{{max}}\">\n      </div>\n      <div class=\"control\">\n        <button class=\"button\" (click)=\"halveMax()\" [disabled]=\"max === minimalMax\">/ 2</button>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <div class=\"control has-text-centered\">\n        <label class=\"checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"withIntermediateSteps\"> Mit Zwischenschritten\n        </label>\n      </div>\n    </div>\n\n    <p class=\"is-italic has-text-info has-text-centered\">Geben Sie alle Binärzahlen mit einer Länge von 8 Bit ein!</p>\n\n    <hr>\n\n    <it4all-nary-number-read-only-input [naryNumberInput]=\"toConvertInput\"></it4all-nary-number-read-only-input>\n\n    <br>\n\n    <div class=\"field\">\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <label for=\"binaryAbsolute\">Binärdarstellung von {{toConvertInput.decimalNumber}}:</label>\n          </div>\n        </div>\n        <div class=\"control is-expanded\">\n          <input type=\"text\" class=\"input has-text-right\" id=\"binaryAbsolute\" [(ngModel)]=\"binaryAbsoluteString\"\n                 [class.is-success]=\"checked && withIntermediateSteps && binaryAbsoluteCorrect\"\n                 [class.is-danger]=\"checked && withIntermediateSteps && !binaryAbsoluteCorrect\"\n                 placeholder=\"Binärdarstellung von {{toConvertInput.decimalNumber}}\" autofocus autocomplete=\"off\">\n        </div>\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <sub>2</sub>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"notification has-text-centered is-danger\"\n         *ngIf=\"checked && withIntermediateSteps && !binaryAbsoluteCorrect\">\n      &#10008; Diese Eingabe ist nicht korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\"\n         *ngIf=\"checked && withIntermediateSteps && binaryAbsoluteCorrect\">\n      &#10004; Diese Eingabe ist korrekt.\n    </div>\n\n    <br>\n\n    <div class=\"field\">\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <label for=\"invertedAbsolute\">Invertierung aller Bits:</label>\n          </div>\n        </div>\n        <div class=\"control is-expanded\">\n          <input type=\"text\" class=\"input has-text-right\" id=\"invertedAbsolute\" [(ngModel)]=\"invertedAbsoluteString\"\n                 [class.is-success]=\"checked && withIntermediateSteps && invertedAbsoluteCorrect\"\n                 [class.is-danger]=\"checked && withIntermediateSteps && !invertedAbsoluteCorrect\"\n                 placeholder=\"Invertierung aller Bits\" autofocus autocomplete=\"off\">\n        </div>\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <sub>2</sub>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"notification has-text-centered is-danger\"\n         *ngIf=\"checked && withIntermediateSteps && !invertedAbsoluteCorrect\">\n      &#10008; Diese Eingabe ist nicht korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\"\n         *ngIf=\"checked && withIntermediateSteps && invertedAbsoluteCorrect\">\n      &#10004; Diese Eingabe ist korrekt.\n    </div>\n\n    <hr>\n\n    <div class=\"field\">\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <label for=\"solution\">Zweierkomplement:</label>\n          </div>\n        </div>\n        <div class=\"control is-expanded\">\n          <input type=\"text\" class=\"input has-text-right\" id=\"solution\" [(ngModel)]=\"solutionString\"\n                 [class.is-success]=\"checked && solutionCorrect\" [class.is-danger]=\"checked && !solutionCorrect\"\n                 placeholder=\"Zweierkomplement\" autofocus autocomplete=\"off\">\n        </div>\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <sub>2</sub>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"notification has-text-centered is-danger\" *ngIf=\"checked && !solutionCorrect\">\n      &#10008; Die Lösung ist nicht korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\" *ngIf=\"checked && solutionCorrect\">\n      &#10004; Die Lösung ist korrekt.\n    </div>\n\n    <br>\n\n    <it4all-random-solve-buttons\n      (correctEmitter)=\"checkSolution()\"\n      (nextEmitter)=\"update()\">\n    </it4all-random-solve-buttons>\n\n  </div>\n</div>\n","import * as joint from 'jointjs';\n\nimport * as _ from 'lodash';\n\ndeclare module 'jointjs' {\n  namespace shapes {\n    namespace logic {\n      interface Gate {\n        signal: number;\n\n        onSignal(signal: boolean, handler: (b: boolean) => void): void;\n      }\n    }\n  }\n}\n\njoint.shapes.logic.Gate.prototype.onSignal = (signal: boolean, handler: (b: boolean) => void): void => {\n  handler.call(this, signal);\n};\n\n// The repeater delays a signal handling by 400ms\njoint.shapes.logic.Repeater.prototype.onSignal = (signal: boolean, handler: (b: boolean) => void): void => {\n  _.delay(handler, 400, signal);\n};\n\n// Output element just marks itself as alive.\njoint.shapes.logic.Output.prototype.onSignal = (signal: boolean, handler: (b: boolean) => void): void => {\n  // FIXME: toggleLive(this, signal);\n};\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {BoolComponentHelper} from '../_model/bool-component-helper';\nimport {BooleanNode, calculateAssignments} from '../_model/bool-node';\nimport {generateBooleanFormula} from '../_model/bool-formula';\n\n@Component({\n  selector: 'it4all-bool-fillout',\n  templateUrl: './bool-fill-out.component.html'\n})\nexport class BoolFillOutComponent extends BoolComponentHelper implements OnInit {\n\n  withSubFormulas = false;\n  subFormulas: BooleanNode[] = [];\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.completelyCorrect = false;\n    this.corrected = false;\n\n    this.formula = generateBooleanFormula(this.sampleVariable);\n    this.assignments = calculateAssignments(this.formula.getVariables());\n    this.subFormulas = this.formula.getSubFormulas();\n\n    this.assignments.forEach((assignment) => {\n      assignment.set(this.sampleVariable.variable, this.formula.evaluate(assignment));\n      assignment.set(this.learnerVariable.variable, false);\n    });\n  }\n\n  correct(): void {\n    this.corrected = true;\n\n    this.completelyCorrect = this.assignments.every((a) => this.isCorrect(a));\n  }\n\n  updateAssignment(assignment: Map<string, boolean>): void {\n    for (const as of this.assignments) {\n      if (as === assignment) {\n        const newValue = !as.get(this.learnerVariable.variable);\n        as.set(this.learnerVariable.variable, newValue);\n      }\n    }\n\n    if (this.corrected) {\n      this.correct();\n    }\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      if (this.completelyCorrect) {\n        this.update();\n      } else {\n        this.corrected = true;\n      }\n    }\n  }\n\n}\n","<div class=\"columns\">\n  <div class=\"column is-half-desktop is-offset-one-quarter-desktop\">\n\n    <!--      <div class=\"field\">-->\n    <!--        <div class=\"control has-text-centered\">-->\n    <!--          <label class=\"checkbox\">-->\n    <!--            <input type=\"checkbox\" [(ngModel)]=\"withSubFormulas\"> Mit Zwischenschritten-->\n    <!--          </label>-->\n    <!--        </div>-->\n    <!--      </div>-->\n\n    <br>\n\n    <h2 class=\"subtitle is-4 has-text-centered\"><code [innerHTML]=\"formula.asHtmlString()\"></code></h2>\n    <h3 class=\"subtitle is-5 has-text-centered has-text-grey\">{{formula.asString()}}</h3>\n\n    <br>\n\n    <table class=\"table is-bordered is-fullwidth\">\n      <thead>\n        <tr>\n          <th class=\"has-text-centered\" *ngFor=\"let variable of formula.getVariables()\">{{variable.variable}}</th>\n          <ng-container *ngIf=\"withSubFormulas\">\n            <th class=\"has-text-centered\" *ngFor=\"let subFormula of subFormulas\"\n                [innerHTML]=\"subFormula.asHtmlString()\"></th>\n          </ng-container>\n          <th class=\"has-text-centered\">{{learnerVariable.variable}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let assignment of assignments\">\n          <td class=\"has-text-centered\"\n              *ngFor=\"let variable of formula.getVariables()\">{{displayAssignmentValue(assignment, variable) }}</td>\n          <ng-container *ngIf=\"withSubFormulas\">\n            <th *ngFor=\"let subFormula of subFormulas\">\n              <!-- FIXME: button for subFormula... -->\n            </th>\n          </ng-container>\n          <td [class.has-background-danger]=\"corrected && !isCorrect(assignment)\"\n              [class.has-background-success]=\"corrected && isCorrect(assignment)\"\n              class=\"has-text-centered\">\n            <button (click)=\"updateAssignment(assignment)\" class=\"button\"\n                    [class.is-link]=\"assignment.get(this.learnerVariable.variable)\">\n              {{displayAssignmentValue(assignment, this.learnerVariable)}}\n            </button>\n            &nbsp;\n            <span *ngIf=\"corrected && isCorrect(assignment)\">&#10004;</span>\n            <span *ngIf=\"corrected && !isCorrect(assignment)\">&#10008;</span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div class=\"notification has-text-centered is-danger\" *ngIf=\"corrected && !completelyCorrect\">\n      &#10008; Ihre Lösung ist nicht (komplett) korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\" *ngIf=\"corrected && completelyCorrect\">\n      &#10004; Ihre Lösung ist korrekt.\n    </div>\n\n    <it4all-random-solve-buttons\n      (correctEmitter)=\"correct()\"\n      (nextEmitter)=\"update()\">\n    </it4all-random-solve-buttons>\n  </div>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {SqlQueryResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-sql-table-contents',\n  template: `\n    <div class=\"columns is-multiline\">\n      <div class=\"column is-one-quarter-desktop\" *ngFor=\"let dbContent of dbContents\">\n        <button class=\"button is-fullwidth\" (click)=\"activateModal(dbContent)\"\n                [class.is-info]=\"dbContent === shownDbContent\">\n          {{dbContent.tableName}}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngIf=\"shownDbContent\">\n      <header class=\"card-header\">\n        <p class=\"card-header-title\">{{shownDbContent.tableName}}</p>\n      </header>\n      <section class=\"card-content\">\n        <div class=\"table-container\">\n          <it4all-query-result-table [queryResult]=\"shownDbContent\"></it4all-query-result-table>\n        </div>\n      </section>\n    </div>`\n})\nexport class SqlTableContentsComponent {\n\n  @Input() dbContents: SqlQueryResultFragment[];\n\n  shownDbContent: SqlQueryResultFragment | undefined;\n\n  activateModal(sqlQueryResult: SqlQueryResultFragment): void {\n    if (this.shownDbContent === sqlQueryResult) {\n      this.shownDbContent = undefined;\n    } else {\n      this.shownDbContent = sqlQueryResult;\n    }\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {GradedTextContentResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-html-attribute-result',\n  template: `\n    <li [ngClass]=\"attributeResult.isSuccessful ? 'has-text-success' : 'has-text-danger'\">\n      Das Attribut <code>{{attributeResult.keyName}}</code>\n      <ng-container *ngIf=\"attributeResult.maybeFoundContent\">\n        sollte den Wert <code>{{attributeResult.awaitedContent}}</code> haben.\n        Gefunden wurde <code>{{attributeResult.maybeFoundContent}}</code>.\n      </ng-container>\n      <ng-container *ngIf=\"!attributeResult.maybeFoundContent\">\n        wurde nicht gefunden!\n      </ng-container>\n    </li>\n  `\n})\nexport class HtmlAttributeResultComponent {\n\n  @Input() attributeResult: GradedTextContentResultFragment;\n\n}\n","export abstract class CorrectionHelpers {\n\n  readonly exerciseTextTabTitle = 'Aufgabenstellung';\n\n  readonly correctionTabTitle = 'Korrektur';\n\n  readonly livePreviewTabTitle = 'Live-Vorschau';\n\n  readonly sampleSolutionsTabTitle = 'Musterlösungen';\n\n}\n\nexport interface HasSampleSolutions<SolutionType> {\n  displaySampleSolutions: boolean;\n\n  sampleSolutions: SolutionType[];\n\n  toggleSampleSolutions(): void;\n}\n","<it4all-sql-matching-result\n  matchName=\"Spalten\"\n  matchSingularName=\"der Spalte\"\n  [matchingResult]=\"columnComparison\">\n</it4all-sql-matching-result>\n\n<br>\n\n<it4all-sql-matching-result\n  matchName=\"Tabellen\"\n  matchSingularName=\"der Tabelle\"\n  [matchingResult]=\"tableComparison\">\n</it4all-sql-matching-result>\n\n<br>\n\n<it4all-sql-matching-result\n  matchName=\"Join-Bedingungen\"\n  matchSingularName=\"der Join-Bedingung\"\n  [matchingResult]=\"joinExpressionComparison\">\n</it4all-sql-matching-result>\n\n<br>\n\n<it4all-sql-matching-result\n  matchName=\"Bedingungen\"\n  matchSingularName=\"der Bedingung\"\n  [matchingResult]=\"whereComparison\">\n</it4all-sql-matching-result>\n\n<br>\n\n<ng-container *ngIf=\"selectAdditionalComparisons\">\n  <it4all-sql-matching-result\n    matchName=\"Order Bys\"\n    matchSingularName=\"des Order By-Statements\"\n    [matchingResult]=\"selectAdditionalComparisons.orderByComparison\">\n  </it4all-sql-matching-result>\n\n  <br>\n\n  <it4all-sql-matching-result\n    matchName=\"Group Bys\"\n    matchSingularName=\"des Group By-Statements\"\n    [matchingResult]=\"selectAdditionalComparisons.groupByComparison\">\n  </it4all-sql-matching-result>\n\n  <br>\n\n  <it4all-sql-matching-result\n    matchName=\"Limits\"\n    matchSingularName=\"des Limit-Statements\"\n    [matchingResult]=\"selectAdditionalComparisons.limitComparison\">\n  </it4all-sql-matching-result>\n</ng-container>\n\n<br>\n\n<it4all-sql-matching-result\n  *ngIf=\"insertAdditionalComparisons\"\n  matchName=\"Inserts\"\n  matchSingularName=\"Insert\"\n  [matchingResult]=\"insertAdditionalComparisons\">\n</it4all-sql-matching-result>\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {\n  BinaryExpressionComparisonFragment,\n  ColumnComparisonFragment,\n  SelectAdditionalComparisonFragment,\n  SqlResultFragment,\n  StringMatchingResultFragment,\n} from '../../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-sql-result',\n  templateUrl: './sql-result.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class SqlResultComponent {\n\n  @Input() result: SqlResultFragment;\n\n  points: number;\n  maxPoints: number;\n\n  get columnComparison(): ColumnComparisonFragment {\n    return this.result.staticComparison.columnComparison;\n  }\n\n  get tableComparison(): StringMatchingResultFragment {\n    return this.result.staticComparison.tableComparison;\n  }\n\n  get whereComparison(): BinaryExpressionComparisonFragment {\n    return this.result.staticComparison.whereComparison;\n  }\n\n  get joinExpressionComparison(): BinaryExpressionComparisonFragment {\n    return this.result.staticComparison.joinExpressionComparison;\n  }\n\n  get selectAdditionalComparisons(): SelectAdditionalComparisonFragment {\n    return this.result.staticComparison.additionalComparisons.selectComparisons;\n  }\n\n  get insertAdditionalComparisons(): StringMatchingResultFragment {\n    return this.result.staticComparison.additionalComparisons.insertComparison;\n  }\n\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'it4all-filled-points',\n  template: `\n    <span *ngFor=\"let x of filledDifficultyStars\">&#9899;</span>\n    <span *ngFor=\"let x of nonFilledDifficultyStars\">&#9898;</span>\n  `\n})\nexport class FilledPointsComponent {\n\n  @Input() filledPoints: number;\n  @Input() maxPoints: number;\n\n  get filledDifficultyStars(): number[] {\n    return Array(this.filledPoints).fill(0);\n  }\n\n  get nonFilledDifficultyStars(): number[] {\n    return Array(this.maxPoints - this.filledPoints).fill(0);\n  }\n\n}\n","import * as joint from 'jointjs';\nimport {MyJointClass} from './joint-class-diag-elements';\nimport {\n  UmlAssociationInput,\n  UmlAssociationType,\n  UmlAttribute,\n  UmlImplementationInput,\n  UmlMethod,\n  UmlMultiplicity\n} from '../../../../_services/apollo_services';\n\nexport const CLASS_TYPES = ['CLASS', 'ABSTRACT', 'INTERFACE'];\n\nexport function buildMethodString(cm: UmlMethod): string {\n  const modifier = [];\n\n  if (cm.isAbstract) {\n    modifier.push('a');\n  }\n\n  if (cm.isStatic) {\n    modifier.push('s');\n  }\n\n  return cm.visibility + ' ' + (\n    modifier.length === 0 ? '' : '{' + modifier.join(', ') + '} '\n  ) + cm.memberName + '(' + cm.parameters + '): ' + cm.memberType;\n}\n\nexport function buildAttributeString(ca: UmlAttribute): string {\n  const modifier = [];\n\n  if (ca.isAbstract) {\n    modifier.push('a');\n  }\n\n  if (ca.isStatic) {\n    modifier.push('s');\n  }\n\n  if (ca.isDerived) {\n    modifier.push('d');\n  }\n\n  return ca.visibility + ' ' + (modifier.length === 0 ? '' : '{' + modifier.join(', ') + '} ') + ca.memberName + ': ' + ca.memberType;\n}\n\nfunction getTypeName(type: string): string {\n  switch (type) {\n    case 'uml.Association':\n      return 'ASSOCIATION';\n    case 'uml.Aggregation':\n      return 'AGGREGATION';\n    case 'uml.Composition':\n      return 'COMPOSITION';\n    case 'uml.Implementation':\n      return 'IMPLEMENTATION';\n    default:\n      return 'ERROR!';\n  }\n}\n\nexport function getMultiplicity(label): UmlMultiplicity {\n  return label.attrs.text.text === '1' ? UmlMultiplicity.Single : UmlMultiplicity.Unbound;\n}\n\n\nexport function umlImplfromConnection(conn: joint.dia.Link): UmlImplementationInput {\n  return {\n    subClass: (conn.getSourceCell() as MyJointClass).getClassName(),\n    superClass: (conn.getTargetCell() as MyJointClass).getClassName()\n  };\n}\n\nexport function umlAssocfromConnection(conn: joint.dia.Link): UmlAssociationInput {\n  return {\n    assocType: getTypeName(conn.attributes.type) as UmlAssociationType,\n    assocName: '',        // TODO: name of association!?!\n    firstEnd: (conn.getSourceCell() as MyJointClass).getClassName(),\n    firstMult: getMultiplicity(conn.attributes.labels[0]),\n    secondEnd: (conn.getTargetCell() as MyJointClass).getClassName(),\n    secondMult: getMultiplicity(conn.attributes.labels[1])\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RandomSolveButtonsComponent} from './_components/random-solve-buttons/random-solve-buttons.component';\nimport {NaryNumberReadOnlyInputComponent} from './nary/_components/nary-number-read-only-input/nary-number-read-only-input.component';\nimport {BoolCreateInstructionsComponent} from './bool/bool-create/bool-create-instructions/bool-create-instructions.component';\nimport {BoolDrawingComponent} from './bool/bool-drawing/bool-drawing.component';\nimport {randomToolRoutingComponents, RandomToolsRoutingModule} from './random-tools.routing';\nimport {FormsModule} from '@angular/forms';\nimport {SharedModule} from '../../shared/shared.module';\nimport {BoolFillOutComponent} from \"./bool/bool-fill-out/bool-fill-out.component\";\nimport {BoolCreateComponent} from \"./bool/bool-create/bool-create.component\";\nimport {NaryAdditionComponent} from \"./nary/nary-addition/nary-addition.component\";\nimport {NaryConversionComponent} from \"./nary/nary-conversion/nary-conversion.component\";\nimport {NaryTwoConversionComponent} from \"./nary/nary-two-conversion/nary-two-conversion.component\";\n\n\n@NgModule({\n  declarations: [\n    ...randomToolRoutingComponents,\n\n    RandomSolveButtonsComponent,\n\n    BoolFillOutComponent,\n    BoolDrawingComponent,\n    BoolCreateComponent,\n    BoolCreateInstructionsComponent,\n\n    NaryNumberReadOnlyInputComponent,\n    NaryAdditionComponent,\n    NaryConversionComponent,\n    NaryTwoConversionComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RandomToolsRoutingModule\n  ]\n})\nexport class RandomToolsModule {\n}\n","import {Component, Input} from '@angular/core';\nimport {NaryReadOnlyNumberInput} from '../../nary';\n\n@Component({\n  selector: 'it4all-nary-number-read-only-input',\n  template: `\n    <div class=\"field has-addons\">\n      <div class=\"control\">\n        <div class=\"button is-static\">\n          <label for=\"{{naryNumberInput.fieldId}}\">{{naryNumberInput.labelContent}}</label>\n        </div>\n      </div>\n      <div class=\"control is-expanded\">\n        <input class=\"input has-text-right\" id=\"{{naryNumberInput.fieldId}}\" [value]=\"getSummandNary()\"\n               [placeholder]=\"naryNumberInput.labelContent\" readonly>\n      </div>\n      <div class=\"control\">\n        <div class=\"button is-static\">\n          <sub>{{naryNumberInput.numberingSystem.radix}}</sub>\n        </div>\n      </div>\n    </div>\n\n  `\n})\nexport class NaryNumberReadOnlyInputComponent {\n\n  @Input() naryNumberInput: NaryReadOnlyNumberInput;\n\n  constructor() {\n  }\n\n  getSummandNary(): string {\n    const radix = this.naryNumberInput.numberingSystem.radix;\n    const blockSize = radix === 2 ? 4 : 2;\n\n    const minimalDigits: number = Math.log2(this.naryNumberInput.maxValueForDigits) / Math.log2(radix);\n    const newDigitCount: number = Math.ceil(minimalDigits / blockSize) * blockSize;\n\n    return this.naryNumberInput.decimalNumber\n      .toString(radix)\n      .padStart(newDigitCount, '0')\n      .match(new RegExp(`.{1,${blockSize}}`, 'g')) // split in blocks\n      .join(' ');\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TabComponent} from './tab/tab.component';\nimport {TabsComponent} from './tabs/tabs.component';\nimport {PointsNotificationComponent} from './points-notification/points-notification.component';\nimport {SolutionSavedComponent} from './solution-saved/solution-saved.component';\nimport {BreadcrumbsComponent} from \"./breadcrumbs/breadcrumbs.component\";\nimport {RouterModule} from \"@angular/router\";\n\n\n@NgModule({\n  declarations: [\n    TabComponent,\n    TabsComponent,\n    PointsNotificationComponent,\n    BreadcrumbsComponent,\n    SolutionSavedComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    TabComponent,\n    TabsComponent,\n    PointsNotificationComponent,\n    SolutionSavedComponent,\n    BreadcrumbsComponent\n  ]\n})\nexport class SharedModule {\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {XmlDocumentResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-xml-document-correction',\n  template: `\n    <p [ngClass]=\"isCorrect ? 'has-text-dark-success' : 'has-text-danger'\">\n      Die Korrektur war {{isCorrect ? '' : 'nicht'}} erfolgreich. Es\n      wurden {{isCorrect ? 'keine' : result.errors.length}}\n      Fehler gefunden{{isCorrect ? '.' : ':'}}\n    </p>\n\n    <div class=\"content\" *ngIf=\"result.errors.length > 0\">\n      <ul>\n        <li *ngFor=\"let err of result.errors\"\n            [ngClass]=\"err.errorType === 'WARNING' ? 'has-text-dark-warning' : 'has-text-danger'\">\n          <b>Fehler in Zeile {{err.line}}</b>:\n          <code>{{err.errorMessage}}</code>\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class XmlDocumentCorrectionComponent implements OnInit {\n\n  @Input() result: XmlDocumentResultFragment;\n\n  isCorrect = false;\n\n  ngOnInit() {\n    this.isCorrect = this.result.errors.length === 0;\n  }\n\n}\n","import {distinctStringArray} from '../../../helpers';\nimport {\n  ExerciseSolveFieldsFragment,\n  KeyValueObject,\n  UmlExerciseContentFragment,\n  UmlExPart\n} from '../../../_services/apollo_services';\n\nexport function getIdForUmlExPart(umlExPart: UmlExPart): string {\n  switch (umlExPart) {\n    case UmlExPart.ClassSelection:\n      return 'classSelection';\n    case UmlExPart.DiagramDrawing:\n      return 'diagramDrawing';\n    case UmlExPart.DiagramDrawingHelp:\n      return 'diagramDrawingHelp';\n    case UmlExPart.MemberAllocation:\n      return 'memberAllocation';\n  }\n}\n\n// Helper functions\n\nexport interface SelectableClass {\n  name: string;\n  selected: boolean;\n  isCorrect: boolean;\n}\n\nexport interface UmlExerciseTextPart {\n  text: string;\n  selectableClass?: SelectableClass;\n}\n\nconst capWordTextSplitRegex: RegExp = /([A-Z][\\wäöü?&;]*)/g;\n\nexport function splitExerciseText(exerciseText: string): string[] {\n  return exerciseText\n    .replace('\\n', ' ')\n    .split(capWordTextSplitRegex)\n    .filter((s) => s.length > 0);\n}\n\nexport function replaceWithMapping(mappings: KeyValueObject[], str: string): string {\n  const maybeMapping = mappings.find((m) => m.key === str);\n  return maybeMapping ? maybeMapping.value : str;\n}\n\nexport function isSelectable(toIgnore: string[], s: string): boolean {\n  return s.match(capWordTextSplitRegex) && !toIgnore.includes(s);\n}\n\nexport function getUmlExerciseTextParts(\n  exercise: ExerciseSolveFieldsFragment,\n  exerciseContent: UmlExerciseContentFragment,\n): { selectableClasses: SelectableClass[], textParts: UmlExerciseTextPart[] } {\n\n  const splitText = splitExerciseText(exercise.text);\n\n  const allBaseForms = distinctStringArray(\n    splitText\n      .filter((s) => isSelectable(exerciseContent.toIgnore, s))\n      .map((s) => replaceWithMapping(exerciseContent.mappings, s))\n  );\n\n  const sampleSolution = exerciseContent.umlSampleSolutions[0];\n\n  const selectableClasses = allBaseForms.map<SelectableClass>((name) => {\n      return {\n        name,\n        selected: false,\n        isCorrect: sampleSolution.classes.find((c) => c.name === name) !== undefined\n      };\n    }\n  );\n\n  const textParts = splitText.map<UmlExerciseTextPart>((text) => {\n    if (isSelectable(exerciseContent.toIgnore, text)) {\n      const selectableClass = selectableClasses.find(\n        (c) => c.name === replaceWithMapping(exerciseContent.mappings, text)\n      );\n      return {text, selectableClass};\n    } else {\n      return {text};\n    }\n  });\n\n  return {selectableClasses, textParts};\n}\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {distinctObjectArray, flatMapArray} from '../../../../helpers';\nimport {\n  ExerciseSolveFieldsFragment,\n  UmlAttribute,\n  UmlClassDiagram,\n  UmlExerciseContentFragment,\n  UmlMethod,\n  UmlVisibility\n} from '../../../../_services/apollo_services';\n\nfunction printVisibility(v: UmlVisibility): string {\n  switch (v) {\n    case 'PUBLIC':\n      return '+';\n    case 'PACKAGE':\n      return '~';\n    case 'PROTECTED':\n      return '#';\n    case 'PRIVATE':\n      return '-';\n  }\n}\n\nfunction printAttribute(a: UmlAttribute): string {\n  return `${printVisibility(a.visibility)} ${a.memberName}: ${a.memberType}`;\n}\n\nfunction printMethod(m: UmlMethod): string {\n  return `${printVisibility(m.visibility)} ${m.memberName}(${m.parameters}): ${m.memberType}`;\n}\n\ninterface MemberAllocMember {\n  display: string;\n  correct: boolean;\n  selected: boolean;\n}\n\ninterface MemberAllocClass {\n  name: string;\n  attributes: MemberAllocMember[];\n  methods: MemberAllocMember[];\n}\n\n@Component({\n  selector: 'it4all-uml-member-allocation',\n  templateUrl: './uml-member-allocation.component.html'\n})\nexport class UmlMemberAllocationComponent implements OnInit {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: UmlExerciseContentFragment;\n\n  data: MemberAllocClass[];\n\n  sample: UmlClassDiagram;\n  allAttributes: UmlAttribute[];\n  allMethods: UmlMethod[];\n\n  corrected = false;\n\n  ngOnInit() {\n    this.sample = this.contentFragment.umlSampleSolutions[0];\n\n    this.allAttributes = distinctObjectArray(\n      flatMapArray(this.sample.classes, (clazz) => clazz.attributes), (a) => a.memberName\n    );\n\n    this.allMethods = distinctObjectArray(\n      flatMapArray(this.sample.classes, (clazz) => clazz.methods), (m) => m.memberName\n    );\n\n    this.data = this.sample.classes.map((clazz) => {\n      return {\n        name: clazz.name,\n        attributes: this.allAttributes.map((attr) => {\n          return {\n            display: printAttribute(attr),\n            correct: clazz.attributes.includes(attr),\n            selected: false\n          };\n        }),\n        methods: this.allMethods.map((met) => {\n          return {\n            display: printMethod(met),\n            correct: clazz.methods.includes(met),\n            selected: false\n          };\n        })\n      };\n    });\n  }\n\n  memberColor(m: MemberAllocMember): string {\n    if (this.corrected) {\n      return (m.correct === m.selected) ? 'has-text-dark-success' : 'has-text-danger';\n    } else {\n      return '';\n    }\n  }\n\n  correct(): void {\n    this.corrected = true;\n  }\n\n}\n","<div class=\"container is-fluid\">\n  <div class=\"columns\">\n    <div class=\"column is-one-quarter-desktop\">\n      <h2 class=\"subtitle is-4 has-text-centered\">Aufgabentext</h2>\n\n      <div class=\"notification is-light-grey\">\n        {{exerciseFragment.text}}\n      </div>\n\n      <div class=\"columns\">\n        <div class=\"column\">\n          <button class=\"button is-link is-fullwidth\" (click)=\"correct()\" [disabled]=\"corrected\">Korrektur</button>\n        </div>\n        <div class=\"column\">\n          <a class=\"button is-dark is-fullwidth\" routerLink=\"../..\">Bearbeiten beenden</a>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"column\">\n\n      <div class=\"columns is-multiline\">\n        <div class=\"column is-one-third-desktop\" *ngFor=\"let clazz of data\">\n          <div class=\"card\">\n            <header class=\"card-header\">\n              <p class=\"card-header-title\">{{clazz.name}}</p>\n            </header>\n            <div class=\"card-content\">\n              <p *ngFor=\"let a of clazz.attributes\">\n                <label class=\"checkbox\" [ngClass]=\"memberColor(a)\">\n                  <input type=\"checkbox\"> {{a.display}}\n                </label>\n              </p>\n\n              <hr>\n\n              <p *ngFor=\"let m of clazz.methods\">\n                <label class=\"checkbox\" [ngClass]=\"memberColor(m)\">\n                  <input type=\"checkbox\"> {{m.display}}\n                </label>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n","<div class=\"container\">\n  <ng-container *ngIf=\"exercise; else loadingDataBlock\">\n\n    <h1 class=\"title is-3 has-text-centered\">Aufgabe &quot;{{exercise.title}}&quot;</h1>\n\n    <div class=\"my-3\">\n      <it4all-breadcrumbs [parts]=\"breadCrumbs\"></it4all-breadcrumbs>\n    </div>\n\n    <div class=\"notification is-light-grey\" [innerHTML]=\"exercise.text\"></div>\n\n    <div class=\"columns\">\n      <div class=\"column\" *ngFor=\"let part of entryParts\">\n        <a class=\"button is-link is-fullwidth\" [routerLink]=\"['parts', part.id]\">{{part.name}}</a>\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {\n  ExerciseOverviewFragment,\n  ExerciseOverviewGQL,\n  ExerciseOverviewQuery,\n  PartFragment\n} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\nimport {BreadCrumbPart} from \"../../../shared/breadcrumbs/breadcrumbs.component\";\n\n@Component({templateUrl: './exercise-overview.component.html'})\nexport class ExerciseOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n  private exerciseOverviewQuery: ExerciseOverviewQuery;\n\n  constructor(private route: ActivatedRoute, private exerciseOverviewGQL: ExerciseOverviewGQL) {\n  }\n\n  ngOnInit() {\n\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n      const collId = parseInt(paramMap.get('collId'), 10);\n      const exId = parseInt(paramMap.get('exId'), 10);\n\n      this.exerciseOverviewGQL\n        .watch({toolId, collId, exId})\n        .valueChanges\n        .subscribe(({data}) => this.exerciseOverviewQuery = data);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  private getTool() {\n    return this.exerciseOverviewQuery?.me.tool;\n  }\n\n  get exercise(): ExerciseOverviewFragment | undefined {\n    return this.exerciseOverviewQuery?.me.tool.collection.exercise;\n  }\n\n  get entryParts(): PartFragment[] {\n    return this.exercise.parts.filter((p) => p.isEntryPart);\n  }\n\n  get breadCrumbs(): BreadCrumbPart[] {\n    return [\n      {routerLinkPart: '/', title: 'Tools'},\n      {routerLinkPart: `tools/${this.getTool().id}`, title: this.getTool().name},\n      {routerLinkPart: 'collections', title: 'Sammlungen'},\n      {routerLinkPart: this.getTool().collection.collectionId.toString(), title: this.getTool().collection.title},\n      {routerLinkPart: 'exercises', title: 'Aufgaben'},\n      {routerLinkPart: this.exercise.exerciseId.toString(), title: this.exercise.exerciseId.toString()}\n    ]\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  template: `\n    <h1 class=\"title is-3 has-text-centered\">{{title}}</h1>\n\n    <ng-container [ngSwitch]=\"part\">\n      <it4all-nary-addition *ngSwitchCase=\"'addition'\"></it4all-nary-addition>\n      <it4all-nary-conversion *ngSwitchCase=\"'conversion'\"></it4all-nary-conversion>\n      <it4all-nary-two-conversion *ngSwitchCase=\"'twoConversion'\"></it4all-nary-two-conversion>\n      <div *ngSwitchDefault class=\"notification is-light-danger has-text-centered\">\n        Part &quot;{{part}}&quot; was not found!\n      </div>\n    </ng-container>\n  `\n})\nexport class NaryExerciseComponent implements OnInit {\n\n  private sub: Subscription;\n\n  part: string;\n  title: string;\n\n  constructor(private  route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      this.part = paramMap.get('part');\n\n      this.title = this.getTitleForPart();\n    })\n  }\n\n  private getTitleForPart(): string {\n    switch (this.part) {\n      case 'addition':\n        return 'Addition';\n      case 'conversion':\n        return 'Zahlenumwandlung';\n      case 'twoConversion':\n        return 'Zahlenumwandlung im Zweiersystem';\n      default:\n        return '';\n    }\n  }\n\n}\n","<nav class=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <a class=\"navbar-item\" [routerLink]=\"['/']\">it4all - &beta;</a>\n  </div>\n\n  <div class=\"navbar-menu\">\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item has-dropdown is-hoverable\">\n        <a class=\"navbar-link\" i18n>Sprache</a>\n        <div class=\"navbar-dropdown\">\n          <a *ngFor=\"let lang of langs\" class=\"navbar-item\" href=\"/{{lang}}{{getCurrentUrl()}}\">{{lang}}</a>\n        </div>\n      </div>\n\n      <a class=\"navbar-item\" target=\"_blank\" href=\"https://www.uni-wuerzburg.de/sonstiges/impressum/\">\n        <span i18n>Impressum</span>\n      </a>\n      <a class=\"navbar-item\" target=\"_blank\" href=\"https://www.uni-wuerzburg.de/sonstiges/datenschutz/\">\n        <span i18n>Datenschutz</span>\n      </a>\n\n      <div class=\"navbar-item\">\n        <ng-container *ngIf=\"currentUser; else noUserBlock\">\n          <button (click)=\"logout()\" class=\"button is-light\">\n            <span i18n>Logout</span>&nbsp;{{currentUser.loggedInUser.username}}</button>\n        </ng-container>\n        <ng-template #noUserBlock>\n          <div class=\"buttons\">\n            <a routerLink=\"/loginForm\" class=\"button is-light\" i18n>Login</a>\n            <a routerLink=\"/registerForm\" class=\"button is-light\" i18n>Registrieren</a>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<br>\n\n<router-outlet></router-outlet>\n","import {Component} from '@angular/core';\nimport {AuthenticationService} from './_services/authentication.service';\nimport {LoggedInUserWithTokenFragment} from './_services/apollo_services';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'it4all-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  readonly langs: string[] = [\"de\", \"en\"];\n\n  currentUser: LoggedInUserWithTokenFragment;\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) {\n    this.authenticationService.currentUser.subscribe((u) => this.currentUser = u);\n  }\n\n  logout(): void {\n    this.authenticationService.logout();\n  }\n\n  getCurrentUrl(): string {\n    return this.router.url;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable({providedIn: 'root'})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n\n    if (currentUser) {\n      return true;\n    } else {\n      this.router.navigate(['/loginForm'], {queryParams: {returnUrl: state.url}});\n      return false;\n    }\n  }\n}\n","import {Mutation} from 'apollo-angular';\nimport {TabsComponent} from '../../../shared/tabs/tabs.component';\nimport {Directive, ViewChild} from '@angular/core';\nimport {DexieService} from '../../../_services/dexie.service';\nimport {ExerciseSolveFieldsFragment} from '../../../_services/apollo_services';\n\nimport {CorrectionHelpers} from \"./correction-helpers\";\nimport {GraphQLError} from \"graphql\";\n\n@Directive()\nexport abstract class ComponentWithExerciseDirective<SolutionInputType, MutationQueryType, MutationVariablesType>\n  extends CorrectionHelpers {\n\n  isCorrecting = false;\n\n  resultQuery?: MutationQueryType;\n  queryError?: GraphQLError;\n\n  @ViewChild(TabsComponent) tabsComponent: TabsComponent | undefined;\n\n  protected constructor(protected mutationGQL: Mutation<MutationQueryType, MutationVariablesType>, protected dexieService: DexieService) {\n    super();\n  }\n\n  private onCorrectionEnd(onComplete: () => void = () => {\n  }): void {\n    this.isCorrecting = false;\n\n    if (this.tabsComponent) {\n      this.tabsComponent.selectTabByTitle(this.correctionTabTitle);\n    }\n\n    onComplete();\n  }\n\n  protected correctAbstract(exerciseFragment: ExerciseSolveFieldsFragment, partId: string, onComplete: () => void = () => {\n  }): void {\n    const solution: SolutionInputType | undefined = this.getSolution();\n\n    if (!solution) {\n      alert('Ihre Lösung war nicht valide!');\n      return;\n    }\n\n    this.isCorrecting = true;\n\n    // noinspection JSIgnoredPromiseFromCall\n    this.dexieService.upsertSolution<SolutionInputType>(exerciseFragment, partId, solution);\n\n    this.mutationGQL\n      .mutate(this.getMutationQueryVariables())\n      .subscribe(\n        ({data}) => {\n          this.queryError = null;\n          this.resultQuery = data;\n          this.onCorrectionEnd(onComplete);\n        },\n        (error: GraphQLError) => {\n          this.queryError = error;\n          this.resultQuery = null;\n          this.onCorrectionEnd(onComplete);\n          console.error('There has been an graphQL error:', this.queryError);\n        }\n      );\n  }\n\n  protected loadOldSolutionAbstract(\n    exerciseFragment: ExerciseSolveFieldsFragment,\n    partId: string,\n    setOldSolution: (oldSol: SolutionInputType) => void,\n    onNoSolution: () => void = () => void 0\n  ) {\n    return this.dexieService.getSolution<SolutionInputType>(exerciseFragment, partId)\n      .then((dbSol) => {\n        if (dbSol) {\n          setOldSolution(dbSol.solution);\n        } else {\n          onNoSolution();\n        }\n      });\n  }\n\n  protected abstract getSolution(): SolutionInputType | undefined;\n\n  protected abstract getMutationQueryVariables(): MutationVariablesType;\n\n}\n","import {RandomTool} from './random-tool';\n\nexport const randomTools: RandomTool[] = [\n  {\n    id: 'bool',\n    name: 'Boolesche Algebra',\n    parts: [\n      {id: 'fillOut', name: 'Wahrheitstabellen ausfüllen'},\n      {id: 'create', name: 'Boolesche Formel erstellen'},\n      {id: 'drawing', name: 'Schaltkreis zeichnen', disabled: true}\n    ]\n  },\n  {\n    id: 'nary',\n    name: 'Zahlensysteme',\n    parts: [\n      {id: 'addition', name: 'Addition'},\n      {id: 'conversion', name: 'Zahlenumwandlung'},\n      {id: 'twoConversion', name: 'Zahlenumwandlung im Zweiersystem'}\n    ]\n  }\n];\n","import {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges} from '@angular/core';\nimport * as joint from 'jointjs';\nimport {MyJointClass} from '../../_model/joint-class-diag-elements';\n\n@Component({\n  selector: 'it4all-uml-assoc-edit',\n  templateUrl: './uml-assoc-edit.component.html'\n})\nexport class UmlAssocEditComponent implements OnChanges {\n\n  @Input() editedAssociation: joint.shapes.uml.Association;\n\n  @Output() cancel = new EventEmitter<void>();\n\n  firstEnd: MyJointClass;\n  firstMult: string;\n\n  secondEnd: MyJointClass;\n  secondMult: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const labels = this.editedAssociation.labels();\n\n    this.firstEnd = this.editedAssociation.getSourceCell() as MyJointClass;\n    this.firstMult = labels[0].attrs.text.text;\n\n    this.secondEnd = this.editedAssociation.getTargetCell() as MyJointClass;\n    this.secondMult = labels[1].attrs.text.text;\n  }\n\n  updateAssoc(firstMultValue: string, secondMultValue: string): void {\n    this.editedAssociation.label(0, {position: 25, attrs: {text: {text: firstMultValue}}});\n    this.editedAssociation.label(1, {position: -25, attrs: {text: {text: secondMultValue}}});\n  }\n\n}\n","<div class=\"card\">\n  <header class=\"card-header\">\n    <p class=\"card-header-title\">Assoziation bearbeiten</p>\n  </header>\n  <div class=\"card-content\">\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        {{firstEnd.getClassName()}}\n      </div>\n      <div class=\"column\">\n        <div class=\"select\">\n          <select title=\"Multiplizität\" #firstMultSelect>\n            <option [selected]=\"firstMult === '1'\">1</option>\n            <option [selected]=\"firstMult === '*'\">*</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"column\">\n        <div class=\"select\">\n          <select title=\"Multiplizität\" #secondMultSelect>\n            <option [selected]=\"secondMult === '1'\">1</option>\n            <option [selected]=\"secondMult === '*'\">*</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"column\">\n        {{secondEnd.getClassName()}}\n      </div>\n    </div>\n\n  </div>\n  <footer class=\"card-footer\">\n    <a class=\"card-footer-item\" (click)=\"cancel.emit()\">Verwerfen</a>\n    <a class=\"card-footer-item\" (click)=\"updateAssoc(firstMultSelect.value, secondMultSelect.value)\">Anwenden</a>\n  </footer>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MyJointClass} from '../../_model/joint-class-diag-elements';\nimport {UmlAttributeFragment} from '../../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-uml-class-edit',\n  templateUrl: './uml-class-edit.component.html'\n})\nexport class UmlClassEditComponent {\n\n  readonly visibilities = ['+', '-', '#', '~'];\n  readonly umlTypes = ['String', 'int', 'double', 'char', 'boolean', 'void'];\n\n  @Input() editedClass: MyJointClass;\n  @Output() cancel = new EventEmitter<void>();\n\n  removeAttribute(attr: UmlAttributeFragment): void {\n    const newAttributes = this.editedClass.getAttributes().filter((a) => a !== attr);\n\n    this.editedClass.setAttributes(newAttributes);\n  }\n\n}\n","<div class=\"card\">\n  <header class=\"card-header\">\n    <p class=\"card-header-title\">{{editedClass.getClassName()}}</p>\n  </header>\n  <div class=\"card-content\">\n    <ng-container *ngFor=\"let attr of editedClass.getAttributes()\">\n      <select title=\"Sichtbarkeit\" [value]=\"attr.visibility\">\n        <option *ngFor=\"let visibility of visibilities\" [selected]=\"visibility === attr.visibility\">\n          {{visibility}}\n        </option>\n      </select>\n      &nbsp;\n      <input type=\"text\" title=\"Attributname\" placeholder=\"Attributname\" [value]=\"attr.name\">\n      :\n      <select title=\"Datentyp\" [value]=\"attr.type\">\n        <option *ngFor=\"let umlType of umlTypes\" [selected]=\"umlType === attr.type\">{{umlType}}</option>\n      </select>\n      &nbsp;\n      <button title=\"Attribut löschen\" (click)=\"removeAttribute(attr)\">-</button>\n    </ng-container>\n\n    <hr>\n\n    <div>\n      <select title=\"Sichtbarkeit\">\n        <option *ngFor=\"let visibility of visibilities\">{{visibility}}</option>\n      </select>\n      &nbsp;\n      <input type=\"text\" title=\"Attributname\" placeholder=\"Attributname\">\n      :\n      <select title=\"Datentyp\">\n        <option *ngFor=\"let umlType of umlTypes\">{{umlType}}</option>\n      </select>\n    </div>\n\n    <hr>\n\n    <ng-container *ngFor=\"let method of editedClass.getMethods()\">\n      {{method | json}}\n    </ng-container>\n\n  </div>\n  <footer class=\"card-footer\">\n    <a class=\"card-footer-item\" (click)=\"cancel.emit()\">Verwerfen</a>\n    <a class=\"card-footer-item\">Anwenden</a>\n  </footer>\n</div>\n","export function getDefaultEditorOptions(mode: string) {\n  // noinspection JSUnusedGlobalSymbols\n  return {\n    mode,\n    lineNumbers: true,\n    theme: 'eclipse',\n    indentUnit: 4,\n    readOnly: false,\n    extraKeys: {\n      Tab: (cm) => cm.execCommand('indentMore'),\n      'Shift-Tab': (cm) => cm.execCommand('indentLess'),\n    }\n  };\n}\n\n","import {Component, Input} from '@angular/core';\nimport {SqlExecutionResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-sql-execution-result',\n  template: `\n    <h3 class=\"subtitle is-4 has-text-centered\">Vergleich der Ergebnistabellen</h3>\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        <h4 class=\"subtitle is-4 has-text-centered\">Nutzer</h4>\n        <div class=\"table-container\" *ngIf=\"result.userResult; else noUserResultBlock\">\n          <it4all-query-result-table [queryResult]=\"result.userResult\"></it4all-query-result-table>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <h4 class=\"subtitle is-4 has-text-centered\">Muster</h4>\n        <div class=\"table-container\">\n          <it4all-query-result-table [queryResult]=\"result.sampleResult\"></it4all-query-result-table>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #noUserResultBlock>\n      <div class=\"notification is-danger\">Es gab einen Fehler beim Ausführen ihrer Query!</div>\n    </ng-template>`\n})\nexport class SqlExecutionResultComponent {\n\n  @Input() result: SqlExecutionResultFragment;\n\n}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  ExerciseFileFragment,\n  ExerciseFileInput,\n  ExerciseSolveFieldsFragment,\n  FilesSolution,\n  FilesSolutionInput,\n  FlaskCorrectionGQL,\n  FlaskCorrectionMutation,\n  FlaskCorrectionMutationVariables,\n  FlaskCorrectionResultFragment,\n  FlaskExerciseContentFragment,\n  FlaskExercisePart,\n  FlaskResultFragment\n} from \"../../../../_services/apollo_services\";\nimport {ComponentWithExerciseDirective} from \"../../_helpers/component-with-exercise.directive\";\nimport {DexieService} from \"../../../../_services/dexie.service\";\nimport {FilesExerciseComponent} from \"../../_components/files-exercise/files-exercise.component\";\n\nimport 'codemirror/mode/jinja2/jinja2';\nimport 'codemirror/mode/python/python';\n\n\nfunction getIdForFlaskExPart(flaskExPart: FlaskExercisePart): string {\n  switch (flaskExPart) {\n    case FlaskExercisePart.FlaskSingleExPart:\n      return 'solve';\n  }\n}\n\n@Component({\n  selector: 'it4all-flask-exercise',\n  templateUrl: './flask-exercise.component.html'\n})\nexport class FlaskExerciseComponent\n  extends ComponentWithExerciseDirective<FilesSolutionInput, FlaskCorrectionMutation, FlaskCorrectionMutationVariables>\n  implements OnInit {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: FlaskExerciseContentFragment;\n\n  @ViewChild(FilesExerciseComponent) filesExerciseComponent: FilesExerciseComponent;\n\n  readonly partId: string = getIdForFlaskExPart(FlaskExercisePart.FlaskSingleExPart);\n\n  exerciseFileFragments: ExerciseFileFragment[] = [];\n\n  constructor(flaskCorrectionGQL: FlaskCorrectionGQL, dexieService: DexieService) {\n    super(flaskCorrectionGQL, dexieService);\n  }\n\n  ngOnInit(): void {\n    this.exerciseFileFragments = this.contentFragment.files;\n\n    this.loadOldSolutionAbstract(\n      this.exerciseFragment,\n      this.partId,\n      (oldSol) => this.exerciseFileFragments = oldSol.files\n    );\n  }\n\n  // Sample solutions\n\n  get sampleSolutions(): FilesSolution[] {\n    return this.contentFragment.flaskSampleSolutions;\n  }\n\n  // Correction\n\n  protected getSolution(): FilesSolutionInput | undefined {\n    const files: ExerciseFileInput[] = this.exerciseFileFragments\n      .map(({name, fileType, content, editable}) => {\n        return {name, fileType, content, editable};\n      });\n\n    return {files};\n  }\n\n  protected getMutationQueryVariables(): FlaskCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      part: FlaskExercisePart.FlaskSingleExPart,\n      solution: this.getSolution()\n    };\n  }\n\n  correct(): void {\n    this.correctAbstract(this.exerciseFragment, this.partId, () => {\n      if (this.filesExerciseComponent) {\n        this.filesExerciseComponent.toggleCorrectionTab();\n      }\n    });\n  }\n\n  // Result\n\n  get correctionResult(): FlaskCorrectionResultFragment | undefined {\n    return this.resultQuery?.me.flaskExercise?.correct;\n  }\n\n  get result(): FlaskResultFragment | undefined {\n    return this.correctionResult?.result;\n  }\n\n}\n","<it4all-files-exercise\n  [exerciseFiles]=\"exerciseFileFragments\"\n  [isCorrecting]=\"isCorrecting\"\n  [sampleSolutions]=\"sampleSolutions\"\n  (correct)=\"correct()\"\n  defaultMode=\"'python'\">\n\n  <div class=\"content\" exText>\n    <div class=\"mb-3\" [innerHTML]=\"exerciseFragment.text\"></div>\n\n    <p>Es werden folgende Testfälle ausgeführt:</p>\n\n    <div *ngFor=\"let singleTestConfig of contentFragment.testConfig.tests\">\n      {{singleTestConfig.id}}. <code>{{singleTestConfig.testName}}</code>:\n      <span [innerHTML]=\"singleTestConfig.description\"></span>\n    </div>\n  </div>\n\n  <ng-container correctionContent>\n\n    <div class=\"message is-danger\" *ngIf=\"queryError\">\n      <div class=\"message-header\">Es gab einen internen Fehler bei der Korrektur:</div>\n      <div class=\"message-body\">\n        <pre>{{queryError.message}}</pre>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"resultQuery\">\n      <div class=\"my-3\">\n        <it4all-solution-saved [solutionSaved]=\"correctionResult.solutionSaved\"></it4all-solution-saved>\n      </div>\n\n      <div class=\"my-3\">\n        <it4all-points-notification [points]=\"result.points\" [maxPoints]=\"result.maxPoints\">\n        </it4all-points-notification>\n      </div>\n\n      <div *ngFor=\"let testResult of result.testResults\" class=\"my-3\">\n        <div class=\"message\" [ngClass]=\"testResult.successful ? 'is-success' : 'is-danger'\">\n          <header class=\"message-header\">{{testResult.testName}}</header>\n          <div class=\"message-body\">\n            <pre>{{testResult.stderr.join(\"\\n\")}}</pre>\n          </div>\n        </div>\n\n      </div>\n    </ng-container>\n  </ng-container>\n\n</it4all-files-exercise>\n","<div class=\"container\">\n  <ng-container *ngIf=\"collectionListQuery; else loadingDataBlock\">\n\n    <h1 class=\"title is-3 has-text-centered\">Tool {{tool.name}}: Sammlungen</h1>\n\n    <div class=\"mb-3\">\n      <it4all-breadcrumbs [parts]=\"breadCrumbs\"></it4all-breadcrumbs>\n    </div>\n\n    <div class=\"columns is-multiline\">\n      <div class=\"column is-one-quarter\" *ngFor=\"let coll of collections\">\n\n        <div class=\"card\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title is-centered\">{{coll.collectionId}}. {{coll.title}}</p>\n          </header>\n          <div class=\"card-content\">{{coll.exerciseCount}} Aufgaben</div>\n          <footer class=\"card-footer\">\n            <a class=\"card-footer-item\" [routerLink]=\"[coll.collectionId]\">Zur Sammlung</a>\n          </footer>\n        </div>\n\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CollectionListGQL, CollectionListQuery, CollectionValuesFragment} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\nimport {BreadCrumbPart} from \"../../../shared/breadcrumbs/breadcrumbs.component\";\n\n// url => /tools/:toolId/collections\n\n@Component({templateUrl: './collections-list.component.html'})\nexport class CollectionsListComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  collectionListQuery: CollectionListQuery;\n\n  constructor(private route: ActivatedRoute, private collectionsGQL: CollectionListGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n\n      this.collectionsGQL\n        .watch({toolId})\n        .valueChanges\n        .subscribe(({data}) => this.collectionListQuery = data);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  get tool() {\n    return this.collectionListQuery.me.tool;\n  }\n\n  get collections(): CollectionValuesFragment[] {\n    return this.tool.collections;\n  }\n\n  get breadCrumbs(): BreadCrumbPart[] {\n    return [\n      {routerLinkPart: '/', title: 'Tools'},\n      {routerLinkPart: `tools/${this.tool.id}`, title: this.tool.name},\n      {routerLinkPart: 'collections', title: 'Sammlungen'},\n    ]\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  template: `\n    <div class=\"container\">\n      <h1 class=\"title is-3 has-text-centered\">{{title}}</h1>\n\n      <ng-container [ngSwitch]=\"part\">\n        <it4all-bool-fillout *ngSwitchCase=\"'fillOut'\"></it4all-bool-fillout>\n        <it4all-bool-create *ngSwitchCase=\"'create'\"></it4all-bool-create>\n        <div *ngSwitchDefault class=\"notification is-light-danger has-text-centered\">\n          Part &quot;{{part}}&quot; was not found!\n        </div>\n      </ng-container>\n    </div>\n  `\n})\nexport class BoolExerciseComponent implements OnInit {\n\n  private sub: Subscription;\n\n  part: string;\n  title: string;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      this.part = paramMap.get('part');\n\n      this.title = this.getTitleForPart();\n    });\n  }\n\n  private getTitleForPart(): string {\n    switch (this.part) {\n      case 'fillOut':\n        return 'Wahrheitstabellen ausfüllen';\n      case 'create':\n        return 'Boolesche Formel erstellen';\n      case 'drawing':\n        return '';\n      default:\n        return 'Fehler!';\n    }\n  }\n\n}\n","import {BrowserModule, Title} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule, routingComponents} from './app-routing.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ErrorInterceptor} from './_helpers/error.interceptor';\nimport {CodemirrorModule} from '@ctrl/ngx-codemirror';\nimport {RandomToolsModule} from './tools/random-tools/random-tools.module';\nimport {SharedModule} from './shared/shared.module';\nimport {CollectionToolsModule} from './tools/collection-tools/collection-tools.module';\nimport {GraphQLModule} from './graphql.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, AppRoutingModule, FormsModule, ReactiveFormsModule,\n    CodemirrorModule,\n\n    // Own Modules\n    SharedModule,\n    CollectionToolsModule,\n    RandomToolsModule,\n    GraphQLModule\n  ],\n  providers: [\n    Title,\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {distinctObjectArray, flatMapArray} from '../../../helpers';\nimport {\n  AllExercisesOverviewGQL,\n  AllExercisesOverviewQuery,\n  FieldsForLinkFragment,\n  TopicFragment,\n  TopicWithLevelFragment\n} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\n\n@Component({templateUrl: './all-exercises-overview.component.html'})\nexport class AllExercisesOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n  allExercisesOverviewQuery: AllExercisesOverviewQuery;\n\n  distinctTopicWithLevels: TopicWithLevelFragment[];\n  filteredExercises: FieldsForLinkFragment[];\n  filtersActivated: Map<TopicFragment, boolean> = new Map();\n\n  constructor(private route: ActivatedRoute, private allExercisesOverviewGQL: AllExercisesOverviewGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n\n      this.allExercisesOverviewGQL\n        .watch({toolId})\n        .valueChanges\n        .subscribe(({data}) => {\n          this.allExercisesOverviewQuery = data;\n\n          this.filteredExercises = this.allExercisesOverviewQuery.me.tool.allExercises;\n\n          this.distinctTopicWithLevels = distinctObjectArray(\n            flatMapArray(\n              this.allExercisesOverviewQuery.me.tool.allExercises,\n              (exercises) => exercises.topicsWithLevels\n            ),\n            (t) => t.topic.abbreviation\n          );\n        });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  toggleFilter(topicWithLevel: TopicWithLevelFragment): void {\n    this.filtersActivated.set(topicWithLevel.topic, !this.filtersActivated.get(topicWithLevel.topic));\n\n    const activatedFilters: TopicFragment[] = Array.from(this.filtersActivated.entries())\n      .filter(([_, activated]) => activated)\n      .map(([t, _]) => t);\n\n    if (activatedFilters.length > 0) {\n      this.filteredExercises = this.allExercisesOverviewQuery.me.tool.allExercises\n        .filter((metaData) => activatedFilters.every((t) => this.exerciseHasTag(metaData, t)));\n    } else {\n      this.filteredExercises = this.allExercisesOverviewQuery.me.tool.allExercises;\n    }\n  }\n\n  exerciseHasTag(exercise: FieldsForLinkFragment, tag: TopicFragment): boolean {\n    return exercise.topicsWithLevels\n      .map((t) => t.topic.abbreviation)\n      .includes(tag.abbreviation);\n  }\n\n\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"allExercisesOverviewQuery; else loadingExercisesBlock\">\n\n    <section>\n      <h2 class=\"title is-3 has-text-centered\">Filter</h2>\n\n      <div class=\"columns is-multiline\">\n        <div class=\"column is-one-fifth\" *ngFor=\"let topicWithLevel of distinctTopicWithLevels\">\n          <button class=\"button is-fullwidth\" [class.is-link]=\"filtersActivated.get(topicWithLevel.topic)\"\n                  (click)=\"toggleFilter(topicWithLevel)\">\n            {{topicWithLevel.topic.title}}\n          </button>\n        </div>\n      </div>\n    </section>\n\n    <hr>\n\n    <h1 class=\"title is-3 has-text-centered\">Alle Aufgaben</h1>\n\n    <div class=\"columns is-multiline\">\n      <div class=\"column is-one-third-desktop\" *ngFor=\"let metaData of filteredExercises\">\n        <it4all-exercise-link-card [exercise]=\"metaData\"></it4all-exercise-link-card>\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n\n\n<ng-template #loadingExercisesBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Aufgaben...</div>\n</ng-template>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {RandomTool} from '../random-tool';\nimport {randomTools} from '../random-tools-list';\nimport {Subscription} from 'rxjs';\n\n@Component({templateUrl: './random-overview.component.html'})\nexport class RandomOverviewComponent implements OnInit {\n\n  private sub: Subscription;\n\n  tool: RandomTool;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap\n      .subscribe((paramMap) => this.tool = randomTools.find((t) => t.id === paramMap.get('toolId')));\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"title is-3 has-text-centered\">Tool {{tool.name}}</h1>\n\n  <div class=\"buttons\">\n    <a class=\"button is-primary is-fullwidth\" routerLink=\"../..\">Zurück zur Toolübersicht</a>\n  </div>\n\n  <br>\n\n  <h2 class=\"subtitle is-3 has-text-centered\">Übungsaufgaben</h2>\n\n  <div class=\"buttons\">\n    <ng-container *ngFor=\"let part of tool.parts\">\n      <a *ngIf=\"!part.disabled\" [routerLink]=\"[part.id]\" class=\"button is-link is-fullwidth\">{{part.name}}</a>\n    </ng-container>\n  </div>\n\n</div>\n","import {AfterContentInit, Component, ContentChildren, QueryList} from '@angular/core';\nimport {TabComponent} from '../tab/tab.component';\n\n@Component({\n  selector: 'it4all-tabs',\n  template: `\n    <div class=\"tabs is-centered is-boxed is-fullwidth\">\n      <ul>\n        <li *ngFor=\"let tab of tabs\" (click)=\"selectTab(tab)\" [class.is-active]=\"tab.active\">\n          <a>{{tab.title}}</a>\n        </li>\n      </ul>\n    </div>\n    <ng-content></ng-content>`,\n})\nexport class TabsComponent implements AfterContentInit {\n\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  ngAfterContentInit() {\n    const activeTabs = this.tabs.filter((t) => t.active);\n\n    if (this.tabs.length > 0 && activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: TabComponent): void {\n    if (tab.selectable) {\n      this.tabs.toArray().forEach((t) => t.active = false);\n\n      tab.active = true;\n    } else {\n      alert('Sie können diesen Tab momentan nicht aktivieren!');\n    }\n  }\n\n  selectTabByTitle(title: string): void {\n    const maybeTab = this.tabs.toArray().find((tabComponent) => tabComponent.title === title);\n\n    if (maybeTab) {\n      this.selectTab(maybeTab);\n    }\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {ExerciseFileFragment} from '../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-exercise-file-card',\n  template: `\n    <div class=\"card\">\n      <header class=\"card-header\">\n        <p class=\"card-header-title\">{{exerciseFile.name}}</p>\n      </header>\n      <div class=\"card-content\">\n        <pre>{{exerciseFile.content}}</pre>\n      </div>\n    </div>\n  `\n})\nexport class ExerciseFileCardComponent {\n\n  @Input() exerciseFile: ExerciseFileFragment;\n\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"collectionToolOverviewQuery; else loadingDataBlock\">\n    <h1 class=\"title is-3 has-text-centered\">Tool {{tool.name}}</h1>\n\n    <div class=\"mb-3\">\n      <it4all-breadcrumbs [parts]=\"breadCrumbs\"></it4all-breadcrumbs>\n    </div>\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        <div class=\"card\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title\">Sammlungen</p>\n          </header>\n          <div class=\"card-content\">\n            {{tool.collectionCount}} Sammlungen mit {{tool.exerciseCount}} Aufgaben\n          </div>\n          <footer class=\"card-footer\">\n            <a class=\"card-footer-item\" routerLink=\"./collections\">Zu den Sammlungen</a>\n          </footer>\n        </div>\n      </div>\n\n      <div class=\"column\">\n        <div class=\"card\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title\">Alle Aufgaben</p>\n          </header>\n          <div class=\"card-content\">{{tool.exerciseCount}} Aufgaben</div>\n          <footer class=\"card-footer\">\n            <a class=\"card-footer-item\" routerLink=\"allExercises\">Zur Übersicht</a>\n          </footer>\n        </div>\n      </div>\n\n      <!--  *ngIf=\".me.tool.lessonCount > 0\" -->\n      <div class=\"column\">\n        <div class=\"card\">\n          <header class=\"card-header\">\n            <p class=\"card-header-title is-centered\">Lektionen</p>\n          </header>\n          <div class=\"card-content\">{{tool.lessonCount}} Lektionen</div>\n          <footer class=\"card-footer\">\n            <a class=\"card-footer-item\" [routerLink]=\"['lessons']\">Zu den Lektionen</a>\n          </footer>\n        </div>\n      </div>\n    </div>\n\n    <br>\n\n    <h2 class=\"subtitle is-3 has-text-centered\">Meine Fertigkeiten</h2>\n\n    <div class=\"columns is-multiline\" *ngIf=\"proficiencies.length > 0; else noProficienciesYetBlock\">\n      <div class=\"column is-one-quarter-desktop\" *ngFor=\"let proficiency of proficiencies\">\n        <it4all-proficiency-card [proficiency]=\"proficiency\"></it4all-proficiency-card>\n      </div>\n    </div>\n\n  </ng-container>\n\n</div>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n</ng-template>\n\n<ng-template #noProficienciesYetBlock>\n  <div class=\"notification is-primary has-text-centered\">Sie haben bisher noch keine Fähigkeiten erworben.</div>\n</ng-template>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {\n  CollectionToolOverviewGQL,\n  CollectionToolOverviewQuery,\n  UserProficiencyFragment\n} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\nimport {BreadCrumbPart} from \"../../../shared/breadcrumbs/breadcrumbs.component\";\n\n@Component({templateUrl: './collection-tool-overview.component.html'})\nexport class CollectionToolOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  collectionToolOverviewQuery: CollectionToolOverviewQuery;\n\n  constructor(private route: ActivatedRoute, private collectionToolOverviewGQL: CollectionToolOverviewGQL) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n\n      this.collectionToolOverviewGQL\n        .watch({toolId})\n        .valueChanges\n        .subscribe(({data}) => this.collectionToolOverviewQuery = data);\n    });\n  }\n\n  get proficiencies(): UserProficiencyFragment[] {\n    return this.collectionToolOverviewQuery.me.tool.proficiencies;\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  get tool() {\n    return this.collectionToolOverviewQuery.me.tool;\n  }\n\n  get breadCrumbs(): BreadCrumbPart[] {\n    return [\n      {routerLinkPart: '/', title: 'Tools'},\n      {routerLinkPart: `tools/${this.tool.id}`, title: this.tool.name}\n    ]\n  }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonIdentifierFragment, LessonsForToolGQL, LessonsForToolQuery} from '../../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  template: `\n    <div class=\"container\">\n      <ng-container *ngIf=\"lessonsForToolQuery; else loadingLessonsBlock\">\n\n        <h1 class=\"title is-3 has-text-centered\">Lektionen für {{lessonsForToolQuery.me.tool.name}}</h1>\n\n        <div class=\"columns is-multiline\" *ngIf=\"lessons.length > 0; else noLessonsFoundBlock\">\n          <div class=\"column is-half-desktop\" *ngFor=\"let lesson of lessons\">\n            <div class=\"card\">\n              <header class=\"card-header\">\n                <p class=\"card-header-title\">{{lesson.lessonId}}. {{lesson.title}}</p>\n              </header>\n              <div class=\"card-content\">{{lesson.description}}</div>\n              <div class=\"card-footer\">\n                <a class=\"card-footer-item\" [routerLink]=\"[lesson.lessonId]\">Zur Lektion</a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </ng-container>\n    </div>\n\n    <ng-template #loadingLessonsBlock>\n      <div class=\"notification is-primary has-text-centered\">Lade Lektionen...</div>\n    </ng-template>\n\n    <ng-template #noLessonsFoundBlock>\n      <div class=\"notification is-danger has-text-centered\">Es konnten keine Lektionen gefunden werden!</div>\n    </ng-template>\n  `\n})\nexport class LessonsForToolOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  lessonsForToolQuery: LessonsForToolQuery;\n\n  constructor(private route: ActivatedRoute, private lessonsForToolGQL: LessonsForToolGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n\n      this.lessonsForToolGQL\n        .watch({toolId})\n        .valueChanges\n        .subscribe(({data}) => this.lessonsForToolQuery = data);\n    });\n  }\n\n  get lessons(): LessonIdentifierFragment[] {\n    return this.lessonsForToolQuery ? this.lessonsForToolQuery.me.tool.lessons : [];\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {\n  BINARY_SYSTEM,\n  HEXADECIMAL_SYSTEM,\n  NaryComponentBase,\n  NaryReadOnlyNumberInput,\n  NUMBERING_SYSTEMS,\n  NumberingSystem\n} from '../nary';\nimport {randomInt} from '../../../../helpers';\n\n@Component({\n  selector: 'it4all-nary-conversion',\n  templateUrl: './nary-conversion.component.html'\n})\nexport class NaryConversionComponent extends NaryComponentBase implements OnInit {\n\n  // noinspection JSMismatchedCollectionQueryUpdate\n  numberingSystems: NumberingSystem[] = NUMBERING_SYSTEMS;\n\n  startSystem: NumberingSystem = BINARY_SYSTEM;\n  targetSystem: NumberingSystem = HEXADECIMAL_SYSTEM;\n\n  toConvertInput: NaryReadOnlyNumberInput = {\n    decimalNumber: 0,\n    numberingSystem: this.startSystem,\n    fieldId: 'toConvert',\n    labelContent: 'Startzahl:',\n    maxValueForDigits: this.max\n  };\n\n  solutionString: string;\n\n  checked = false;\n  correct = false;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.toConvertInput.decimalNumber = randomInt(1, this.max);\n    this.toConvertInput.numberingSystem = this.startSystem;\n    this.toConvertInput.maxValueForDigits = this.max;\n\n    this.solutionString = '';\n    this.checked = false;\n    this.correct = false;\n  }\n\n  checkSolution(): void {\n    this.checked = true;\n\n    const processedSolutionString: string = this.solutionString.replace(/\\s+/g, '');\n\n    const solution: number = parseInt(processedSolutionString, this.targetSystem.radix);\n\n    this.correct = solution === this.toConvertInput.decimalNumber;\n  }\n\n  @HostListener('document:keypress', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      if (this.correct) {\n        this.update();\n      } else {\n        this.checkSolution();\n      }\n    }\n  }\n\n}\n","<div class=\"columns\">\n  <div class=\"column is-half-desktop is-offset-one-quarter-desktop\">\n\n    <label class=\"label has-text-centered\" for=\"max\">Maximalwert</label>\n    <div class=\"field has-addons\">\n      <div class=\"control\">\n        <button class=\"button\" (click)=\"doubleMax()\" [disabled]=\"max === maximalMax\">* 2</button>\n      </div>\n      <div class=\"control is-expanded\">\n        <input class=\"input has-text-centered\" type=\"number\" id=\"max\" value=\"{{max}}\">\n      </div>\n      <div class=\"control\">\n        <button class=\"button\" (click)=\"halveMax()\" [disabled]=\"max === minimalMax\">/ 2</button>\n      </div>\n    </div>\n\n    <div class=\"columns\">\n      <div class=\"column is-half-desktop\">\n        <div class=\"field\">\n          <label for=\"startSystem\" class=\"label has-text-centered\">Startsystem</label>\n          <div class=\"control\">\n            <div class=\"select is-fullwidth\">\n              <select [(ngModel)]=\"startSystem\" (change)=\"update()\" id=\"startSystem\">\n                <option *ngFor=\"let ns of numberingSystems\" [ngValue]=\"ns\">{{ns.radix}} - {{ns.name}}</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"column is-half-desktop\">\n        <div class=\"field\">\n          <label for=\"targetSystem\" class=\"label has-text-centered\">Zielsystem</label>\n          <div class=\"control\">\n            <div class=\"select is-fullwidth\">\n              <select [(ngModel)]=\"targetSystem\" (change)=\"update()\" id=\"targetSystem\">\n                <option *ngFor=\"let ns of numberingSystems\" [ngValue]=\"ns\">{{ns.radix}} - {{ns.name}}</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n    <hr>\n\n    <it4all-nary-number-read-only-input [naryNumberInput]=\"toConvertInput\"></it4all-nary-number-read-only-input>\n\n    <hr>\n\n    <div class=\"field\">\n      <div class=\"field has-addons\">\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <label for=\"solution\">Lösung:</label>\n          </div>\n        </div>\n        <div class=\"control is-expanded\">\n          <input type=\"text\" class=\"input has-text-right\" id=\"solution\" [(ngModel)]=\"solutionString\"\n                 [ngClass]=\"{'is-success': checked && correct, 'is-danger': checked && !correct}\"\n                 placeholder=\"Lösung\" autofocus>\n        </div>\n        <div class=\"control\">\n          <div class=\"button is-static\">\n            <sub>{{targetSystem.radix}}</sub>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"notification has-text-centered is-danger\" *ngIf=\"checked && !correct\">\n      &#10008; Die Lösung ist nicht korrekt.\n    </div>\n    <div class=\"notification has-text-centered is-success\" *ngIf=\"checked && correct\">\n      &#10004; Die Lösung ist korrekt.\n    </div>\n\n    <br>\n\n    <it4all-random-solve-buttons\n      (correctEmitter)=\"checkSolution()\"\n      (nextEmitter)=\"update()\">\n    </it4all-random-solve-buttons>\n\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\n\n@Component({\n  selector: 'it4all-points-notification',\n  template: `\n    <div class=\"notification is-light-grey {{textColor}}\">\n      <p class=\"has-text-centered\">\n        <span i18n>Sie haben {{points}} von maximal {{maxPoints}} Punkten erreicht</span>.\n      </p>\n\n      <br>\n\n      <progress class=\"progress\" value=\"{{percentage}}\" max=\"100\">{{percentage}}%</progress>\n    </div>`,\n})\nexport class PointsNotificationComponent implements OnInit, OnChanges {\n\n  @Input() points: number;\n  @Input() maxPoints: number;\n\n  percentage: number;\n\n  textColor = 'has-text-danger';\n  backgroundColor = 'is-danger';\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.updatePercentage();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updatePercentage();\n  }\n\n  updatePercentage(): void {\n    if (isNaN(this.points) || isNaN(this.maxPoints)) {\n      this.percentage = 0;\n    } else {\n      this.percentage = this.points / this.maxPoints * 100;\n\n      if (this.percentage >= 90) {\n        this.textColor = 'has-text-dark-success';\n      } else if (this.percentage >= 75) {\n        this.textColor = 'has-text-warning';\n      } else {\n        this.textColor = 'has-text-danger';\n      }\n    }\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Component({template: ''})\nexport class LtiComponent {\n\n  // TODO: eventually render template?\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    const uuid: string = this.route.snapshot.paramMap.get('uuid');\n\n    this.authenticationService.claimJsonWebToken(uuid)\n      .subscribe(() => this.router.navigate(['/']));\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {\n  ExerciseSolveFieldsFragment,\n  UmlExerciseContentFragment,\n  UmlExPart\n} from '../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-uml-exercise',\n  template: `\n    <it4all-uml-class-selection\n      *ngIf=\"isClassSelection()\"\n      [exerciseFragment]=\"exerciseFragment\"\n      [exerciseContent]=\"contentFragment\">\n    </it4all-uml-class-selection>\n\n    <it4all-uml-diagram-drawing\n      *ngIf=\"isDiagramDrawing()\"\n      [exerciseFragment]=\"exerciseFragment\"\n      [contentFragment]=\"contentFragment\">\n    </it4all-uml-diagram-drawing>\n\n    <it4all-uml-member-allocation\n      *ngIf=\"isMemberAllocation()\"\n      [exerciseFragment]=\"exerciseFragment\"\n      [contentFragment]=\"contentFragment\">\n    </it4all-uml-member-allocation>\n  `\n})\nexport class UmlExerciseComponent {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: UmlExerciseContentFragment;\n\n  isClassSelection(): boolean {\n    return this.contentFragment.umlPart === UmlExPart.ClassSelection;\n  }\n\n  isDiagramDrawing(): boolean {\n    return [UmlExPart.DiagramDrawingHelp, UmlExPart.DiagramDrawing].includes(this.contentFragment.umlPart);\n  }\n\n  isMemberAllocation(): boolean {\n    return this.contentFragment.umlPart === UmlExPart.MemberAllocation;\n  }\n\n}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {\n  ExerciseFileFragment,\n  ExerciseSolveFieldsFragment,\n  FilesSolution,\n  FilesSolutionInput,\n  WebCorrectionGQL,\n  WebCorrectionMutation,\n  WebCorrectionMutationVariables,\n  WebCorrectionResultFragment,\n  WebExerciseContentFragment,\n  WebExPart,\n  WebResultFragment\n} from '../../../../_services/apollo_services';\nimport {FilesExerciseComponent} from \"../../_components/files-exercise/files-exercise.component\";\n\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport {DexieService} from \"../../../../_services/dexie.service\";\n\nexport function getIdForWebExPart(webExPart: WebExPart): string {\n  switch (webExPart) {\n    case WebExPart.HtmlPart:\n      return 'html';\n    case WebExPart.JsPart:\n      return 'js';\n    default:\n      throw Error('TODO!');\n  }\n}\n\n@Component({\n  selector: 'it4all-web-exercise',\n  templateUrl: './web-exercise.component.html'\n})\nexport class WebExerciseComponent\n  extends ComponentWithExerciseDirective<FilesSolutionInput, WebCorrectionMutation, WebCorrectionMutationVariables>\n  implements OnInit {\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: WebExerciseContentFragment;\n\n  @ViewChild(FilesExerciseComponent) filesExerciseComponent: FilesExerciseComponent;\n\n  partId: string;\n\n  exerciseFiles: ExerciseFileFragment[] = [];\n\n  constructor(webCorrectionGQL: WebCorrectionGQL, dexieService: DexieService) {\n    super(webCorrectionGQL, dexieService);\n  }\n\n  ngOnInit(): void {\n    this.partId = getIdForWebExPart(this.contentFragment.webPart);\n\n    this.exerciseFiles = this.contentFragment.files;\n\n    this.loadOldSolutionAbstract(\n      this.exerciseFragment,\n      this.partId,\n      (oldSolution) => this.exerciseFiles = oldSolution.files\n    );\n  }\n\n  // Sample solutions\n\n  get sampleSolutions(): FilesSolution[] {\n    return this.contentFragment.webSampleSolutions;\n  }\n\n  // Correction\n\n  protected getSolution(): FilesSolutionInput {\n    return {files: this.exerciseFiles};\n  }\n\n  protected getMutationQueryVariables(): WebCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: this.contentFragment.webPart,\n    };\n  }\n\n  correct(): void {\n    this.correctAbstract(this.exerciseFragment, this.partId, () => {\n      if (this.filesExerciseComponent) {\n        this.filesExerciseComponent.toggleCorrectionTab();\n      }\n    });\n  };\n\n  // Results\n\n  get correctionResult(): WebCorrectionResultFragment | null {\n    return this.resultQuery?.me.webExercise?.correct;\n  }\n\n  get result(): WebResultFragment | null {\n    return this.correctionResult?.result;\n  }\n\n}\n","<it4all-files-exercise\n  *ngIf=\"exerciseFragment && contentFragment\"\n  [exerciseFiles]=\"exerciseFiles\"\n  [isCorrecting]=\"isCorrecting\"\n  [sampleSolutions]=\"sampleSolutions\"\n  (correct)=\"correct()\"\n  defaultMode=\"htmlmixed\">\n\n  <div exText class=\"content\">\n    <p>{{exerciseFragment.text}}</p>\n    <ol *ngIf=\"partId === 'html'\">\n      <li *ngFor=\"let task of contentFragment.siteSpec.htmlTasks\">\n        {{task.text}}\n      </li>\n    </ol>\n    <p *ngIf=\"partId === 'js'\">\n      Es gibt insgesamt {{contentFragment.siteSpec.jsTaskCount}} Testfälle.\n    </p>\n  </div>\n\n\n  <ng-container correctionContent>\n\n    <div class=\"message is-danger\" *ngIf=\"queryError\">\n      <div class=\"message-header\">Es gab einen Fehler bei der Korrektur:</div>\n      <div class=\"message-body\">\n        <pre>{{queryError.message}}</pre>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"correctionResult\">\n\n      <div class=\"my-3\">\n        <it4all-solution-saved [solutionSaved]=\"correctionResult.solutionSaved\"></it4all-solution-saved>\n      </div>\n\n      <div class=\"my-3\">\n        <it4all-points-notification [points]=\"result.points\" [maxPoints]=\"result.maxPoints\">\n        </it4all-points-notification>\n      </div>\n\n      <div class=\"content my-3\">\n        <ul *ngIf=\"result.gradedHtmlTaskResults.length > 0\">\n          <li *ngFor=\"let htmlResult of result.gradedHtmlTaskResults\">\n            <it4all-html-task-result [htmlResult]=\"htmlResult\"></it4all-html-task-result>\n          </li>\n\n          <li *ngFor=\"let jsResult of result.gradedJsTaskResults\">\n          <span [ngClass]=\"jsResult.success === 'COMPLETE' ? 'has-text-success' : 'has-text-danger'\">\n           ({{jsResult.points}} / {{jsResult.maxPoints}})\n            Test {{jsResult.id}} ist {{jsResult.success === 'COMPLETE' ? '' : 'nicht'}} korrekt:\n          </span>\n\n            {{jsResult | json}}\n          </li>\n        </ul>\n      </div>\n    </ng-container>\n\n  </ng-container>\n\n</it4all-files-exercise>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'it4all-string-sample-sol',\n  template: `\n    <div class=\"notification is-light-grey\">\n      <pre>{{sample}}</pre>\n    </div>`\n})\nexport class StringSampleSolComponent {\n\n  @Input() sample: string;\n\n}\n","import {LessonMultipleChoiceQuestionContentFragment, LessonTextContentFragment} from '../../../_services/apollo_services';\n\nexport type LessonContentFragmentTypes = LessonTextContentFragment | LessonMultipleChoiceQuestionContentFragment;\n\nexport function isSolvableLessonTextContentFragment(\n  lessonContentFragment: LessonContentFragmentTypes\n): lessonContentFragment is LessonTextContentFragment {\n  return lessonContentFragment.__typename === 'LessonTextContent';\n}\n\nexport function isSolvableLessonMultipleChoiceQuestionContentFragment(\n  lessonContentFragment: LessonContentFragmentTypes\n): lessonContentFragment is LessonMultipleChoiceQuestionContentFragment {\n  return lessonContentFragment.__typename === 'LessonMultipleChoiceQuestionsContent';\n}\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {\n  MatchType,\n  RegexExtractionMatchFragment,\n  RegexExtractionSingleResultFragment\n} from \"../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-regex-extraction-result',\n  template: `\n    <div class=\"notification\">\n      <p class=\"has-text-centered\">Suche in: <code>{{extractionResult.base}}</code></p>\n\n      <div class=\"columns is-multiline my-3\">\n        <div class=\"column is-half-desktop\" *ngFor=\"let m of extractionResult.extractionMatchingResult.allMatches\">\n\n          <div class=\"notification\" [ngClass]=\"isCorrect(m) ? 'is-success' : 'is-danger'\">\n            {{isCorrect(m) ? '&#10004;' : '&#10008;'}} Erwartet: <code>{{m.sampleArg}}</code>, bekommen:\n            <code>{{m.userArg}}</code>\n          </div>\n\n        </div>\n\n        <div class=\"column is-half-desktop\"\n             *ngFor=\"let mu of extractionResult.extractionMatchingResult.notMatchedForUser\">\n          <div class=\"notification is-danger\">\n            <code>{{mu}}</code> sollte nicht gefunden werden!\n          </div>\n        </div>\n\n        <div class=\"column is-half-desktop\"\n             *ngFor=\"let ms of extractionResult.extractionMatchingResult.notMatchedForSample\">\n          <div class=\"notification is-danger\">\n            <code>{{ms}}</code> sollte gefunden werden!\n          </div>\n        </div>\n      </div>\n    </div>`\n})\nexport class RegexExtractionResultComponent implements OnInit {\n\n  @Input() extractionResult: RegexExtractionSingleResultFragment;\n\n  isCorrect(m: RegexExtractionMatchFragment): boolean {\n    return m.matchType === MatchType.SuccessfulMatch;\n  }\n\n  ngOnInit() {\n    console.info(JSON.stringify(this.extractionResult));\n  }\n\n}\n","import * as joint from 'jointjs';\nimport {GRID_SIZE} from './uml-consts';\nimport {MyJointClass, STD_CLASS_HEIGHT, STD_CLASS_WIDTH} from './joint-class-diag-elements';\nimport {UmlAttributeInput, UmlMethodInput} from \"../../../../_services/apollo_services\";\n\nfunction findFreePositionForNextClass(paper: joint.dia.Paper): joint.dia.Point {\n\n  const maxRows = Math.floor((paper.getArea().height - GRID_SIZE) / (STD_CLASS_HEIGHT + GRID_SIZE));\n  const maxCols = Math.floor((paper.getArea().width - GRID_SIZE) / (STD_CLASS_WIDTH + GRID_SIZE));\n\n  for (let row = 0; row < maxRows; row++) {\n    for (let col = 0; col < maxCols; col++) {\n      const x = GRID_SIZE + col * (STD_CLASS_WIDTH + GRID_SIZE);\n      const y = GRID_SIZE + row * (STD_CLASS_HEIGHT + GRID_SIZE);\n\n      const viewIsBlocked = paper.findViewsInArea({x, y, width: STD_CLASS_WIDTH, height: STD_CLASS_HEIGHT}).length > 0;\n\n      if (!viewIsBlocked) {\n        return {x, y};\n      }\n    }\n  }\n\n  return {x: GRID_SIZE, y: GRID_SIZE};\n}\n\nexport function addClassToGraph(\n  name: string,\n  paper: joint.dia.Paper,\n  attributes: UmlAttributeInput[] = [],\n  methods: UmlMethodInput[] = [],\n  maybePosition?: joint.dia.Point,\n): void {\n  if (paper.model.getCells().find((c) => c instanceof MyJointClass && c.getClassName() === name)) {\n    // graph already contains class with that name!\n    return;\n  }\n\n  paper.model.addCell(\n    new MyJointClass({\n      className: name,\n      size: {width: STD_CLASS_WIDTH, height: STD_CLASS_HEIGHT},\n      position: maybePosition || findFreePositionForNextClass(paper),\n      attributes, methods\n    })\n  );\n}\n\nexport function addImplementationToGraph(subClass: MyJointClass, superClass: MyJointClass, graph: joint.dia.Graph): void {\n  graph.addCell(\n    new joint.shapes.uml.Implementation({\n      source: {id: subClass.id},\n      target: {id: superClass.id}\n    })\n  );\n}\n\nexport function addAssociationToGraph(\n  firstEnd: MyJointClass, firstMult: string,\n  secondEnd: MyJointClass, secondMult: string,\n  graph: joint.dia.Graph\n): void {\n  const config = {\n    source: {id: firstEnd.id},\n    target: {id: secondEnd.id},\n    labels: [\n      {position: 25, attrs: {text: {text: firstMult}}},\n      {position: -25, attrs: {text: {text: secondMult}}}\n    ]\n  };\n\n  graph.addCell(new joint.shapes.uml.Association(config));\n}\n","import {Component, Input} from '@angular/core';\nimport {UnitTestCorrectionResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-programming-unit-test-result',\n  template: `\n    <li>\n      <p [ngClass]=\"unitTestResult.successful ? 'has-text-success' : 'has-text-danger'\">\n        Der {{unitTestResult.testId}}. Test war {{unitTestResult.successful ? '' : 'nicht'}} erfolgreich.\n        Der Test sollte {{unitTestResult.shouldFail ? '' : 'nicht'}} fehlschlagen.\n      </p>\n      <ng-container *ngIf=\"!unitTestResult.successful\">\n        <p>Beschreibung: {{unitTestResult.description}}</p>\n        <pre>{{stderr}}</pre>\n      </ng-container>\n    </li>\n  `,\n})\nexport class ProgrammingUnitTestResultComponent {\n\n  @Input() unitTestResult: UnitTestCorrectionResultFragment;\n\n  get stderr() {\n    return this.unitTestResult.stderr.join('\\n');\n  }\n\n}\n","import {Component, Input} from '@angular/core';\n\nexport interface BreadCrumbPart {\n  routerLinkPart: string;\n  title: string;\n}\n\ninterface BreadCrumb {\n  routerLink: string;\n  title: string;\n}\n\n@Component({\n  selector: 'it4all-breadcrumbs',\n  template: `\n    <nav class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n      <ul>\n        <li *ngFor=\"let part of breadCrumbs; let last = last\" [class.is-active]=\"last\">\n          <a routerLink=\"{{part.routerLink}}\">{{part.title}}</a>\n        </li>\n      </ul>\n    </nav>\n  `\n})\nexport class BreadcrumbsComponent {\n\n  @Input() parts: BreadCrumbPart[];\n\n  get breadCrumbs(): BreadCrumb[] {\n    let partAggregator: string[] = [];\n\n    return this.parts.map(({routerLinkPart, title}) => {\n      partAggregator.push(routerLinkPart);\n\n      return {routerLink: partAggregator.join('/'), title};\n    });\n  }\n\n}\n","export interface NumberingSystem {\n  radix: number;\n  name: string;\n  allowedDigits: string;\n}\n\nexport const BINARY_SYSTEM: NumberingSystem = {radix: 2, name: 'Binärsystem', allowedDigits: '01'};\n\nexport const DECIMAL_SYSTEM: NumberingSystem = {radix: 10, name: 'Dezimalsystem', allowedDigits: '0123456789'};\n\nexport const HEXADECIMAL_SYSTEM: NumberingSystem = {\n  radix: 16,\n  name: 'Hexadezimalsystem',\n  allowedDigits: '0123456789ABCDEF'\n};\n\nexport const NUMBERING_SYSTEMS: NumberingSystem[] = [\n  BINARY_SYSTEM,\n  {radix: 4, name: 'Quaternärsystem', allowedDigits: '0123'},\n  {radix: 8, name: 'Oktalsystem', allowedDigits: '01234567'},\n  HEXADECIMAL_SYSTEM\n];\n\nexport interface NaryReadOnlyNumberInput {\n  decimalNumber: number;\n  numberingSystem: NumberingSystem;\n  fieldId: string;\n  labelContent: string;\n  maxValueForDigits: number;\n}\n\nexport abstract class NaryComponentBase {\n\n  readonly minimalMax = 16;\n  readonly maximalMax = Math.pow(2, 32);\n\n  max: number;\n\n  protected constructor(defaultMax: number = 256) {\n    this.max = defaultMax;\n  }\n\n  abstract update(): void;\n\n  halveMax(): void {\n    this.max = Math.max(this.minimalMax, this.max / 2);\n    this.update();\n  }\n\n  doubleMax(): void {\n    this.max = Math.min(this.maximalMax, this.max * 2);\n    this.update();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {AuthenticationService} from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthenticationService) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError((err) => {\n      if (err.status === 401) {\n        this.authenticationService.logout();\n      }\n\n      const error = err.error.message || err.statusTest;\n      return throwError(error);\n    }));\n  }\n\n}\n","import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1. */\n  Long: any;\n};\n\n\n\nexport type AbstractCorrectionResult = {\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type AdditionalComparison = {\n  __typename?: 'AdditionalComparison';\n  selectComparisons?: Maybe<SelectAdditionalComparisons>;\n  insertComparison?: Maybe<StringMatchingResult>;\n};\n\nexport type AttributeList = {\n  __typename?: 'AttributeList';\n  elementName: Scalars['String'];\n  attributeDefinitions: Array<Scalars['String']>;\n};\n\nexport enum BinaryClassificationResultType {\n  TruePositive = 'TruePositive',\n  FalsePositive = 'FalsePositive',\n  FalseNegative = 'FalseNegative',\n  TrueNegative = 'TrueNegative'\n}\n\nexport type DtdParseException = {\n  __typename?: 'DTDParseException';\n  msg: Scalars['String'];\n  parsedLine: Scalars['String'];\n};\n\nexport type EbnfCorrectionResult = {\n  __typename?: 'EbnfCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: EbnfResult;\n};\n\nexport enum EbnfExPart {\n  GrammarCreation = 'GrammarCreation'\n}\n\nexport type EbnfExerciseMutations = {\n  __typename?: 'EbnfExerciseMutations';\n  correct: EbnfCorrectionResult;\n};\n\n\nexport type EbnfExerciseMutationsCorrectArgs = {\n  part: EbnfExPart;\n  solution: EbnfGrammarInput;\n};\n\nexport type EbnfGrammarInput = {\n  startSymbol: Scalars['String'];\n};\n\nexport type EbnfResult = {\n  __typename?: 'EbnfResult';\n  x: Scalars['String'];\n};\n\nexport type ElementDefinition = {\n  __typename?: 'ElementDefinition';\n  elementName: Scalars['String'];\n  content: Scalars['String'];\n};\n\nexport type ElementLine = {\n  __typename?: 'ElementLine';\n  elementName: Scalars['String'];\n  elementDefinition: ElementDefinition;\n  attributeLists: Array<AttributeList>;\n};\n\nexport type ElementLineAnalysisResult = {\n  __typename?: 'ElementLineAnalysisResult';\n  contentCorrect: Scalars['Boolean'];\n  correctContent: Scalars['String'];\n  attributesCorrect: Scalars['Boolean'];\n  correctAttributes: Scalars['String'];\n};\n\nexport type ElementLineMatch = NewMatch & {\n  __typename?: 'ElementLineMatch';\n  matchType: MatchType;\n  userArg: ElementLine;\n  sampleArg: ElementLine;\n  analysisResult: ElementLineAnalysisResult;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type ExerciseFileInput = {\n  name: Scalars['String'];\n  fileType: Scalars['String'];\n  content: Scalars['String'];\n  editable: Scalars['Boolean'];\n};\n\nexport type FilesSolutionInput = {\n  files: Array<ExerciseFileInput>;\n};\n\nexport type FlaskCorrectionResult = {\n  __typename?: 'FlaskCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: FlaskResult;\n};\n\nexport type FlaskExerciseMutations = {\n  __typename?: 'FlaskExerciseMutations';\n  correct: FlaskCorrectionResult;\n};\n\n\nexport type FlaskExerciseMutationsCorrectArgs = {\n  part: FlaskExercisePart;\n  solution: FilesSolutionInput;\n};\n\nexport enum FlaskExercisePart {\n  FlaskSingleExPart = 'FlaskSingleExPart'\n}\n\nexport type FlaskResult = {\n  __typename?: 'FlaskResult';\n  testResults: Array<FlaskTestResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type FlaskTestResult = {\n  __typename?: 'FlaskTestResult';\n  testId: Scalars['Int'];\n  testName: Scalars['String'];\n  successful: Scalars['Boolean'];\n  stdout: Array<Scalars['String']>;\n  stderr: Array<Scalars['String']>;\n};\n\nexport type GradedHtmlTaskResult = {\n  __typename?: 'GradedHtmlTaskResult';\n  id: Scalars['Int'];\n  success: SuccessType;\n  elementFound: Scalars['Boolean'];\n  textContentResult?: Maybe<GradedTextResult>;\n  attributeResults: Array<GradedTextResult>;\n  isSuccessful: Scalars['Boolean'];\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type GradedJsActionResult = {\n  __typename?: 'GradedJsActionResult';\n  actionPerformed: Scalars['Boolean'];\n  jsAction: JsAction;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type GradedJsHtmlElementSpecResult = {\n  __typename?: 'GradedJsHtmlElementSpecResult';\n  id: Scalars['Int'];\n  success: SuccessType;\n  elementFound: Scalars['Boolean'];\n  textContentResult?: Maybe<GradedTextResult>;\n  attributeResults: Array<GradedTextResult>;\n  isSuccessful: Scalars['Boolean'];\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type GradedJsTaskResult = {\n  __typename?: 'GradedJsTaskResult';\n  id: Scalars['Int'];\n  gradedPreResults: Array<GradedJsHtmlElementSpecResult>;\n  gradedPostResults: Array<GradedJsHtmlElementSpecResult>;\n  success: SuccessType;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  gradedJsActionResult: GradedJsActionResult;\n};\n\nexport type GradedTextResult = {\n  __typename?: 'GradedTextResult';\n  keyName: Scalars['String'];\n  awaitedContent: Scalars['String'];\n  maybeFoundContent?: Maybe<Scalars['String']>;\n  isSuccessful: Scalars['Boolean'];\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type ImplementationCorrectionResult = ProgrammingTestCorrectionResult & {\n  __typename?: 'ImplementationCorrectionResult';\n  testSuccessful: Scalars['Boolean'];\n  stdout: Array<Scalars['String']>;\n  stderr: Array<Scalars['String']>;\n  successful: Scalars['Boolean'];\n};\n\nexport type JsAction = {\n  __typename?: 'JsAction';\n  xpathQuery: Scalars['String'];\n  actionType: JsActionType;\n  keysToSend?: Maybe<Scalars['String']>;\n};\n\nexport enum JsActionType {\n  Click = 'Click',\n  FillOut = 'FillOut'\n}\n\nexport type LoggedInUser = {\n  __typename?: 'LoggedInUser';\n  username: Scalars['String'];\n  isAdmin: Scalars['Boolean'];\n};\n\nexport type LoggedInUserWithToken = {\n  __typename?: 'LoggedInUserWithToken';\n  loggedInUser: LoggedInUser;\n  jwt: Scalars['String'];\n};\n\nexport enum MatchType {\n  SuccessfulMatch = 'SUCCESSFUL_MATCH',\n  PartialMatch = 'PARTIAL_MATCH',\n  UnsuccessfulMatch = 'UNSUCCESSFUL_MATCH'\n}\n\nexport type MatchingResult = {\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  allMatches: Array<NewMatch>;\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  register?: Maybe<Scalars['String']>;\n  login?: Maybe<LoggedInUserWithToken>;\n  me?: Maybe<UserMutations>;\n};\n\n\nexport type MutationRegisterArgs = {\n  registerValues: RegisterValues;\n};\n\n\nexport type MutationLoginArgs = {\n  credentials: UserCredentials;\n};\n\nexport type NewMatch = {\n  matchType: MatchType;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type ProgrammingCorrectionResult = {\n  __typename?: 'ProgrammingCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: ProgrammingResult;\n};\n\nexport type ProgrammingExerciseMutations = {\n  __typename?: 'ProgrammingExerciseMutations';\n  correct: ProgrammingCorrectionResult;\n};\n\n\nexport type ProgrammingExerciseMutationsCorrectArgs = {\n  part: ProgExPart;\n  solution: FilesSolutionInput;\n};\n\nexport type ProgrammingResult = {\n  __typename?: 'ProgrammingResult';\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  implementationCorrectionResult?: Maybe<ImplementationCorrectionResult>;\n  unitTestResults: Array<UnitTestCorrectionResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type ProgrammingTestCorrectionResult = {\n  successful: Scalars['Boolean'];\n};\n\nexport type RegexAbstractResult = {\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type RegexCorrectionResult = {\n  __typename?: 'RegexCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: RegexAbstractResult;\n};\n\nexport type RegexExerciseMutations = {\n  __typename?: 'RegexExerciseMutations';\n  correct: RegexCorrectionResult;\n};\n\n\nexport type RegexExerciseMutationsCorrectArgs = {\n  part: RegexExPart;\n  solution: Scalars['String'];\n};\n\nexport type RegexExtractedValuesComparisonMatchingResult = MatchingResult & {\n  __typename?: 'RegexExtractedValuesComparisonMatchingResult';\n  allMatches: Array<RegexMatchMatch>;\n  notMatchedForUser: Array<Scalars['String']>;\n  notMatchedForSample: Array<Scalars['String']>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type RegexExtractionResult = RegexAbstractResult & AbstractCorrectionResult & {\n  __typename?: 'RegexExtractionResult';\n  extractionResults: Array<RegexExtractionSingleResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type RegexExtractionSingleResult = {\n  __typename?: 'RegexExtractionSingleResult';\n  base: Scalars['String'];\n  extractionMatchingResult: RegexExtractedValuesComparisonMatchingResult;\n  correct: Scalars['Boolean'];\n};\n\nexport type RegexMatchMatch = NewMatch & {\n  __typename?: 'RegexMatchMatch';\n  sampleArg?: Maybe<Scalars['String']>;\n  userArg?: Maybe<Scalars['String']>;\n  matchType: MatchType;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type RegexMatchingResult = RegexAbstractResult & AbstractCorrectionResult & {\n  __typename?: 'RegexMatchingResult';\n  matchingResults: Array<RegexMatchingSingleResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type RegexMatchingSingleResult = {\n  __typename?: 'RegexMatchingSingleResult';\n  matchData: Scalars['String'];\n  isIncluded: Scalars['Boolean'];\n  resultType: BinaryClassificationResultType;\n};\n\nexport type RegisterValues = {\n  username: Scalars['String'];\n  firstPassword: Scalars['String'];\n  secondPassword: Scalars['String'];\n};\n\nexport type SelectAdditionalComparisons = {\n  __typename?: 'SelectAdditionalComparisons';\n  groupByComparison: StringMatchingResult;\n  orderByComparison: StringMatchingResult;\n  limitComparison: SqlLimitComparisonMatchingResult;\n};\n\nexport type SqlBinaryExpressionComparisonMatchingResult = MatchingResult & {\n  __typename?: 'SqlBinaryExpressionComparisonMatchingResult';\n  allMatches: Array<SqlBinaryExpressionMatch>;\n  notMatchedForUser: Array<Scalars['String']>;\n  notMatchedForSample: Array<Scalars['String']>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type SqlBinaryExpressionMatch = NewMatch & {\n  __typename?: 'SqlBinaryExpressionMatch';\n  sampleArg?: Maybe<Scalars['String']>;\n  userArg?: Maybe<Scalars['String']>;\n  matchType: MatchType;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type SqlColumnComparisonMatchingResult = MatchingResult & {\n  __typename?: 'SqlColumnComparisonMatchingResult';\n  allMatches: Array<SqlColumnMatch>;\n  notMatchedForUser: Array<Scalars['String']>;\n  notMatchedForSample: Array<Scalars['String']>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type SqlColumnMatch = NewMatch & {\n  __typename?: 'SqlColumnMatch';\n  sampleArg?: Maybe<Scalars['String']>;\n  userArg?: Maybe<Scalars['String']>;\n  matchType: MatchType;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type SqlCorrectionResult = {\n  __typename?: 'SqlCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: SqlResult;\n};\n\nexport type SqlExecutionResult = {\n  __typename?: 'SqlExecutionResult';\n  userResult?: Maybe<SqlQueryResult>;\n  sampleResult?: Maybe<SqlQueryResult>;\n};\n\nexport type SqlExerciseMutations = {\n  __typename?: 'SqlExerciseMutations';\n  correct: SqlCorrectionResult;\n};\n\n\nexport type SqlExerciseMutationsCorrectArgs = {\n  part: SqlExPart;\n  solution: Scalars['String'];\n};\n\nexport type SqlLimitComparisonMatchingResult = MatchingResult & {\n  __typename?: 'SqlLimitComparisonMatchingResult';\n  allMatches: Array<SqlLimitMatch>;\n  notMatchedForUser: Array<Scalars['String']>;\n  notMatchedForSample: Array<Scalars['String']>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type SqlLimitMatch = NewMatch & {\n  __typename?: 'SqlLimitMatch';\n  sampleArg?: Maybe<Scalars['String']>;\n  userArg?: Maybe<Scalars['String']>;\n  matchType: MatchType;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type SqlQueriesStaticComparison = {\n  __typename?: 'SqlQueriesStaticComparison';\n  columnComparison: SqlColumnComparisonMatchingResult;\n  tableComparison: StringMatchingResult;\n  joinExpressionComparison: SqlBinaryExpressionComparisonMatchingResult;\n  whereComparison: SqlBinaryExpressionComparisonMatchingResult;\n  additionalComparisons: AdditionalComparison;\n};\n\nexport type SqlResult = {\n  __typename?: 'SqlResult';\n  staticComparison: SqlQueriesStaticComparison;\n  executionResult: SqlExecutionResult;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type StringMatch = {\n  __typename?: 'StringMatch';\n  matchType: MatchType;\n  userArg: Scalars['String'];\n  sampleArg: Scalars['String'];\n};\n\nexport type StringMatchingResult = {\n  __typename?: 'StringMatchingResult';\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  allMatches: Array<StringMatch>;\n  notMatchedForUser: Array<Scalars['String']>;\n  notMatchedForSample: Array<Scalars['String']>;\n};\n\nexport enum SuccessType {\n  Error = 'ERROR',\n  None = 'NONE',\n  Partially = 'PARTIALLY',\n  Complete = 'COMPLETE'\n}\n\nexport type UmlAssociationAnalysisResult = {\n  __typename?: 'UmlAssociationAnalysisResult';\n  endsParallel: Scalars['Boolean'];\n  assocTypeEqual: Scalars['Boolean'];\n  correctAssocType: UmlAssociationType;\n  multiplicitiesEqual: Scalars['Boolean'];\n};\n\nexport type UmlAssociationInput = {\n  assocType?: Maybe<UmlAssociationType>;\n  assocName?: Maybe<Scalars['String']>;\n  firstEnd: Scalars['String'];\n  firstMult: UmlMultiplicity;\n  secondEnd: Scalars['String'];\n  secondMult: UmlMultiplicity;\n};\n\nexport type UmlAssociationMatch = NewMatch & {\n  __typename?: 'UmlAssociationMatch';\n  matchType: MatchType;\n  userArg: UmlAssociation;\n  sampleArg: UmlAssociation;\n  analysisResult: UmlAssociationAnalysisResult;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type UmlAssociationMatchingResult = MatchingResult & {\n  __typename?: 'UmlAssociationMatchingResult';\n  allMatches: Array<UmlAssociationMatch>;\n  notMatchedForUser: Array<UmlAssociation>;\n  notMatchedForSample: Array<UmlAssociation>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type UmlAttributeAnalysisResult = {\n  __typename?: 'UmlAttributeAnalysisResult';\n  visibilityComparison: Scalars['Boolean'];\n  correctVisibility: UmlVisibility;\n  typeComparison: Scalars['Boolean'];\n  correctType: Scalars['String'];\n  staticCorrect: Scalars['Boolean'];\n  correctStatic: Scalars['Boolean'];\n  derivedCorrect: Scalars['Boolean'];\n  correctDerived: Scalars['Boolean'];\n  abstractCorrect: Scalars['Boolean'];\n  correctAbstract: Scalars['Boolean'];\n};\n\nexport type UmlAttributeInput = {\n  visibility?: Maybe<UmlVisibility>;\n  memberName: Scalars['String'];\n  memberType: Scalars['String'];\n  isStatic?: Maybe<Scalars['Boolean']>;\n  isDerived?: Maybe<Scalars['Boolean']>;\n  isAbstract?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UmlAttributeMatch = NewMatch & {\n  __typename?: 'UmlAttributeMatch';\n  matchType: MatchType;\n  userArg: UmlAttribute;\n  sampleArg: UmlAttribute;\n  maybeAnalysisResult: UmlAttributeAnalysisResult;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type UmlAttributeMatchingResult = MatchingResult & {\n  __typename?: 'UmlAttributeMatchingResult';\n  allMatches: Array<UmlAttributeMatch>;\n  notMatchedForUser: Array<UmlAttribute>;\n  notMatchedForSample: Array<UmlAttribute>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type UmlClassDiagramInput = {\n  classes: Array<UmlClassInput>;\n  associations: Array<UmlAssociationInput>;\n  implementations: Array<UmlImplementationInput>;\n};\n\nexport type UmlClassInput = {\n  classType?: Maybe<UmlClassType>;\n  name: Scalars['String'];\n  attributes?: Maybe<Array<UmlAttributeInput>>;\n  methods?: Maybe<Array<UmlMethodInput>>;\n};\n\nexport type UmlClassMatch = NewMatch & {\n  __typename?: 'UmlClassMatch';\n  matchType: MatchType;\n  userArg: UmlClass;\n  sampleArg: UmlClass;\n  compAM: Scalars['Boolean'];\n  analysisResult: UmlClassMatchAnalysisResult;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type UmlClassMatchAnalysisResult = {\n  __typename?: 'UmlClassMatchAnalysisResult';\n  classTypeCorrect: Scalars['Boolean'];\n  correctClassType: UmlClassType;\n  maybeAttributeMatchingResult?: Maybe<UmlAttributeMatchingResult>;\n  maybeMethodMatchingResult?: Maybe<UmlMethodMatchingResult>;\n};\n\nexport type UmlClassMatchingResult = MatchingResult & {\n  __typename?: 'UmlClassMatchingResult';\n  allMatches: Array<UmlClassMatch>;\n  notMatchedForUser: Array<UmlClass>;\n  notMatchedForSample: Array<UmlClass>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type UmlCorrectionResult = {\n  __typename?: 'UmlCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: UmlResult;\n};\n\nexport type UmlExerciseMutations = {\n  __typename?: 'UmlExerciseMutations';\n  correct: UmlCorrectionResult;\n};\n\n\nexport type UmlExerciseMutationsCorrectArgs = {\n  part: UmlExPart;\n  solution: UmlClassDiagramInput;\n};\n\nexport type UmlImplementationInput = {\n  subClass: Scalars['String'];\n  superClass: Scalars['String'];\n};\n\nexport type UmlImplementationMatch = NewMatch & {\n  __typename?: 'UmlImplementationMatch';\n  matchType: MatchType;\n  userArg: UmlImplementation;\n  sampleArg: UmlImplementation;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type UmlImplementationMatchingResult = MatchingResult & {\n  __typename?: 'UmlImplementationMatchingResult';\n  allMatches: Array<UmlImplementationMatch>;\n  notMatchedForUser: Array<UmlImplementation>;\n  notMatchedForSample: Array<UmlImplementation>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type UmlMethodAnalysisResult = {\n  __typename?: 'UmlMethodAnalysisResult';\n  visibilityComparison: Scalars['Boolean'];\n  correctVisibility: UmlVisibility;\n  typeComparison: Scalars['Boolean'];\n  correctType: Scalars['String'];\n  parameterComparison: Scalars['Boolean'];\n  correctParameters: Scalars['String'];\n  staticCorrect: Scalars['Boolean'];\n  correctStatic: Scalars['Boolean'];\n  abstractCorrect: Scalars['Boolean'];\n  correctAbstract: Scalars['Boolean'];\n};\n\nexport type UmlMethodInput = {\n  visibility?: Maybe<UmlVisibility>;\n  memberName: Scalars['String'];\n  memberType: Scalars['String'];\n  parameters: Scalars['String'];\n  isStatic?: Maybe<Scalars['Boolean']>;\n  isAbstract?: Maybe<Scalars['Boolean']>;\n};\n\nexport type UmlMethodMatch = NewMatch & {\n  __typename?: 'UmlMethodMatch';\n  matchType: MatchType;\n  userArg: UmlMethod;\n  sampleArg: UmlMethod;\n  maybeAnalysisResult: UmlMethodAnalysisResult;\n  userArgDescription?: Maybe<Scalars['String']>;\n  sampleArgDescription?: Maybe<Scalars['String']>;\n};\n\nexport type UmlMethodMatchingResult = MatchingResult & {\n  __typename?: 'UmlMethodMatchingResult';\n  allMatches: Array<UmlMethodMatch>;\n  notMatchedForUser: Array<UmlMethod>;\n  notMatchedForSample: Array<UmlMethod>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type UmlResult = {\n  __typename?: 'UmlResult';\n  classResult?: Maybe<UmlClassMatchingResult>;\n  assocResult?: Maybe<UmlAssociationMatchingResult>;\n  implResult?: Maybe<UmlImplementationMatchingResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type UnitTestCorrectionResult = ProgrammingTestCorrectionResult & {\n  __typename?: 'UnitTestCorrectionResult';\n  testId: Scalars['Int'];\n  description: Scalars['String'];\n  shouldFail: Scalars['Boolean'];\n  testSuccessful: Scalars['Boolean'];\n  stdout: Array<Scalars['String']>;\n  stderr: Array<Scalars['String']>;\n  successful: Scalars['Boolean'];\n};\n\nexport type UserCredentials = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UserMutations = {\n  __typename?: 'UserMutations';\n  ebnfExercise?: Maybe<EbnfExerciseMutations>;\n  flaskExercise?: Maybe<FlaskExerciseMutations>;\n  programmingExercise?: Maybe<ProgrammingExerciseMutations>;\n  regexExercise?: Maybe<RegexExerciseMutations>;\n  sqlExercise?: Maybe<SqlExerciseMutations>;\n  umlExercise?: Maybe<UmlExerciseMutations>;\n  webExercise?: Maybe<WebExerciseMutations>;\n  xmlExercise?: Maybe<XmlExerciseMutations>;\n};\n\n\nexport type UserMutationsEbnfExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsFlaskExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsProgrammingExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsRegexExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsSqlExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsUmlExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsWebExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\n\nexport type UserMutationsXmlExerciseArgs = {\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n};\n\nexport type WebCorrectionResult = {\n  __typename?: 'WebCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: WebResult;\n};\n\nexport type WebExerciseMutations = {\n  __typename?: 'WebExerciseMutations';\n  correct: WebCorrectionResult;\n};\n\n\nexport type WebExerciseMutationsCorrectArgs = {\n  part: WebExPart;\n  solution: FilesSolutionInput;\n};\n\nexport type WebResult = {\n  __typename?: 'WebResult';\n  gradedHtmlTaskResults: Array<GradedHtmlTaskResult>;\n  gradedJsTaskResults: Array<GradedJsTaskResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type XmlCorrectionResult = {\n  __typename?: 'XmlCorrectionResult';\n  solutionSaved: Scalars['Boolean'];\n  resultSaved: Scalars['Boolean'];\n  proficienciesUpdated?: Maybe<Scalars['Boolean']>;\n  result: XmlResult;\n};\n\nexport type XmlDocumentResult = {\n  __typename?: 'XmlDocumentResult';\n  errors: Array<XmlError>;\n};\n\nexport type XmlElementLineComparisonMatchingResult = MatchingResult & {\n  __typename?: 'XmlElementLineComparisonMatchingResult';\n  allMatches: Array<ElementLineMatch>;\n  notMatchedForUser: Array<ElementLine>;\n  notMatchedForSample: Array<ElementLine>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n  notMatchedForUserString: Array<Scalars['String']>;\n  notMatchedForSampleString: Array<Scalars['String']>;\n};\n\nexport type XmlError = {\n  __typename?: 'XmlError';\n  errorType: XmlErrorType;\n  errorMessage: Scalars['String'];\n  line: Scalars['Int'];\n  success: SuccessType;\n};\n\nexport enum XmlErrorType {\n  Error = 'ERROR',\n  Fatal = 'FATAL',\n  Warning = 'WARNING'\n}\n\nexport type XmlExerciseMutations = {\n  __typename?: 'XmlExerciseMutations';\n  correct: XmlCorrectionResult;\n};\n\n\nexport type XmlExerciseMutationsCorrectArgs = {\n  part: XmlExPart;\n  solution: XmlSolutionInput;\n};\n\nexport type XmlGrammarResult = {\n  __typename?: 'XmlGrammarResult';\n  parseErrors: Array<DtdParseException>;\n  results: XmlElementLineComparisonMatchingResult;\n};\n\nexport type XmlResult = {\n  __typename?: 'XmlResult';\n  successType: SuccessType;\n  documentResult?: Maybe<XmlDocumentResult>;\n  grammarResult?: Maybe<XmlGrammarResult>;\n  points: Scalars['Float'];\n  maxPoints: Scalars['Float'];\n};\n\nexport type XmlSolutionInput = {\n  document: Scalars['String'];\n  grammar: Scalars['String'];\n};\n\nexport type CollectionTool = {\n  __typename?: 'CollectionTool';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  state: ToolState;\n  lessonCount: Scalars['Long'];\n  lessons: Array<Lesson>;\n  lesson?: Maybe<Lesson>;\n  collectionCount: Scalars['Long'];\n  collections: Array<ExerciseCollection>;\n  collection?: Maybe<ExerciseCollection>;\n  exerciseCount: Scalars['Long'];\n  allExercises: Array<Exercise>;\n  proficiencies: Array<UserProficiency>;\n};\n\n\nexport type CollectionToolLessonArgs = {\n  lessonId: Scalars['Int'];\n};\n\n\nexport type CollectionToolCollectionArgs = {\n  collId: Scalars['Int'];\n};\n\nexport type EbnfExerciseContent = {\n  __typename?: 'EbnfExerciseContent';\n  sampleSolutions: Array<Scalars['String']>;\n};\n\nexport type ExPart = {\n  __typename?: 'ExPart';\n  id: Scalars['String'];\n  name: Scalars['String'];\n  isEntryPart: Scalars['Boolean'];\n  solved: Scalars['Boolean'];\n};\n\nexport type Exercise = {\n  __typename?: 'Exercise';\n  exerciseId: Scalars['Int'];\n  collectionId: Scalars['Int'];\n  toolId: Scalars['String'];\n  title: Scalars['String'];\n  authors: Array<Scalars['String']>;\n  text: Scalars['String'];\n  topicsWithLevels: Array<TopicWithLevel>;\n  difficulty: Scalars['Int'];\n  content: ExerciseContentUnionType;\n  parts: Array<ExPart>;\n};\n\nexport type ExerciseCollection = {\n  __typename?: 'ExerciseCollection';\n  collectionId: Scalars['Int'];\n  title: Scalars['String'];\n  authors: Array<Scalars['String']>;\n  exerciseCount: Scalars['Long'];\n  exercises: Array<Exercise>;\n  exercise?: Maybe<Exercise>;\n};\n\n\nexport type ExerciseCollectionExerciseArgs = {\n  exId: Scalars['Int'];\n};\n\nexport type ExerciseContentUnionType = EbnfExerciseContent | FlaskExerciseContent | ProgrammingExerciseContent | RegexExerciseContent | SqlExerciseContent | UmlExerciseContent | WebExerciseContent | XmlExerciseContent;\n\nexport type ExerciseFile = {\n  __typename?: 'ExerciseFile';\n  name: Scalars['String'];\n  fileType: Scalars['String'];\n  editable: Scalars['Boolean'];\n  content: Scalars['String'];\n};\n\nexport type FilesSolution = {\n  __typename?: 'FilesSolution';\n  files: Array<ExerciseFile>;\n};\n\nexport type FlaskExerciseContent = {\n  __typename?: 'FlaskExerciseContent';\n  files: Array<ExerciseFile>;\n  testFiles: Array<ExerciseFile>;\n  testConfig: FlaskTestsConfig;\n  sampleSolutions: Array<FilesSolution>;\n};\n\nexport type FlaskSingleTestConfig = {\n  __typename?: 'FlaskSingleTestConfig';\n  id: Scalars['Int'];\n  description: Scalars['String'];\n  maxPoints: Scalars['Int'];\n  testName: Scalars['String'];\n  dependencies?: Maybe<Array<Scalars['String']>>;\n};\n\nexport type FlaskTestsConfig = {\n  __typename?: 'FlaskTestsConfig';\n  testFileName: Scalars['String'];\n  testClassName: Scalars['String'];\n  tests: Array<FlaskSingleTestConfig>;\n};\n\nexport type HtmlTask = {\n  __typename?: 'HtmlTask';\n  text: Scalars['String'];\n};\n\nexport type ImplementationPart = {\n  __typename?: 'ImplementationPart';\n  files: Array<ExerciseFile>;\n  implFileName: Scalars['String'];\n};\n\nexport type KeyValueObject = {\n  __typename?: 'KeyValueObject';\n  key: Scalars['String'];\n  value: Scalars['String'];\n};\n\nexport type Lesson = {\n  __typename?: 'Lesson';\n  lessonId: Scalars['Int'];\n  toolId: Scalars['String'];\n  title: Scalars['String'];\n  description: Scalars['String'];\n  video?: Maybe<Scalars['String']>;\n  contentCount: Scalars['Long'];\n  contents: Array<LessonContent>;\n  content?: Maybe<LessonContent>;\n};\n\n\nexport type LessonContentArgs = {\n  lessonId: Scalars['Int'];\n};\n\nexport type LessonContent = {\n  contentId: Scalars['Int'];\n  lessonId: Scalars['Int'];\n  toolId: Scalars['String'];\n};\n\nexport type LessonMultipleChoiceQuestion = {\n  __typename?: 'LessonMultipleChoiceQuestion';\n  id: Scalars['Int'];\n  questionText: Scalars['String'];\n  answers: Array<LessonMultipleChoiceQuestionAnswer>;\n};\n\nexport type LessonMultipleChoiceQuestionAnswer = {\n  __typename?: 'LessonMultipleChoiceQuestionAnswer';\n  id: Scalars['Int'];\n  answer: Scalars['String'];\n  isCorrect: Scalars['Boolean'];\n};\n\nexport type LessonMultipleChoiceQuestionsContent = LessonContent & {\n  __typename?: 'LessonMultipleChoiceQuestionsContent';\n  contentId: Scalars['Int'];\n  lessonId: Scalars['Int'];\n  toolId: Scalars['String'];\n  questions: Array<LessonMultipleChoiceQuestion>;\n};\n\nexport type LessonTextContent = LessonContent & {\n  __typename?: 'LessonTextContent';\n  contentId: Scalars['Int'];\n  lessonId: Scalars['Int'];\n  toolId: Scalars['String'];\n  content: Scalars['String'];\n};\n\nexport type Level = {\n  __typename?: 'Level';\n  title: Scalars['String'];\n  levelIndex: Scalars['Int'];\n};\n\nexport enum ProgExPart {\n  TestCreation = 'TestCreation',\n  Implementation = 'Implementation',\n  ActivityDiagram = 'ActivityDiagram'\n}\n\nexport type ProgrammingExerciseContent = {\n  __typename?: 'ProgrammingExerciseContent';\n  filename: Scalars['String'];\n  unitTestPart: UnitTestPart;\n  implementationPart: ImplementationPart;\n  sampleSolutions: Array<FilesSolution>;\n  part?: Maybe<ProgExPart>;\n};\n\n\nexport type ProgrammingExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  me?: Maybe<User>;\n};\n\nexport enum RegexCorrectionType {\n  Matching = 'MATCHING',\n  Extraction = 'EXTRACTION'\n}\n\nexport enum RegexExPart {\n  RegexSingleExPart = 'RegexSingleExPart'\n}\n\nexport type RegexExerciseContent = {\n  __typename?: 'RegexExerciseContent';\n  maxPoints: Scalars['Int'];\n  correctionType: RegexCorrectionType;\n  matchTestData: Array<RegexMatchTestData>;\n  extractionTestData: Array<RegexExtractionTestData>;\n  sampleSolutions: Array<Scalars['String']>;\n  part?: Maybe<RegexExPart>;\n};\n\n\nexport type RegexExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport type RegexExtractionTestData = {\n  __typename?: 'RegexExtractionTestData';\n  id: Scalars['Int'];\n  base: Scalars['String'];\n};\n\nexport type RegexMatchTestData = {\n  __typename?: 'RegexMatchTestData';\n  id: Scalars['Int'];\n  data: Scalars['String'];\n  isIncluded: Scalars['Boolean'];\n};\n\nexport type SiteSpec = {\n  __typename?: 'SiteSpec';\n  fileName: Scalars['String'];\n  htmlTasks: Array<HtmlTask>;\n  htmlTaskCount: Scalars['Int'];\n  jsTaskCount: Scalars['Int'];\n};\n\nexport type SqlCell = {\n  __typename?: 'SqlCell';\n  colName: Scalars['String'];\n  content?: Maybe<Scalars['String']>;\n  different: Scalars['Boolean'];\n};\n\nexport enum SqlExPart {\n  SqlSingleExPart = 'SqlSingleExPart'\n}\n\nexport type SqlExerciseContent = {\n  __typename?: 'SqlExerciseContent';\n  exerciseType: SqlExerciseType;\n  schemaName: Scalars['String'];\n  sampleSolutions: Array<Scalars['String']>;\n  hint?: Maybe<Scalars['String']>;\n  part?: Maybe<SqlExPart>;\n  sqlDbContents: Array<SqlQueryResult>;\n};\n\n\nexport type SqlExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport enum SqlExerciseType {\n  Insert = 'INSERT',\n  Update = 'UPDATE',\n  Create = 'CREATE',\n  Select = 'SELECT',\n  Delete = 'DELETE'\n}\n\nexport type SqlKeyCellValueObject = {\n  __typename?: 'SqlKeyCellValueObject';\n  key: Scalars['String'];\n  value: SqlCell;\n};\n\nexport type SqlQueryResult = {\n  __typename?: 'SqlQueryResult';\n  columnNames: Array<Scalars['String']>;\n  rows: Array<SqlRow>;\n  tableName: Scalars['String'];\n};\n\nexport type SqlRow = {\n  __typename?: 'SqlRow';\n  cells: Array<SqlKeyCellValueObject>;\n};\n\nexport enum ToolState {\n  PreAlpha = 'PRE_ALPHA',\n  Alpha = 'ALPHA',\n  Beta = 'BETA',\n  Live = 'LIVE'\n}\n\nexport type Topic = {\n  __typename?: 'Topic';\n  abbreviation: Scalars['String'];\n  toolId: Scalars['String'];\n  title: Scalars['String'];\n  maxLevel: Level;\n};\n\nexport type TopicWithLevel = {\n  __typename?: 'TopicWithLevel';\n  topic: Topic;\n  level: Level;\n};\n\nexport type UmlAssociation = {\n  __typename?: 'UmlAssociation';\n  assocType: UmlAssociationType;\n  assocName?: Maybe<Scalars['String']>;\n  firstEnd: Scalars['String'];\n  firstMult: UmlMultiplicity;\n  secondEnd: Scalars['String'];\n  secondMult: UmlMultiplicity;\n};\n\nexport enum UmlAssociationType {\n  Association = 'ASSOCIATION',\n  Aggregation = 'AGGREGATION',\n  Composition = 'COMPOSITION'\n}\n\nexport type UmlAttribute = {\n  __typename?: 'UmlAttribute';\n  visibility: UmlVisibility;\n  memberName: Scalars['String'];\n  memberType: Scalars['String'];\n  isStatic: Scalars['Boolean'];\n  isDerived: Scalars['Boolean'];\n  isAbstract: Scalars['Boolean'];\n};\n\nexport type UmlClass = {\n  __typename?: 'UmlClass';\n  classType: UmlClassType;\n  name: Scalars['String'];\n  attributes: Array<UmlAttribute>;\n  methods: Array<UmlMethod>;\n};\n\nexport type UmlClassDiagram = {\n  __typename?: 'UmlClassDiagram';\n  classes: Array<UmlClass>;\n  associations: Array<UmlAssociation>;\n  implementations: Array<UmlImplementation>;\n};\n\nexport enum UmlClassType {\n  Abstract = 'ABSTRACT',\n  Class = 'CLASS',\n  Interface = 'INTERFACE'\n}\n\nexport enum UmlExPart {\n  ClassSelection = 'ClassSelection',\n  DiagramDrawingHelp = 'DiagramDrawingHelp',\n  DiagramDrawing = 'DiagramDrawing',\n  MemberAllocation = 'MemberAllocation'\n}\n\nexport type UmlExerciseContent = {\n  __typename?: 'UmlExerciseContent';\n  toIgnore: Array<Scalars['String']>;\n  sampleSolutions: Array<UmlClassDiagram>;\n  part?: Maybe<UmlExPart>;\n  mappings: Array<KeyValueObject>;\n};\n\n\nexport type UmlExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport type UmlImplementation = {\n  __typename?: 'UmlImplementation';\n  subClass: Scalars['String'];\n  superClass: Scalars['String'];\n};\n\nexport type UmlMethod = {\n  __typename?: 'UmlMethod';\n  visibility: UmlVisibility;\n  memberName: Scalars['String'];\n  memberType: Scalars['String'];\n  parameters: Scalars['String'];\n  isStatic: Scalars['Boolean'];\n  isAbstract: Scalars['Boolean'];\n};\n\nexport enum UmlMultiplicity {\n  Single = 'SINGLE',\n  Unbound = 'UNBOUND'\n}\n\nexport enum UmlVisibility {\n  Public = 'PUBLIC',\n  Package = 'PACKAGE',\n  Protected = 'PROTECTED',\n  Private = 'PRIVATE'\n}\n\nexport type UnitTestPart = {\n  __typename?: 'UnitTestPart';\n  unitTestsDescription: Scalars['String'];\n  unitTestFiles: Array<ExerciseFile>;\n  unitTestTestConfigs: Array<UnitTestTestConfig>;\n  testFileName: Scalars['String'];\n  folderName: Scalars['String'];\n};\n\nexport type UnitTestTestConfig = {\n  __typename?: 'UnitTestTestConfig';\n  id: Scalars['Int'];\n  description: Scalars['String'];\n  file: ExerciseFile;\n  shouldFail: Scalars['Boolean'];\n};\n\nexport type User = {\n  __typename?: 'User';\n  tools: Array<CollectionTool>;\n  tool?: Maybe<CollectionTool>;\n};\n\n\nexport type UserToolArgs = {\n  toolId: Scalars['String'];\n};\n\nexport type UserProficiency = {\n  __typename?: 'UserProficiency';\n  username: Scalars['String'];\n  topic: Topic;\n  points: Scalars['Int'];\n  pointsForNextLevel: Scalars['Int'];\n  level: Level;\n};\n\nexport enum WebExPart {\n  HtmlPart = 'HtmlPart',\n  JsPart = 'JsPart'\n}\n\nexport type WebExerciseContent = {\n  __typename?: 'WebExerciseContent';\n  siteSpec: SiteSpec;\n  files: Array<ExerciseFile>;\n  sampleSolutions: Array<FilesSolution>;\n  htmlText?: Maybe<Scalars['String']>;\n  jsText?: Maybe<Scalars['String']>;\n  part?: Maybe<WebExPart>;\n};\n\n\nexport type WebExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport enum XmlExPart {\n  GrammarCreationXmlPart = 'GrammarCreationXmlPart',\n  DocumentCreationXmlPart = 'DocumentCreationXmlPart'\n}\n\nexport type XmlExerciseContent = {\n  __typename?: 'XmlExerciseContent';\n  grammarDescription: Scalars['String'];\n  rootNode: Scalars['String'];\n  sampleSolutions: Array<XmlSolution>;\n  part?: Maybe<XmlExPart>;\n};\n\n\nexport type XmlExerciseContentPartArgs = {\n  partId: Scalars['String'];\n};\n\nexport type XmlSolution = {\n  __typename?: 'XmlSolution';\n  document: Scalars['String'];\n  grammar: Scalars['String'];\n};\n\n\nexport type FlaskCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: FlaskExercisePart;\n  solution: FilesSolutionInput;\n}>;\n\n\nexport type FlaskCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { flaskExercise?: Maybe<(\n      { __typename?: 'FlaskExerciseMutations' }\n      & { correct: (\n        { __typename?: 'FlaskCorrectionResult' }\n        & FlaskCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type FlaskCorrectionResultFragment = (\n  { __typename?: 'FlaskCorrectionResult' }\n  & Pick<FlaskCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'FlaskResult' }\n    & FlaskResultFragment\n  ) }\n);\n\nexport type FlaskResultFragment = (\n  { __typename?: 'FlaskResult' }\n  & Pick<FlaskResult, 'points' | 'maxPoints'>\n  & { testResults: Array<(\n    { __typename?: 'FlaskTestResult' }\n    & FlaskTestResultFragment\n  )> }\n);\n\nexport type FlaskTestResultFragment = (\n  { __typename?: 'FlaskTestResult' }\n  & Pick<FlaskTestResult, 'testName' | 'successful' | 'stdout' | 'stderr'>\n);\n\nexport type ProgrammingCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: ProgExPart;\n  solution: FilesSolutionInput;\n}>;\n\n\nexport type ProgrammingCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { programmingExercise?: Maybe<(\n      { __typename?: 'ProgrammingExerciseMutations' }\n      & { correct: (\n        { __typename?: 'ProgrammingCorrectionResult' }\n        & ProgrammingCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type ProgrammingCorrectionResultFragment = (\n  { __typename: 'ProgrammingCorrectionResult' }\n  & Pick<ProgrammingCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'ProgrammingResult' }\n    & ProgrammingResultFragment\n  ) }\n);\n\nexport type ProgrammingResultFragment = (\n  { __typename?: 'ProgrammingResult' }\n  & Pick<ProgrammingResult, 'points' | 'maxPoints'>\n  & { implementationCorrectionResult?: Maybe<(\n    { __typename?: 'ImplementationCorrectionResult' }\n    & ImplementationCorrectionResultFragment\n  )>, unitTestResults: Array<(\n    { __typename?: 'UnitTestCorrectionResult' }\n    & UnitTestCorrectionResultFragment\n  )> }\n);\n\nexport type ImplementationCorrectionResultFragment = (\n  { __typename?: 'ImplementationCorrectionResult' }\n  & Pick<ImplementationCorrectionResult, 'successful' | 'stdout' | 'stderr'>\n);\n\nexport type UnitTestCorrectionResultFragment = (\n  { __typename?: 'UnitTestCorrectionResult' }\n  & Pick<UnitTestCorrectionResult, 'testId' | 'successful' | 'shouldFail' | 'description' | 'stderr'>\n);\n\nexport type RegexCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: RegexExPart;\n  solution: Scalars['String'];\n}>;\n\n\nexport type RegexCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { regexExercise?: Maybe<(\n      { __typename?: 'RegexExerciseMutations' }\n      & { correct: (\n        { __typename?: 'RegexCorrectionResult' }\n        & RegexCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type RegexCorrectionResultFragment = (\n  { __typename?: 'RegexCorrectionResult' }\n  & Pick<RegexCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'RegexExtractionResult' }\n    & RegexAbstractResult_RegexExtractionResult_Fragment\n    & RegexExtractionResultFragment\n  ) | (\n    { __typename?: 'RegexMatchingResult' }\n    & RegexAbstractResult_RegexMatchingResult_Fragment\n    & RegexMatchingResultFragment\n  ) }\n);\n\ntype RegexAbstractResult_RegexExtractionResult_Fragment = (\n  { __typename: 'RegexExtractionResult' }\n  & Pick<RegexExtractionResult, 'points' | 'maxPoints'>\n);\n\ntype RegexAbstractResult_RegexMatchingResult_Fragment = (\n  { __typename: 'RegexMatchingResult' }\n  & Pick<RegexMatchingResult, 'points' | 'maxPoints'>\n);\n\nexport type RegexAbstractResultFragment = RegexAbstractResult_RegexExtractionResult_Fragment | RegexAbstractResult_RegexMatchingResult_Fragment;\n\nexport type RegexMatchingSingleResultFragment = (\n  { __typename?: 'RegexMatchingSingleResult' }\n  & Pick<RegexMatchingSingleResult, 'resultType' | 'matchData'>\n);\n\nexport type RegexMatchingResultFragment = (\n  { __typename?: 'RegexMatchingResult' }\n  & { matchingResults: Array<(\n    { __typename?: 'RegexMatchingSingleResult' }\n    & RegexMatchingSingleResultFragment\n  )> }\n);\n\nexport type RegexExtractionMatchFragment = (\n  { __typename?: 'RegexMatchMatch' }\n  & Pick<RegexMatchMatch, 'matchType' | 'userArg' | 'sampleArg'>\n);\n\nexport type ExtractionMatchingResultFragment = (\n  { __typename?: 'RegexExtractedValuesComparisonMatchingResult' }\n  & Pick<RegexExtractedValuesComparisonMatchingResult, 'notMatchedForUser' | 'notMatchedForSample' | 'points' | 'maxPoints'>\n  & { allMatches: Array<(\n    { __typename?: 'RegexMatchMatch' }\n    & RegexExtractionMatchFragment\n  )> }\n);\n\nexport type RegexExtractionSingleResultFragment = (\n  { __typename?: 'RegexExtractionSingleResult' }\n  & Pick<RegexExtractionSingleResult, 'base'>\n  & { extractionMatchingResult: (\n    { __typename?: 'RegexExtractedValuesComparisonMatchingResult' }\n    & ExtractionMatchingResultFragment\n  ) }\n);\n\nexport type RegexExtractionResultFragment = (\n  { __typename?: 'RegexExtractionResult' }\n  & { extractionResults: Array<(\n    { __typename?: 'RegexExtractionSingleResult' }\n    & RegexExtractionSingleResultFragment\n  )> }\n);\n\nexport type SqlCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: SqlExPart;\n  solution: Scalars['String'];\n}>;\n\n\nexport type SqlCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { sqlExercise?: Maybe<(\n      { __typename?: 'SqlExerciseMutations' }\n      & { correct: (\n        { __typename?: 'SqlCorrectionResult' }\n        & SqlCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type SqlCorrectionResultFragment = (\n  { __typename?: 'SqlCorrectionResult' }\n  & Pick<SqlCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'SqlResult' }\n    & SqlResultFragment\n  ) }\n);\n\nexport type ColumnComparisonFragment = (\n  { __typename?: 'SqlColumnComparisonMatchingResult' }\n  & SqlMatchingResult_SqlColumnComparisonMatchingResult_Fragment\n);\n\nexport type BinaryExpressionComparisonFragment = (\n  { __typename?: 'SqlBinaryExpressionComparisonMatchingResult' }\n  & SqlMatchingResult_SqlBinaryExpressionComparisonMatchingResult_Fragment\n);\n\nexport type LimitComparisonFragment = (\n  { __typename?: 'SqlLimitComparisonMatchingResult' }\n  & SqlMatchingResult_SqlLimitComparisonMatchingResult_Fragment\n);\n\nexport type SelectAdditionalComparisonFragment = (\n  { __typename?: 'SelectAdditionalComparisons' }\n  & { groupByComparison: (\n    { __typename?: 'StringMatchingResult' }\n    & StringMatchingResultFragment\n  ), orderByComparison: (\n    { __typename?: 'StringMatchingResult' }\n    & StringMatchingResultFragment\n  ), limitComparison: (\n    { __typename?: 'SqlLimitComparisonMatchingResult' }\n    & LimitComparisonFragment\n  ) }\n);\n\nexport type SqlResultFragment = (\n  { __typename?: 'SqlResult' }\n  & Pick<SqlResult, 'points' | 'maxPoints'>\n  & { staticComparison: (\n    { __typename?: 'SqlQueriesStaticComparison' }\n    & { columnComparison: (\n      { __typename?: 'SqlColumnComparisonMatchingResult' }\n      & ColumnComparisonFragment\n    ), tableComparison: (\n      { __typename?: 'StringMatchingResult' }\n      & StringMatchingResultFragment\n    ), joinExpressionComparison: (\n      { __typename?: 'SqlBinaryExpressionComparisonMatchingResult' }\n      & BinaryExpressionComparisonFragment\n    ), whereComparison: (\n      { __typename?: 'SqlBinaryExpressionComparisonMatchingResult' }\n      & BinaryExpressionComparisonFragment\n    ), additionalComparisons: (\n      { __typename?: 'AdditionalComparison' }\n      & { selectComparisons?: Maybe<(\n        { __typename?: 'SelectAdditionalComparisons' }\n        & SelectAdditionalComparisonFragment\n      )>, insertComparison?: Maybe<(\n        { __typename?: 'StringMatchingResult' }\n        & StringMatchingResultFragment\n      )> }\n    ) }\n  ), executionResult: (\n    { __typename?: 'SqlExecutionResult' }\n    & SqlExecutionResultFragment\n  ) }\n);\n\nexport type SqlExecutionResultFragment = (\n  { __typename?: 'SqlExecutionResult' }\n  & { userResult?: Maybe<(\n    { __typename?: 'SqlQueryResult' }\n    & SqlQueryResultFragment\n  )>, sampleResult?: Maybe<(\n    { __typename?: 'SqlQueryResult' }\n    & SqlQueryResultFragment\n  )> }\n);\n\nexport type SqlQueryResultFragment = (\n  { __typename?: 'SqlQueryResult' }\n  & Pick<SqlQueryResult, 'tableName' | 'columnNames'>\n  & { rows: Array<(\n    { __typename?: 'SqlRow' }\n    & SqlRowFragment\n  )> }\n);\n\nexport type SqlRowFragment = (\n  { __typename?: 'SqlRow' }\n  & { cells: Array<(\n    { __typename?: 'SqlKeyCellValueObject' }\n    & Pick<SqlKeyCellValueObject, 'key'>\n    & { value: (\n      { __typename?: 'SqlCell' }\n      & SqlCellFragment\n    ) }\n  )> }\n);\n\nexport type SqlCellFragment = (\n  { __typename?: 'SqlCell' }\n  & Pick<SqlCell, 'colName' | 'content' | 'different'>\n);\n\nexport type StringMatchFragment = (\n  { __typename?: 'StringMatch' }\n  & Pick<StringMatch, 'matchType' | 'sampleArg' | 'userArg'>\n);\n\nexport type StringMatchingResultFragment = (\n  { __typename?: 'StringMatchingResult' }\n  & Pick<StringMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUser' | 'notMatchedForSample'>\n  & { allMatches: Array<(\n    { __typename?: 'StringMatch' }\n    & StringMatchFragment\n  )> }\n);\n\ntype NewMatch_ElementLineMatch_Fragment = (\n  { __typename?: 'ElementLineMatch' }\n  & Pick<ElementLineMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_RegexMatchMatch_Fragment = (\n  { __typename?: 'RegexMatchMatch' }\n  & Pick<RegexMatchMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_SqlBinaryExpressionMatch_Fragment = (\n  { __typename?: 'SqlBinaryExpressionMatch' }\n  & Pick<SqlBinaryExpressionMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_SqlColumnMatch_Fragment = (\n  { __typename?: 'SqlColumnMatch' }\n  & Pick<SqlColumnMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_SqlLimitMatch_Fragment = (\n  { __typename?: 'SqlLimitMatch' }\n  & Pick<SqlLimitMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_UmlAssociationMatch_Fragment = (\n  { __typename?: 'UmlAssociationMatch' }\n  & Pick<UmlAssociationMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_UmlAttributeMatch_Fragment = (\n  { __typename?: 'UmlAttributeMatch' }\n  & Pick<UmlAttributeMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_UmlClassMatch_Fragment = (\n  { __typename?: 'UmlClassMatch' }\n  & Pick<UmlClassMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_UmlImplementationMatch_Fragment = (\n  { __typename?: 'UmlImplementationMatch' }\n  & Pick<UmlImplementationMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\ntype NewMatch_UmlMethodMatch_Fragment = (\n  { __typename?: 'UmlMethodMatch' }\n  & Pick<UmlMethodMatch, 'matchType' | 'sampleArgDescription' | 'userArgDescription'>\n);\n\nexport type NewMatchFragment = NewMatch_ElementLineMatch_Fragment | NewMatch_RegexMatchMatch_Fragment | NewMatch_SqlBinaryExpressionMatch_Fragment | NewMatch_SqlColumnMatch_Fragment | NewMatch_SqlLimitMatch_Fragment | NewMatch_UmlAssociationMatch_Fragment | NewMatch_UmlAttributeMatch_Fragment | NewMatch_UmlClassMatch_Fragment | NewMatch_UmlImplementationMatch_Fragment | NewMatch_UmlMethodMatch_Fragment;\n\ntype SqlMatchingResult_RegexExtractedValuesComparisonMatchingResult_Fragment = (\n  { __typename?: 'RegexExtractedValuesComparisonMatchingResult' }\n  & Pick<RegexExtractedValuesComparisonMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'RegexMatchMatch' }\n    & NewMatch_RegexMatchMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_SqlBinaryExpressionComparisonMatchingResult_Fragment = (\n  { __typename?: 'SqlBinaryExpressionComparisonMatchingResult' }\n  & Pick<SqlBinaryExpressionComparisonMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'SqlBinaryExpressionMatch' }\n    & NewMatch_SqlBinaryExpressionMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_SqlColumnComparisonMatchingResult_Fragment = (\n  { __typename?: 'SqlColumnComparisonMatchingResult' }\n  & Pick<SqlColumnComparisonMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'SqlColumnMatch' }\n    & NewMatch_SqlColumnMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_SqlLimitComparisonMatchingResult_Fragment = (\n  { __typename?: 'SqlLimitComparisonMatchingResult' }\n  & Pick<SqlLimitComparisonMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'SqlLimitMatch' }\n    & NewMatch_SqlLimitMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_UmlAssociationMatchingResult_Fragment = (\n  { __typename?: 'UmlAssociationMatchingResult' }\n  & Pick<UmlAssociationMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlAssociationMatch' }\n    & NewMatch_UmlAssociationMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_UmlAttributeMatchingResult_Fragment = (\n  { __typename?: 'UmlAttributeMatchingResult' }\n  & Pick<UmlAttributeMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlAttributeMatch' }\n    & NewMatch_UmlAttributeMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_UmlClassMatchingResult_Fragment = (\n  { __typename?: 'UmlClassMatchingResult' }\n  & Pick<UmlClassMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlClassMatch' }\n    & NewMatch_UmlClassMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_UmlImplementationMatchingResult_Fragment = (\n  { __typename?: 'UmlImplementationMatchingResult' }\n  & Pick<UmlImplementationMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlImplementationMatch' }\n    & NewMatch_UmlImplementationMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_UmlMethodMatchingResult_Fragment = (\n  { __typename?: 'UmlMethodMatchingResult' }\n  & Pick<UmlMethodMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlMethodMatch' }\n    & NewMatch_UmlMethodMatch_Fragment\n  )> }\n);\n\ntype SqlMatchingResult_XmlElementLineComparisonMatchingResult_Fragment = (\n  { __typename?: 'XmlElementLineComparisonMatchingResult' }\n  & Pick<XmlElementLineComparisonMatchingResult, 'points' | 'maxPoints' | 'notMatchedForUserString' | 'notMatchedForSampleString'>\n  & { allMatches: Array<(\n    { __typename?: 'ElementLineMatch' }\n    & NewMatch_ElementLineMatch_Fragment\n  )> }\n);\n\nexport type SqlMatchingResultFragment = SqlMatchingResult_RegexExtractedValuesComparisonMatchingResult_Fragment | SqlMatchingResult_SqlBinaryExpressionComparisonMatchingResult_Fragment | SqlMatchingResult_SqlColumnComparisonMatchingResult_Fragment | SqlMatchingResult_SqlLimitComparisonMatchingResult_Fragment | SqlMatchingResult_UmlAssociationMatchingResult_Fragment | SqlMatchingResult_UmlAttributeMatchingResult_Fragment | SqlMatchingResult_UmlClassMatchingResult_Fragment | SqlMatchingResult_UmlImplementationMatchingResult_Fragment | SqlMatchingResult_UmlMethodMatchingResult_Fragment | SqlMatchingResult_XmlElementLineComparisonMatchingResult_Fragment;\n\nexport type UmlCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: UmlExPart;\n  solution: UmlClassDiagramInput;\n}>;\n\n\nexport type UmlCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { umlExercise?: Maybe<(\n      { __typename?: 'UmlExerciseMutations' }\n      & { correct: (\n        { __typename?: 'UmlCorrectionResult' }\n        & UmlCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type UmlCorrectionResultFragment = (\n  { __typename?: 'UmlCorrectionResult' }\n  & Pick<UmlCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'UmlResult' }\n    & UmlResultFragment\n  ) }\n);\n\nexport type UmlResultFragment = (\n  { __typename?: 'UmlResult' }\n  & Pick<UmlResult, 'points' | 'maxPoints'>\n  & { classResult?: Maybe<(\n    { __typename?: 'UmlClassMatchingResult' }\n    & UmlClassMatchingResultFragment\n  )>, assocResult?: Maybe<(\n    { __typename?: 'UmlAssociationMatchingResult' }\n    & UmlAssociationMatchingResultFragment\n  )>, implResult?: Maybe<(\n    { __typename?: 'UmlImplementationMatchingResult' }\n    & UmlImplementationMatchingResultFragment\n  )> }\n);\n\nexport type UmlClassMatchingResultFragment = (\n  { __typename?: 'UmlClassMatchingResult' }\n  & Pick<UmlClassMatchingResult, 'points' | 'maxPoints'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlClassMatch' }\n    & UmlClassMatchFragment\n  )>, notMatchedForUser: Array<(\n    { __typename?: 'UmlClass' }\n    & UmlSolutionClassFragment\n  )>, notMatchedForSample: Array<(\n    { __typename?: 'UmlClass' }\n    & UmlSolutionClassFragment\n  )> }\n);\n\nexport type UmlClassMatchFragment = (\n  { __typename?: 'UmlClassMatch' }\n  & Pick<UmlClassMatch, 'matchType'>\n  & { userArg: (\n    { __typename?: 'UmlClass' }\n    & UmlSolutionClassFragment\n  ), sampleArg: (\n    { __typename?: 'UmlClass' }\n    & UmlSolutionClassFragment\n  ), analysisResult: { __typename: 'UmlClassMatchAnalysisResult' } }\n);\n\nexport type UmlSolutionClassFragment = (\n  { __typename?: 'UmlClass' }\n  & Pick<UmlClass, 'classType' | 'name'>\n  & { attributes: Array<{ __typename: 'UmlAttribute' }>, methods: Array<{ __typename: 'UmlMethod' }> }\n);\n\nexport type UmlAssociationMatchingResultFragment = (\n  { __typename?: 'UmlAssociationMatchingResult' }\n  & Pick<UmlAssociationMatchingResult, 'points' | 'maxPoints'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlAssociationMatch' }\n    & UmlAssociationMatchFragment\n  )>, notMatchedForUser: Array<(\n    { __typename?: 'UmlAssociation' }\n    & UmlAssociationFragment\n  )>, notMatchedForSample: Array<(\n    { __typename?: 'UmlAssociation' }\n    & UmlAssociationFragment\n  )> }\n);\n\nexport type UmlAssociationMatchFragment = (\n  { __typename?: 'UmlAssociationMatch' }\n  & Pick<UmlAssociationMatch, 'matchType'>\n  & { userArg: (\n    { __typename?: 'UmlAssociation' }\n    & UmlAssociationFragment\n  ), sampleArg: (\n    { __typename?: 'UmlAssociation' }\n    & UmlAssociationFragment\n  ), analysisResult: (\n    { __typename?: 'UmlAssociationAnalysisResult' }\n    & Pick<UmlAssociationAnalysisResult, 'assocTypeEqual' | 'correctAssocType' | 'multiplicitiesEqual'>\n  ) }\n);\n\nexport type UmlAssociationFragment = (\n  { __typename?: 'UmlAssociation' }\n  & Pick<UmlAssociation, 'assocType' | 'assocName' | 'firstEnd' | 'firstMult' | 'secondEnd' | 'secondMult'>\n);\n\nexport type UmlImplementationMatchingResultFragment = (\n  { __typename?: 'UmlImplementationMatchingResult' }\n  & Pick<UmlImplementationMatchingResult, 'points' | 'maxPoints'>\n  & { allMatches: Array<(\n    { __typename?: 'UmlImplementationMatch' }\n    & UmlImplementationMatchFragment\n  )>, notMatchedForUser: Array<(\n    { __typename?: 'UmlImplementation' }\n    & UmlImplementationFragment\n  )>, notMatchedForSample: Array<(\n    { __typename?: 'UmlImplementation' }\n    & UmlImplementationFragment\n  )> }\n);\n\nexport type UmlImplementationMatchFragment = (\n  { __typename?: 'UmlImplementationMatch' }\n  & Pick<UmlImplementationMatch, 'matchType'>\n  & { userArg: (\n    { __typename?: 'UmlImplementation' }\n    & UmlImplementationFragment\n  ), sampleArg: (\n    { __typename?: 'UmlImplementation' }\n    & UmlImplementationFragment\n  ) }\n);\n\nexport type UmlImplementationFragment = (\n  { __typename?: 'UmlImplementation' }\n  & Pick<UmlImplementation, 'subClass' | 'superClass'>\n);\n\nexport type WebCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: WebExPart;\n  solution: FilesSolutionInput;\n}>;\n\n\nexport type WebCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { webExercise?: Maybe<(\n      { __typename?: 'WebExerciseMutations' }\n      & { correct: (\n        { __typename?: 'WebCorrectionResult' }\n        & WebCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type WebCorrectionResultFragment = (\n  { __typename?: 'WebCorrectionResult' }\n  & Pick<WebCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'WebResult' }\n    & WebResultFragment\n  ) }\n);\n\nexport type WebResultFragment = (\n  { __typename?: 'WebResult' }\n  & Pick<WebResult, 'points' | 'maxPoints'>\n  & { gradedHtmlTaskResults: Array<(\n    { __typename?: 'GradedHtmlTaskResult' }\n    & GradedHtmlTaskResultFragment\n  )>, gradedJsTaskResults: Array<(\n    { __typename?: 'GradedJsTaskResult' }\n    & GradedJsTaskResultFragment\n  )> }\n);\n\nexport type GradedHtmlTaskResultFragment = (\n  { __typename?: 'GradedHtmlTaskResult' }\n  & Pick<GradedHtmlTaskResult, 'id' | 'success' | 'elementFound' | 'isSuccessful' | 'points' | 'maxPoints'>\n  & { textContentResult?: Maybe<(\n    { __typename?: 'GradedTextResult' }\n    & GradedTextContentResultFragment\n  )>, attributeResults: Array<(\n    { __typename?: 'GradedTextResult' }\n    & GradedTextContentResultFragment\n  )> }\n);\n\nexport type GradedTextContentResultFragment = (\n  { __typename?: 'GradedTextResult' }\n  & Pick<GradedTextResult, 'keyName' | 'awaitedContent' | 'maybeFoundContent' | 'isSuccessful' | 'points' | 'maxPoints'>\n);\n\nexport type GradedJsTaskResultFragment = (\n  { __typename?: 'GradedJsTaskResult' }\n  & Pick<GradedJsTaskResult, 'id' | 'success' | 'points' | 'maxPoints'>\n  & { gradedPreResults: Array<(\n    { __typename?: 'GradedJsHtmlElementSpecResult' }\n    & GradedJsHtmlElementSpecResultFragment\n  )>, gradedJsActionResult: (\n    { __typename?: 'GradedJsActionResult' }\n    & GradedJsActionResultFragment\n  ), gradedPostResults: Array<(\n    { __typename?: 'GradedJsHtmlElementSpecResult' }\n    & GradedJsHtmlElementSpecResultFragment\n  )> }\n);\n\nexport type GradedJsHtmlElementSpecResultFragment = (\n  { __typename?: 'GradedJsHtmlElementSpecResult' }\n  & Pick<GradedJsHtmlElementSpecResult, 'id'>\n);\n\nexport type GradedJsActionResultFragment = (\n  { __typename?: 'GradedJsActionResult' }\n  & Pick<GradedJsActionResult, 'actionPerformed' | 'points' | 'maxPoints'>\n  & { jsAction: { __typename: 'JsAction' } }\n);\n\nexport type XmlCorrectionMutationVariables = Exact<{\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  part: XmlExPart;\n  solution: XmlSolutionInput;\n}>;\n\n\nexport type XmlCorrectionMutation = (\n  { __typename?: 'Mutation' }\n  & { me?: Maybe<(\n    { __typename?: 'UserMutations' }\n    & { xmlExercise?: Maybe<(\n      { __typename?: 'XmlExerciseMutations' }\n      & { correct: (\n        { __typename?: 'XmlCorrectionResult' }\n        & XmlCorrectionResultFragment\n      ) }\n    )> }\n  )> }\n);\n\nexport type XmlCorrectionResultFragment = (\n  { __typename?: 'XmlCorrectionResult' }\n  & Pick<XmlCorrectionResult, 'solutionSaved' | 'resultSaved' | 'proficienciesUpdated'>\n  & { result: (\n    { __typename?: 'XmlResult' }\n    & XmlResultFragment\n  ) }\n);\n\nexport type XmlResultFragment = (\n  { __typename?: 'XmlResult' }\n  & Pick<XmlResult, 'points' | 'maxPoints' | 'successType'>\n  & { grammarResult?: Maybe<(\n    { __typename?: 'XmlGrammarResult' }\n    & XmlGrammarResultFragment\n  )>, documentResult?: Maybe<(\n    { __typename?: 'XmlDocumentResult' }\n    & XmlDocumentResultFragment\n  )> }\n);\n\nexport type XmlGrammarResultFragment = (\n  { __typename?: 'XmlGrammarResult' }\n  & { parseErrors: Array<(\n    { __typename?: 'DTDParseException' }\n    & Pick<DtdParseException, 'msg' | 'parsedLine'>\n  )>, results: (\n    { __typename?: 'XmlElementLineComparisonMatchingResult' }\n    & Pick<XmlElementLineComparisonMatchingResult, 'points' | 'maxPoints'>\n    & XmlElementLineMatchingResultFragment\n  ) }\n);\n\nexport type XmlElementLineMatchingResultFragment = (\n  { __typename?: 'XmlElementLineComparisonMatchingResult' }\n  & { allMatches: Array<(\n    { __typename?: 'ElementLineMatch' }\n    & XmlElementLineMatchFragment\n  )>, notMatchedForUser: Array<(\n    { __typename?: 'ElementLine' }\n    & ElementLineFragment\n  )>, notMatchedForSample: Array<(\n    { __typename?: 'ElementLine' }\n    & ElementLineFragment\n  )> }\n);\n\nexport type XmlElementLineMatchFragment = (\n  { __typename?: 'ElementLineMatch' }\n  & Pick<ElementLineMatch, 'matchType'>\n  & { userArg: (\n    { __typename?: 'ElementLine' }\n    & ElementLineFragment\n  ), sampleArg: (\n    { __typename?: 'ElementLine' }\n    & ElementLineFragment\n  ), analysisResult: (\n    { __typename?: 'ElementLineAnalysisResult' }\n    & XmlElementLineAnalysisResultFragment\n  ) }\n);\n\nexport type XmlElementLineAnalysisResultFragment = (\n  { __typename?: 'ElementLineAnalysisResult' }\n  & Pick<ElementLineAnalysisResult, 'attributesCorrect' | 'correctAttributes' | 'contentCorrect' | 'correctContent'>\n);\n\nexport type ElementLineFragment = (\n  { __typename?: 'ElementLine' }\n  & Pick<ElementLine, 'elementName'>\n  & { elementDefinition: (\n    { __typename?: 'ElementDefinition' }\n    & Pick<ElementDefinition, 'elementName' | 'content'>\n  ), attributeLists: Array<(\n    { __typename?: 'AttributeList' }\n    & Pick<AttributeList, 'elementName' | 'attributeDefinitions'>\n  )> }\n);\n\nexport type XmlDocumentResultFragment = (\n  { __typename?: 'XmlDocumentResult' }\n  & { errors: Array<(\n    { __typename?: 'XmlError' }\n    & XmlErrorFragment\n  )> }\n);\n\nexport type XmlErrorFragment = (\n  { __typename?: 'XmlError' }\n  & Pick<XmlError, 'success' | 'line' | 'errorType' | 'errorMessage'>\n);\n\nexport type LessonIdentifierFragment = (\n  { __typename?: 'Lesson' }\n  & Pick<Lesson, 'lessonId' | 'title' | 'description' | 'video'>\n);\n\nexport type LessonsForToolQueryVariables = Exact<{\n  toolId: Scalars['String'];\n}>;\n\n\nexport type LessonsForToolQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & Pick<CollectionTool, 'name'>\n      & { lessons: Array<(\n        { __typename?: 'Lesson' }\n        & LessonIdentifierFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type LessonOverviewFragment = (\n  { __typename?: 'Lesson' }\n  & Pick<Lesson, 'title' | 'description' | 'video' | 'contentCount'>\n);\n\nexport type LessonOverviewQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  lessonId: Scalars['Int'];\n}>;\n\n\nexport type LessonOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & { lesson?: Maybe<(\n        { __typename?: 'Lesson' }\n        & LessonOverviewFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type LessonTextContentFragment = (\n  { __typename: 'LessonTextContent' }\n  & Pick<LessonTextContent, 'contentId' | 'content'>\n);\n\nexport type LessonMultipleChoiceQuestionAnswerFragment = (\n  { __typename?: 'LessonMultipleChoiceQuestionAnswer' }\n  & Pick<LessonMultipleChoiceQuestionAnswer, 'id' | 'answer' | 'isCorrect'>\n);\n\nexport type LessonMultipleChoiceQuestionFragment = (\n  { __typename?: 'LessonMultipleChoiceQuestion' }\n  & Pick<LessonMultipleChoiceQuestion, 'id' | 'questionText'>\n  & { answers: Array<(\n    { __typename?: 'LessonMultipleChoiceQuestionAnswer' }\n    & LessonMultipleChoiceQuestionAnswerFragment\n  )> }\n);\n\nexport type LessonMultipleChoiceQuestionContentFragment = (\n  { __typename: 'LessonMultipleChoiceQuestionsContent' }\n  & Pick<LessonMultipleChoiceQuestionsContent, 'contentId'>\n  & { questions: Array<(\n    { __typename?: 'LessonMultipleChoiceQuestion' }\n    & LessonMultipleChoiceQuestionFragment\n  )> }\n);\n\nexport type LessonAsTextFragment = (\n  { __typename?: 'Lesson' }\n  & Pick<Lesson, 'lessonId' | 'title' | 'description'>\n  & { contents: Array<(\n    { __typename?: 'LessonMultipleChoiceQuestionsContent' }\n    & LessonMultipleChoiceQuestionContentFragment\n  ) | (\n    { __typename?: 'LessonTextContent' }\n    & LessonTextContentFragment\n  )> }\n);\n\nexport type LessonAsTextQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  lessonId: Scalars['Int'];\n}>;\n\n\nexport type LessonAsTextQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & { lesson?: Maybe<(\n        { __typename?: 'Lesson' }\n        & LessonAsTextFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type LessonAsVideoQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  lessonId: Scalars['Int'];\n}>;\n\n\nexport type LessonAsVideoQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & { lesson?: Maybe<(\n        { __typename?: 'Lesson' }\n        & Pick<Lesson, 'title' | 'video'>\n      )> }\n    )> }\n  )> }\n);\n\nexport type CollectionToolFragment = (\n  { __typename?: 'CollectionTool' }\n  & Pick<CollectionTool, 'id' | 'name' | 'state' | 'collectionCount' | 'lessonCount' | 'exerciseCount'>\n);\n\nexport type ToolOverviewQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ToolOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tools: Array<(\n      { __typename?: 'CollectionTool' }\n      & CollectionToolFragment\n    )> }\n  )> }\n);\n\nexport type CollectionToolOverviewQueryVariables = Exact<{\n  toolId: Scalars['String'];\n}>;\n\n\nexport type CollectionToolOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & Pick<CollectionTool, 'id' | 'name' | 'collectionCount' | 'exerciseCount' | 'lessonCount'>\n      & { proficiencies: Array<(\n        { __typename?: 'UserProficiency' }\n        & UserProficiencyFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type UserProficiencyFragment = (\n  { __typename?: 'UserProficiency' }\n  & Pick<UserProficiency, 'points' | 'pointsForNextLevel'>\n  & { topic: (\n    { __typename?: 'Topic' }\n    & TopicFragment\n  ), level: (\n    { __typename?: 'Level' }\n    & LevelFragment\n  ) }\n);\n\nexport type AllExercisesOverviewQueryVariables = Exact<{\n  toolId: Scalars['String'];\n}>;\n\n\nexport type AllExercisesOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & { allExercises: Array<(\n        { __typename?: 'Exercise' }\n        & { topicsWithLevels: Array<(\n          { __typename?: 'TopicWithLevel' }\n          & TopicWithLevelFragment\n        )> }\n        & FieldsForLinkFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type CollectionValuesFragment = (\n  { __typename?: 'ExerciseCollection' }\n  & Pick<ExerciseCollection, 'collectionId' | 'title' | 'exerciseCount'>\n);\n\nexport type CollectionListQueryVariables = Exact<{\n  toolId: Scalars['String'];\n}>;\n\n\nexport type CollectionListQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & Pick<CollectionTool, 'id' | 'name'>\n      & { collections: Array<(\n        { __typename?: 'ExerciseCollection' }\n        & CollectionValuesFragment\n      )> }\n    )> }\n  )> }\n);\n\nexport type CollOverviewToolFragment = (\n  { __typename?: 'CollectionTool' }\n  & Pick<CollectionTool, 'id' | 'name'>\n  & { collection?: Maybe<(\n    { __typename?: 'ExerciseCollection' }\n    & Pick<ExerciseCollection, 'collectionId' | 'title'>\n    & { exercises: Array<(\n      { __typename?: 'Exercise' }\n      & FieldsForLinkFragment\n    )> }\n  )> }\n);\n\nexport type CollectionOverviewQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  collId: Scalars['Int'];\n}>;\n\n\nexport type CollectionOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & CollOverviewToolFragment\n    )> }\n  )> }\n);\n\nexport type PartFragment = (\n  { __typename?: 'ExPart' }\n  & Pick<ExPart, 'id' | 'name' | 'isEntryPart' | 'solved'>\n);\n\nexport type ExerciseOverviewFragment = (\n  { __typename?: 'Exercise' }\n  & Pick<Exercise, 'exerciseId' | 'title' | 'text'>\n  & { parts: Array<(\n    { __typename?: 'ExPart' }\n    & PartFragment\n  )> }\n);\n\nexport type ExerciseOverviewQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n}>;\n\n\nexport type ExerciseOverviewQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & Pick<CollectionTool, 'id' | 'name'>\n      & { collection?: Maybe<(\n        { __typename?: 'ExerciseCollection' }\n        & Pick<ExerciseCollection, 'collectionId' | 'title'>\n        & { exercise?: Maybe<(\n          { __typename?: 'Exercise' }\n          & ExerciseOverviewFragment\n        )> }\n      )> }\n    )> }\n  )> }\n);\n\nexport type ExerciseSolveFieldsFragment = (\n  { __typename?: 'Exercise' }\n  & Pick<Exercise, 'exerciseId' | 'collectionId' | 'toolId' | 'title' | 'text'>\n  & { content: (\n    { __typename: 'EbnfExerciseContent' }\n    & EbnfExerciseContentFragment\n  ) | (\n    { __typename: 'FlaskExerciseContent' }\n    & FlaskExerciseContentFragment\n  ) | (\n    { __typename: 'ProgrammingExerciseContent' }\n    & ProgrammingExerciseContentFragment\n    & ProgrammingExerciseContentFragment\n  ) | (\n    { __typename: 'RegexExerciseContent' }\n    & RegexExerciseContentFragment\n  ) | (\n    { __typename: 'SqlExerciseContent' }\n    & SqlExerciseContentFragment\n  ) | (\n    { __typename: 'UmlExerciseContent' }\n    & UmlExerciseContentFragment\n  ) | (\n    { __typename: 'WebExerciseContent' }\n    & WebExerciseContentFragment\n  ) | (\n    { __typename: 'XmlExerciseContent' }\n    & XmlExerciseContentFragment\n  ) }\n);\n\nexport type ExerciseQueryVariables = Exact<{\n  toolId: Scalars['String'];\n  collId: Scalars['Int'];\n  exId: Scalars['Int'];\n  partId: Scalars['String'];\n}>;\n\n\nexport type ExerciseQuery = (\n  { __typename?: 'Query' }\n  & { me?: Maybe<(\n    { __typename?: 'User' }\n    & { tool?: Maybe<(\n      { __typename?: 'CollectionTool' }\n      & { collection?: Maybe<(\n        { __typename?: 'ExerciseCollection' }\n        & { exercise?: Maybe<(\n          { __typename?: 'Exercise' }\n          & ExerciseSolveFieldsFragment\n        )> }\n      )> }\n    )> }\n  )> }\n);\n\nexport type ExerciseFileFragment = (\n  { __typename?: 'ExerciseFile' }\n  & Pick<ExerciseFile, 'name' | 'fileType' | 'content' | 'editable'>\n);\n\nexport type FilesSolutionFragment = (\n  { __typename: 'FilesSolution' }\n  & { files: Array<(\n    { __typename?: 'ExerciseFile' }\n    & ExerciseFileFragment\n  )> }\n);\n\nexport type LevelFragment = (\n  { __typename?: 'Level' }\n  & Pick<Level, 'title' | 'levelIndex'>\n);\n\nexport type TopicFragment = (\n  { __typename?: 'Topic' }\n  & Pick<Topic, 'abbreviation' | 'title'>\n  & { maxLevel: (\n    { __typename?: 'Level' }\n    & LevelFragment\n  ) }\n);\n\nexport type TopicWithLevelFragment = (\n  { __typename?: 'TopicWithLevel' }\n  & { topic: (\n    { __typename?: 'Topic' }\n    & TopicFragment\n  ), level: (\n    { __typename?: 'Level' }\n    & LevelFragment\n  ) }\n);\n\nexport type FieldsPartFragment = (\n  { __typename?: 'ExPart' }\n  & Pick<ExPart, 'id' | 'name' | 'solved'>\n);\n\nexport type FieldsForLinkFragment = (\n  { __typename?: 'Exercise' }\n  & Pick<Exercise, 'exerciseId' | 'collectionId' | 'toolId' | 'title' | 'difficulty'>\n  & { topicsWithLevels: Array<(\n    { __typename?: 'TopicWithLevel' }\n    & TopicWithLevelFragment\n  )>, parts: Array<(\n    { __typename?: 'ExPart' }\n    & FieldsPartFragment\n  )> }\n);\n\nexport type EbnfExerciseContentFragment = (\n  { __typename?: 'EbnfExerciseContent' }\n  & Pick<EbnfExerciseContent, 'sampleSolutions'>\n);\n\nexport type FlaskExerciseContentFragment = (\n  { __typename: 'FlaskExerciseContent' }\n  & { testConfig: (\n    { __typename?: 'FlaskTestsConfig' }\n    & { tests: Array<(\n      { __typename?: 'FlaskSingleTestConfig' }\n      & Pick<FlaskSingleTestConfig, 'id' | 'testName' | 'description'>\n    )> }\n  ), files: Array<(\n    { __typename?: 'ExerciseFile' }\n    & ExerciseFileFragment\n  )>, flaskSampleSolutions: Array<(\n    { __typename?: 'FilesSolution' }\n    & FilesSolutionFragment\n  )> }\n);\n\nexport type UnitTestPartFragment = (\n  { __typename?: 'UnitTestPart' }\n  & { unitTestFiles: Array<(\n    { __typename?: 'ExerciseFile' }\n    & ExerciseFileFragment\n  )> }\n);\n\nexport type ProgrammingExerciseContentFragment = (\n  { __typename?: 'ProgrammingExerciseContent' }\n  & { programmingPart: ProgrammingExerciseContent['part'] }\n  & { unitTestPart: (\n    { __typename?: 'UnitTestPart' }\n    & UnitTestPartFragment\n  ), implementationPart: (\n    { __typename?: 'ImplementationPart' }\n    & { files: Array<(\n      { __typename?: 'ExerciseFile' }\n      & ExerciseFileFragment\n    )> }\n  ), programmingSampleSolutions: Array<(\n    { __typename?: 'FilesSolution' }\n    & FilesSolutionFragment\n  )> }\n);\n\nexport type RegexExerciseContentFragment = (\n  { __typename?: 'RegexExerciseContent' }\n  & { regexSampleSolutions: RegexExerciseContent['sampleSolutions'], regexPart: RegexExerciseContent['part'] }\n);\n\nexport type SqlExerciseContentFragment = (\n  { __typename?: 'SqlExerciseContent' }\n  & Pick<SqlExerciseContent, 'hint'>\n  & { sqlSampleSolutions: SqlExerciseContent['sampleSolutions'], sqlPart: SqlExerciseContent['part'] }\n  & { sqlDbContents: Array<(\n    { __typename?: 'SqlQueryResult' }\n    & SqlQueryResultFragment\n  )> }\n);\n\nexport type UmlExerciseContentFragment = (\n  { __typename?: 'UmlExerciseContent' }\n  & Pick<UmlExerciseContent, 'toIgnore'>\n  & { umlPart: UmlExerciseContent['part'] }\n  & { mappings: Array<(\n    { __typename?: 'KeyValueObject' }\n    & Pick<KeyValueObject, 'key' | 'value'>\n  )>, umlSampleSolutions: Array<(\n    { __typename?: 'UmlClassDiagram' }\n    & UmlClassDiagramFragment\n  )> }\n);\n\nexport type UmlClassDiagramFragment = (\n  { __typename?: 'UmlClassDiagram' }\n  & { classes: Array<(\n    { __typename?: 'UmlClass' }\n    & UmlClassFragment\n  )>, associations: Array<(\n    { __typename?: 'UmlAssociation' }\n    & UmlAssociationFragment\n  )>, implementations: Array<(\n    { __typename?: 'UmlImplementation' }\n    & UmlImplementationFragment\n  )> }\n);\n\nexport type UmlClassFragment = (\n  { __typename?: 'UmlClass' }\n  & Pick<UmlClass, 'classType' | 'name'>\n  & { attributes: Array<(\n    { __typename?: 'UmlAttribute' }\n    & UmlAttributeFragment\n  )>, methods: Array<(\n    { __typename?: 'UmlMethod' }\n    & UmlMethodFragment\n  )> }\n);\n\nexport type UmlAttributeFragment = (\n  { __typename?: 'UmlAttribute' }\n  & Pick<UmlAttribute, 'isAbstract' | 'isDerived' | 'isStatic' | 'visibility' | 'memberName' | 'memberType'>\n);\n\nexport type UmlMethodFragment = (\n  { __typename?: 'UmlMethod' }\n  & Pick<UmlMethod, 'isAbstract' | 'isStatic' | 'visibility' | 'memberName' | 'parameters' | 'memberType'>\n);\n\nexport type WebExerciseContentFragment = (\n  { __typename?: 'WebExerciseContent' }\n  & { webPart: WebExerciseContent['part'] }\n  & { files: Array<(\n    { __typename?: 'ExerciseFile' }\n    & ExerciseFileFragment\n  )>, siteSpec: (\n    { __typename?: 'SiteSpec' }\n    & Pick<SiteSpec, 'fileName' | 'jsTaskCount'>\n    & { htmlTasks: Array<(\n      { __typename?: 'HtmlTask' }\n      & Pick<HtmlTask, 'text'>\n    )> }\n  ), webSampleSolutions: Array<(\n    { __typename?: 'FilesSolution' }\n    & FilesSolutionFragment\n  )> }\n);\n\nexport type XmlExerciseContentFragment = (\n  { __typename?: 'XmlExerciseContent' }\n  & Pick<XmlExerciseContent, 'rootNode' | 'grammarDescription'>\n  & { xmlPart: XmlExerciseContent['part'] }\n  & { xmlSampleSolutions: Array<(\n    { __typename?: 'XmlSolution' }\n    & XmlSolutionFragment\n  )> }\n);\n\nexport type XmlSolutionFragment = (\n  { __typename: 'XmlSolution' }\n  & Pick<XmlSolution, 'document' | 'grammar'>\n);\n\nexport type RegisterMutationVariables = Exact<{\n  username: Scalars['String'];\n  firstPassword: Scalars['String'];\n  secondPassword: Scalars['String'];\n}>;\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'register'>\n);\n\nexport type LoggedInUserWithTokenFragment = (\n  { __typename?: 'LoggedInUserWithToken' }\n  & Pick<LoggedInUserWithToken, 'jwt'>\n  & { loggedInUser: (\n    { __typename?: 'LoggedInUser' }\n    & Pick<LoggedInUser, 'username' | 'isAdmin'>\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  username: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login?: Maybe<(\n    { __typename?: 'LoggedInUserWithToken' }\n    & LoggedInUserWithTokenFragment\n  )> }\n);\n\nexport const FlaskTestResultFragmentDoc = gql`\n    fragment FlaskTestResult on FlaskTestResult {\n  testName\n  successful\n  stdout\n  stderr\n}\n    `;\nexport const FlaskResultFragmentDoc = gql`\n    fragment FlaskResult on FlaskResult {\n  points\n  maxPoints\n  testResults {\n    ...FlaskTestResult\n  }\n}\n    ${FlaskTestResultFragmentDoc}`;\nexport const FlaskCorrectionResultFragmentDoc = gql`\n    fragment FlaskCorrectionResult on FlaskCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...FlaskResult\n  }\n}\n    ${FlaskResultFragmentDoc}`;\nexport const ImplementationCorrectionResultFragmentDoc = gql`\n    fragment ImplementationCorrectionResult on ImplementationCorrectionResult {\n  successful\n  stdout\n  stderr\n}\n    `;\nexport const UnitTestCorrectionResultFragmentDoc = gql`\n    fragment UnitTestCorrectionResult on UnitTestCorrectionResult {\n  testId\n  successful\n  shouldFail\n  description\n  stderr\n}\n    `;\nexport const ProgrammingResultFragmentDoc = gql`\n    fragment ProgrammingResult on ProgrammingResult {\n  points\n  maxPoints\n  implementationCorrectionResult {\n    ...ImplementationCorrectionResult\n  }\n  unitTestResults {\n    ...UnitTestCorrectionResult\n  }\n}\n    ${ImplementationCorrectionResultFragmentDoc}\n${UnitTestCorrectionResultFragmentDoc}`;\nexport const ProgrammingCorrectionResultFragmentDoc = gql`\n    fragment ProgrammingCorrectionResult on ProgrammingCorrectionResult {\n  __typename\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...ProgrammingResult\n  }\n}\n    ${ProgrammingResultFragmentDoc}`;\nexport const RegexAbstractResultFragmentDoc = gql`\n    fragment RegexAbstractResult on RegexAbstractResult {\n  __typename\n  points\n  maxPoints\n}\n    `;\nexport const RegexMatchingSingleResultFragmentDoc = gql`\n    fragment RegexMatchingSingleResult on RegexMatchingSingleResult {\n  resultType\n  matchData\n}\n    `;\nexport const RegexMatchingResultFragmentDoc = gql`\n    fragment RegexMatchingResult on RegexMatchingResult {\n  matchingResults {\n    ...RegexMatchingSingleResult\n  }\n}\n    ${RegexMatchingSingleResultFragmentDoc}`;\nexport const RegexExtractionMatchFragmentDoc = gql`\n    fragment RegexExtractionMatch on RegexMatchMatch {\n  matchType\n  userArg\n  sampleArg\n}\n    `;\nexport const ExtractionMatchingResultFragmentDoc = gql`\n    fragment ExtractionMatchingResult on RegexExtractedValuesComparisonMatchingResult {\n  allMatches {\n    ...RegexExtractionMatch\n  }\n  notMatchedForUser\n  notMatchedForSample\n  points\n  maxPoints\n}\n    ${RegexExtractionMatchFragmentDoc}`;\nexport const RegexExtractionSingleResultFragmentDoc = gql`\n    fragment RegexExtractionSingleResult on RegexExtractionSingleResult {\n  base\n  extractionMatchingResult {\n    ...ExtractionMatchingResult\n  }\n}\n    ${ExtractionMatchingResultFragmentDoc}`;\nexport const RegexExtractionResultFragmentDoc = gql`\n    fragment RegexExtractionResult on RegexExtractionResult {\n  extractionResults {\n    ...RegexExtractionSingleResult\n  }\n}\n    ${RegexExtractionSingleResultFragmentDoc}`;\nexport const RegexCorrectionResultFragmentDoc = gql`\n    fragment RegexCorrectionResult on RegexCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...RegexAbstractResult\n    ...RegexMatchingResult\n    ...RegexExtractionResult\n  }\n}\n    ${RegexAbstractResultFragmentDoc}\n${RegexMatchingResultFragmentDoc}\n${RegexExtractionResultFragmentDoc}`;\nexport const NewMatchFragmentDoc = gql`\n    fragment NewMatch on NewMatch {\n  matchType\n  sampleArgDescription\n  userArgDescription\n}\n    `;\nexport const SqlMatchingResultFragmentDoc = gql`\n    fragment SqlMatchingResult on MatchingResult {\n  points\n  maxPoints\n  allMatches {\n    ...NewMatch\n  }\n  notMatchedForUserString\n  notMatchedForSampleString\n}\n    ${NewMatchFragmentDoc}`;\nexport const ColumnComparisonFragmentDoc = gql`\n    fragment ColumnComparison on SqlColumnComparisonMatchingResult {\n  ...SqlMatchingResult\n}\n    ${SqlMatchingResultFragmentDoc}`;\nexport const StringMatchFragmentDoc = gql`\n    fragment StringMatch on StringMatch {\n  matchType\n  sampleArg\n  userArg\n}\n    `;\nexport const StringMatchingResultFragmentDoc = gql`\n    fragment StringMatchingResult on StringMatchingResult {\n  points\n  maxPoints\n  allMatches {\n    ...StringMatch\n  }\n  notMatchedForUser\n  notMatchedForSample\n}\n    ${StringMatchFragmentDoc}`;\nexport const BinaryExpressionComparisonFragmentDoc = gql`\n    fragment BinaryExpressionComparison on SqlBinaryExpressionComparisonMatchingResult {\n  ...SqlMatchingResult\n}\n    ${SqlMatchingResultFragmentDoc}`;\nexport const LimitComparisonFragmentDoc = gql`\n    fragment LimitComparison on SqlLimitComparisonMatchingResult {\n  ...SqlMatchingResult\n}\n    ${SqlMatchingResultFragmentDoc}`;\nexport const SelectAdditionalComparisonFragmentDoc = gql`\n    fragment SelectAdditionalComparison on SelectAdditionalComparisons {\n  groupByComparison {\n    ...StringMatchingResult\n  }\n  orderByComparison {\n    ...StringMatchingResult\n  }\n  limitComparison {\n    ...LimitComparison\n  }\n}\n    ${StringMatchingResultFragmentDoc}\n${LimitComparisonFragmentDoc}`;\nexport const SqlCellFragmentDoc = gql`\n    fragment SqlCell on SqlCell {\n  colName\n  content\n  different\n}\n    `;\nexport const SqlRowFragmentDoc = gql`\n    fragment SqlRow on SqlRow {\n  cells {\n    key\n    value {\n      ...SqlCell\n    }\n  }\n}\n    ${SqlCellFragmentDoc}`;\nexport const SqlQueryResultFragmentDoc = gql`\n    fragment SqlQueryResult on SqlQueryResult {\n  tableName\n  columnNames\n  rows {\n    ...SqlRow\n  }\n}\n    ${SqlRowFragmentDoc}`;\nexport const SqlExecutionResultFragmentDoc = gql`\n    fragment SqlExecutionResult on SqlExecutionResult {\n  userResult {\n    ...SqlQueryResult\n  }\n  sampleResult {\n    ...SqlQueryResult\n  }\n}\n    ${SqlQueryResultFragmentDoc}`;\nexport const SqlResultFragmentDoc = gql`\n    fragment SqlResult on SqlResult {\n  points\n  maxPoints\n  staticComparison {\n    columnComparison {\n      ...ColumnComparison\n    }\n    tableComparison {\n      ...StringMatchingResult\n    }\n    joinExpressionComparison {\n      ...BinaryExpressionComparison\n    }\n    whereComparison {\n      ...BinaryExpressionComparison\n    }\n    additionalComparisons {\n      selectComparisons {\n        ...SelectAdditionalComparison\n      }\n      insertComparison {\n        ...StringMatchingResult\n      }\n    }\n  }\n  executionResult {\n    ...SqlExecutionResult\n  }\n}\n    ${ColumnComparisonFragmentDoc}\n${StringMatchingResultFragmentDoc}\n${BinaryExpressionComparisonFragmentDoc}\n${SelectAdditionalComparisonFragmentDoc}\n${SqlExecutionResultFragmentDoc}`;\nexport const SqlCorrectionResultFragmentDoc = gql`\n    fragment SqlCorrectionResult on SqlCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...SqlResult\n  }\n}\n    ${SqlResultFragmentDoc}`;\nexport const UmlSolutionClassFragmentDoc = gql`\n    fragment UmlSolutionClass on UmlClass {\n  classType\n  name\n  attributes {\n    __typename\n  }\n  methods {\n    __typename\n  }\n}\n    `;\nexport const UmlClassMatchFragmentDoc = gql`\n    fragment UmlClassMatch on UmlClassMatch {\n  matchType\n  userArg {\n    ...UmlSolutionClass\n  }\n  sampleArg {\n    ...UmlSolutionClass\n  }\n  analysisResult {\n    __typename\n  }\n}\n    ${UmlSolutionClassFragmentDoc}`;\nexport const UmlClassMatchingResultFragmentDoc = gql`\n    fragment UmlClassMatchingResult on UmlClassMatchingResult {\n  allMatches {\n    ...UmlClassMatch\n  }\n  notMatchedForUser {\n    ...UmlSolutionClass\n  }\n  notMatchedForSample {\n    ...UmlSolutionClass\n  }\n  points\n  maxPoints\n}\n    ${UmlClassMatchFragmentDoc}\n${UmlSolutionClassFragmentDoc}`;\nexport const UmlAssociationFragmentDoc = gql`\n    fragment UmlAssociation on UmlAssociation {\n  assocType\n  assocName\n  firstEnd\n  firstMult\n  secondEnd\n  secondMult\n}\n    `;\nexport const UmlAssociationMatchFragmentDoc = gql`\n    fragment UmlAssociationMatch on UmlAssociationMatch {\n  matchType\n  userArg {\n    ...UmlAssociation\n  }\n  sampleArg {\n    ...UmlAssociation\n  }\n  analysisResult {\n    assocTypeEqual\n    correctAssocType\n    multiplicitiesEqual\n  }\n}\n    ${UmlAssociationFragmentDoc}`;\nexport const UmlAssociationMatchingResultFragmentDoc = gql`\n    fragment UmlAssociationMatchingResult on UmlAssociationMatchingResult {\n  allMatches {\n    ...UmlAssociationMatch\n  }\n  notMatchedForUser {\n    ...UmlAssociation\n  }\n  notMatchedForSample {\n    ...UmlAssociation\n  }\n  points\n  maxPoints\n}\n    ${UmlAssociationMatchFragmentDoc}\n${UmlAssociationFragmentDoc}`;\nexport const UmlImplementationFragmentDoc = gql`\n    fragment UmlImplementation on UmlImplementation {\n  subClass\n  superClass\n}\n    `;\nexport const UmlImplementationMatchFragmentDoc = gql`\n    fragment UmlImplementationMatch on UmlImplementationMatch {\n  matchType\n  userArg {\n    ...UmlImplementation\n  }\n  sampleArg {\n    ...UmlImplementation\n  }\n}\n    ${UmlImplementationFragmentDoc}`;\nexport const UmlImplementationMatchingResultFragmentDoc = gql`\n    fragment UmlImplementationMatchingResult on UmlImplementationMatchingResult {\n  allMatches {\n    ...UmlImplementationMatch\n  }\n  notMatchedForUser {\n    ...UmlImplementation\n  }\n  notMatchedForSample {\n    ...UmlImplementation\n  }\n  points\n  maxPoints\n}\n    ${UmlImplementationMatchFragmentDoc}\n${UmlImplementationFragmentDoc}`;\nexport const UmlResultFragmentDoc = gql`\n    fragment UmlResult on UmlResult {\n  points\n  maxPoints\n  classResult {\n    ...UmlClassMatchingResult\n  }\n  assocResult {\n    ...UmlAssociationMatchingResult\n  }\n  implResult {\n    ...UmlImplementationMatchingResult\n  }\n}\n    ${UmlClassMatchingResultFragmentDoc}\n${UmlAssociationMatchingResultFragmentDoc}\n${UmlImplementationMatchingResultFragmentDoc}`;\nexport const UmlCorrectionResultFragmentDoc = gql`\n    fragment UmlCorrectionResult on UmlCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...UmlResult\n  }\n}\n    ${UmlResultFragmentDoc}`;\nexport const GradedTextContentResultFragmentDoc = gql`\n    fragment GradedTextContentResult on GradedTextResult {\n  keyName\n  awaitedContent\n  maybeFoundContent\n  isSuccessful\n  points\n  maxPoints\n}\n    `;\nexport const GradedHtmlTaskResultFragmentDoc = gql`\n    fragment GradedHtmlTaskResult on GradedHtmlTaskResult {\n  id\n  success\n  elementFound\n  textContentResult {\n    ...GradedTextContentResult\n  }\n  attributeResults {\n    ...GradedTextContentResult\n  }\n  isSuccessful\n  points\n  maxPoints\n}\n    ${GradedTextContentResultFragmentDoc}`;\nexport const GradedJsHtmlElementSpecResultFragmentDoc = gql`\n    fragment GradedJsHtmlElementSpecResult on GradedJsHtmlElementSpecResult {\n  id\n}\n    `;\nexport const GradedJsActionResultFragmentDoc = gql`\n    fragment GradedJsActionResult on GradedJsActionResult {\n  jsAction {\n    __typename\n  }\n  actionPerformed\n  points\n  maxPoints\n}\n    `;\nexport const GradedJsTaskResultFragmentDoc = gql`\n    fragment GradedJsTaskResult on GradedJsTaskResult {\n  id\n  gradedPreResults {\n    ...GradedJsHtmlElementSpecResult\n  }\n  gradedJsActionResult {\n    ...GradedJsActionResult\n  }\n  gradedPostResults {\n    ...GradedJsHtmlElementSpecResult\n  }\n  success\n  points\n  maxPoints\n}\n    ${GradedJsHtmlElementSpecResultFragmentDoc}\n${GradedJsActionResultFragmentDoc}`;\nexport const WebResultFragmentDoc = gql`\n    fragment WebResult on WebResult {\n  points\n  maxPoints\n  gradedHtmlTaskResults {\n    ...GradedHtmlTaskResult\n  }\n  gradedJsTaskResults {\n    ...GradedJsTaskResult\n  }\n}\n    ${GradedHtmlTaskResultFragmentDoc}\n${GradedJsTaskResultFragmentDoc}`;\nexport const WebCorrectionResultFragmentDoc = gql`\n    fragment WebCorrectionResult on WebCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...WebResult\n  }\n}\n    ${WebResultFragmentDoc}`;\nexport const ElementLineFragmentDoc = gql`\n    fragment ElementLine on ElementLine {\n  elementName\n  elementDefinition {\n    elementName\n    content\n  }\n  attributeLists {\n    elementName\n    attributeDefinitions\n  }\n}\n    `;\nexport const XmlElementLineAnalysisResultFragmentDoc = gql`\n    fragment XmlElementLineAnalysisResult on ElementLineAnalysisResult {\n  attributesCorrect\n  correctAttributes\n  contentCorrect\n  correctContent\n}\n    `;\nexport const XmlElementLineMatchFragmentDoc = gql`\n    fragment XmlElementLineMatch on ElementLineMatch {\n  matchType\n  userArg {\n    ...ElementLine\n  }\n  sampleArg {\n    ...ElementLine\n  }\n  analysisResult {\n    ...XmlElementLineAnalysisResult\n  }\n}\n    ${ElementLineFragmentDoc}\n${XmlElementLineAnalysisResultFragmentDoc}`;\nexport const XmlElementLineMatchingResultFragmentDoc = gql`\n    fragment XmlElementLineMatchingResult on XmlElementLineComparisonMatchingResult {\n  allMatches {\n    ...XmlElementLineMatch\n  }\n  notMatchedForUser {\n    ...ElementLine\n  }\n  notMatchedForSample {\n    ...ElementLine\n  }\n}\n    ${XmlElementLineMatchFragmentDoc}\n${ElementLineFragmentDoc}`;\nexport const XmlGrammarResultFragmentDoc = gql`\n    fragment XmlGrammarResult on XmlGrammarResult {\n  parseErrors {\n    msg\n    parsedLine\n  }\n  results {\n    points\n    maxPoints\n    ...XmlElementLineMatchingResult\n  }\n}\n    ${XmlElementLineMatchingResultFragmentDoc}`;\nexport const XmlErrorFragmentDoc = gql`\n    fragment XmlError on XmlError {\n  success\n  line\n  errorType\n  errorMessage\n}\n    `;\nexport const XmlDocumentResultFragmentDoc = gql`\n    fragment XmlDocumentResult on XmlDocumentResult {\n  errors {\n    ...XmlError\n  }\n}\n    ${XmlErrorFragmentDoc}`;\nexport const XmlResultFragmentDoc = gql`\n    fragment XmlResult on XmlResult {\n  points\n  maxPoints\n  successType\n  grammarResult {\n    ...XmlGrammarResult\n  }\n  documentResult {\n    ...XmlDocumentResult\n  }\n}\n    ${XmlGrammarResultFragmentDoc}\n${XmlDocumentResultFragmentDoc}`;\nexport const XmlCorrectionResultFragmentDoc = gql`\n    fragment XmlCorrectionResult on XmlCorrectionResult {\n  solutionSaved\n  resultSaved\n  proficienciesUpdated\n  result {\n    ...XmlResult\n  }\n}\n    ${XmlResultFragmentDoc}`;\nexport const LessonIdentifierFragmentDoc = gql`\n    fragment LessonIdentifier on Lesson {\n  lessonId\n  title\n  description\n  video\n}\n    `;\nexport const LessonOverviewFragmentDoc = gql`\n    fragment LessonOverview on Lesson {\n  title\n  description\n  video\n  contentCount\n}\n    `;\nexport const LessonTextContentFragmentDoc = gql`\n    fragment LessonTextContent on LessonTextContent {\n  __typename\n  contentId\n  content\n}\n    `;\nexport const LessonMultipleChoiceQuestionAnswerFragmentDoc = gql`\n    fragment LessonMultipleChoiceQuestionAnswer on LessonMultipleChoiceQuestionAnswer {\n  id\n  answer\n  isCorrect\n}\n    `;\nexport const LessonMultipleChoiceQuestionFragmentDoc = gql`\n    fragment LessonMultipleChoiceQuestion on LessonMultipleChoiceQuestion {\n  id\n  questionText\n  answers {\n    ...LessonMultipleChoiceQuestionAnswer\n  }\n}\n    ${LessonMultipleChoiceQuestionAnswerFragmentDoc}`;\nexport const LessonMultipleChoiceQuestionContentFragmentDoc = gql`\n    fragment LessonMultipleChoiceQuestionContent on LessonMultipleChoiceQuestionsContent {\n  __typename\n  contentId\n  questions {\n    ...LessonMultipleChoiceQuestion\n  }\n}\n    ${LessonMultipleChoiceQuestionFragmentDoc}`;\nexport const LessonAsTextFragmentDoc = gql`\n    fragment LessonAsText on Lesson {\n  lessonId\n  title\n  description\n  contents {\n    ... on LessonTextContent {\n      ...LessonTextContent\n    }\n    ... on LessonMultipleChoiceQuestionsContent {\n      ...LessonMultipleChoiceQuestionContent\n    }\n  }\n}\n    ${LessonTextContentFragmentDoc}\n${LessonMultipleChoiceQuestionContentFragmentDoc}`;\nexport const CollectionToolFragmentDoc = gql`\n    fragment CollectionTool on CollectionTool {\n  id\n  name\n  state\n  collectionCount\n  lessonCount\n  exerciseCount\n}\n    `;\nexport const LevelFragmentDoc = gql`\n    fragment Level on Level {\n  title\n  levelIndex\n}\n    `;\nexport const TopicFragmentDoc = gql`\n    fragment Topic on Topic {\n  abbreviation\n  title\n  maxLevel {\n    ...Level\n  }\n}\n    ${LevelFragmentDoc}`;\nexport const UserProficiencyFragmentDoc = gql`\n    fragment UserProficiency on UserProficiency {\n  topic {\n    ...Topic\n  }\n  points\n  pointsForNextLevel\n  level {\n    ...Level\n  }\n}\n    ${TopicFragmentDoc}\n${LevelFragmentDoc}`;\nexport const CollectionValuesFragmentDoc = gql`\n    fragment CollectionValues on ExerciseCollection {\n  collectionId\n  title\n  exerciseCount\n}\n    `;\nexport const TopicWithLevelFragmentDoc = gql`\n    fragment TopicWithLevel on TopicWithLevel {\n  topic {\n    ...Topic\n  }\n  level {\n    ...Level\n  }\n}\n    ${TopicFragmentDoc}\n${LevelFragmentDoc}`;\nexport const FieldsPartFragmentDoc = gql`\n    fragment FieldsPart on ExPart {\n  id\n  name\n  solved\n}\n    `;\nexport const FieldsForLinkFragmentDoc = gql`\n    fragment FieldsForLink on Exercise {\n  exerciseId\n  collectionId\n  toolId\n  title\n  difficulty\n  topicsWithLevels {\n    ...TopicWithLevel\n  }\n  parts {\n    ...FieldsPart\n  }\n}\n    ${TopicWithLevelFragmentDoc}\n${FieldsPartFragmentDoc}`;\nexport const CollOverviewToolFragmentDoc = gql`\n    fragment CollOverviewTool on CollectionTool {\n  id\n  name\n  collection(collId: $collId) {\n    collectionId\n    title\n    exercises {\n      ...FieldsForLink\n    }\n  }\n}\n    ${FieldsForLinkFragmentDoc}`;\nexport const PartFragmentDoc = gql`\n    fragment Part on ExPart {\n  id\n  name\n  isEntryPart\n  solved\n}\n    `;\nexport const ExerciseOverviewFragmentDoc = gql`\n    fragment ExerciseOverview on Exercise {\n  exerciseId\n  title\n  text\n  parts {\n    ...Part\n  }\n}\n    ${PartFragmentDoc}`;\nexport const EbnfExerciseContentFragmentDoc = gql`\n    fragment EbnfExerciseContent on EbnfExerciseContent {\n  sampleSolutions\n}\n    `;\nexport const ExerciseFileFragmentDoc = gql`\n    fragment ExerciseFile on ExerciseFile {\n  name\n  fileType\n  content\n  editable\n}\n    `;\nexport const FilesSolutionFragmentDoc = gql`\n    fragment FilesSolution on FilesSolution {\n  __typename\n  files {\n    ...ExerciseFile\n  }\n}\n    ${ExerciseFileFragmentDoc}`;\nexport const FlaskExerciseContentFragmentDoc = gql`\n    fragment FlaskExerciseContent on FlaskExerciseContent {\n  __typename\n  testConfig {\n    tests {\n      id\n      testName\n      description\n    }\n  }\n  files {\n    ...ExerciseFile\n  }\n  flaskSampleSolutions: sampleSolutions {\n    ...FilesSolution\n  }\n}\n    ${ExerciseFileFragmentDoc}\n${FilesSolutionFragmentDoc}`;\nexport const UnitTestPartFragmentDoc = gql`\n    fragment UnitTestPart on UnitTestPart {\n  unitTestFiles {\n    ...ExerciseFile\n  }\n}\n    ${ExerciseFileFragmentDoc}`;\nexport const ProgrammingExerciseContentFragmentDoc = gql`\n    fragment ProgrammingExerciseContent on ProgrammingExerciseContent {\n  unitTestPart {\n    ...UnitTestPart\n  }\n  implementationPart {\n    files {\n      ...ExerciseFile\n    }\n  }\n  programmingSampleSolutions: sampleSolutions {\n    ...FilesSolution\n  }\n  programmingPart: part(partId: $partId)\n}\n    ${UnitTestPartFragmentDoc}\n${ExerciseFileFragmentDoc}\n${FilesSolutionFragmentDoc}`;\nexport const RegexExerciseContentFragmentDoc = gql`\n    fragment RegexExerciseContent on RegexExerciseContent {\n  regexSampleSolutions: sampleSolutions\n  regexPart: part(partId: $partId)\n}\n    `;\nexport const SqlExerciseContentFragmentDoc = gql`\n    fragment SqlExerciseContent on SqlExerciseContent {\n  hint\n  sqlSampleSolutions: sampleSolutions\n  sqlPart: part(partId: $partId)\n  sqlDbContents {\n    ...SqlQueryResult\n  }\n}\n    ${SqlQueryResultFragmentDoc}`;\nexport const UmlAttributeFragmentDoc = gql`\n    fragment UmlAttribute on UmlAttribute {\n  isAbstract\n  isDerived\n  isStatic\n  visibility\n  memberName\n  memberType\n}\n    `;\nexport const UmlMethodFragmentDoc = gql`\n    fragment UmlMethod on UmlMethod {\n  isAbstract\n  isStatic\n  visibility\n  memberName\n  parameters\n  memberType\n}\n    `;\nexport const UmlClassFragmentDoc = gql`\n    fragment UmlClass on UmlClass {\n  classType\n  name\n  attributes {\n    ...UmlAttribute\n  }\n  methods {\n    ...UmlMethod\n  }\n}\n    ${UmlAttributeFragmentDoc}\n${UmlMethodFragmentDoc}`;\nexport const UmlClassDiagramFragmentDoc = gql`\n    fragment UmlClassDiagram on UmlClassDiagram {\n  classes {\n    ...UmlClass\n  }\n  associations {\n    ...UmlAssociation\n  }\n  implementations {\n    ...UmlImplementation\n  }\n}\n    ${UmlClassFragmentDoc}\n${UmlAssociationFragmentDoc}\n${UmlImplementationFragmentDoc}`;\nexport const UmlExerciseContentFragmentDoc = gql`\n    fragment UmlExerciseContent on UmlExerciseContent {\n  toIgnore\n  mappings {\n    key\n    value\n  }\n  umlSampleSolutions: sampleSolutions {\n    ...UmlClassDiagram\n  }\n  umlPart: part(partId: $partId)\n}\n    ${UmlClassDiagramFragmentDoc}`;\nexport const WebExerciseContentFragmentDoc = gql`\n    fragment WebExerciseContent on WebExerciseContent {\n  files {\n    ...ExerciseFile\n  }\n  siteSpec {\n    fileName\n    htmlTasks {\n      text\n    }\n    jsTaskCount\n  }\n  webSampleSolutions: sampleSolutions {\n    ...FilesSolution\n  }\n  webPart: part(partId: $partId)\n}\n    ${ExerciseFileFragmentDoc}\n${FilesSolutionFragmentDoc}`;\nexport const XmlSolutionFragmentDoc = gql`\n    fragment XmlSolution on XmlSolution {\n  __typename\n  document\n  grammar\n}\n    `;\nexport const XmlExerciseContentFragmentDoc = gql`\n    fragment XmlExerciseContent on XmlExerciseContent {\n  rootNode\n  grammarDescription\n  xmlSampleSolutions: sampleSolutions {\n    ...XmlSolution\n  }\n  xmlPart: part(partId: $partId)\n}\n    ${XmlSolutionFragmentDoc}`;\nexport const ExerciseSolveFieldsFragmentDoc = gql`\n    fragment ExerciseSolveFields on Exercise {\n  exerciseId\n  collectionId\n  toolId\n  title\n  text\n  content {\n    __typename\n    ...EbnfExerciseContent\n    ...FlaskExerciseContent\n    ...ProgrammingExerciseContent\n    ...ProgrammingExerciseContent\n    ...RegexExerciseContent\n    ...SqlExerciseContent\n    ...UmlExerciseContent\n    ...WebExerciseContent\n    ...XmlExerciseContent\n  }\n}\n    ${EbnfExerciseContentFragmentDoc}\n${FlaskExerciseContentFragmentDoc}\n${ProgrammingExerciseContentFragmentDoc}\n${RegexExerciseContentFragmentDoc}\n${SqlExerciseContentFragmentDoc}\n${UmlExerciseContentFragmentDoc}\n${WebExerciseContentFragmentDoc}\n${XmlExerciseContentFragmentDoc}`;\nexport const LoggedInUserWithTokenFragmentDoc = gql`\n    fragment LoggedInUserWithToken on LoggedInUserWithToken {\n  loggedInUser {\n    username\n    isAdmin\n  }\n  jwt\n}\n    `;\nexport const FlaskCorrectionDocument = gql`\n    mutation FlaskCorrection($collId: Int!, $exId: Int!, $part: FlaskExercisePart!, $solution: FilesSolutionInput!) {\n  me {\n    flaskExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...FlaskCorrectionResult\n      }\n    }\n  }\n}\n    ${FlaskCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class FlaskCorrectionGQL extends Apollo.Mutation<FlaskCorrectionMutation, FlaskCorrectionMutationVariables> {\n    document = FlaskCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const ProgrammingCorrectionDocument = gql`\n    mutation ProgrammingCorrection($collId: Int!, $exId: Int!, $part: ProgExPart!, $solution: FilesSolutionInput!) {\n  me {\n    programmingExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...ProgrammingCorrectionResult\n      }\n    }\n  }\n}\n    ${ProgrammingCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ProgrammingCorrectionGQL extends Apollo.Mutation<ProgrammingCorrectionMutation, ProgrammingCorrectionMutationVariables> {\n    document = ProgrammingCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const RegexCorrectionDocument = gql`\n    mutation RegexCorrection($collId: Int!, $exId: Int!, $part: RegexExPart!, $solution: String!) {\n  me {\n    regexExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...RegexCorrectionResult\n      }\n    }\n  }\n}\n    ${RegexCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class RegexCorrectionGQL extends Apollo.Mutation<RegexCorrectionMutation, RegexCorrectionMutationVariables> {\n    document = RegexCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const SqlCorrectionDocument = gql`\n    mutation SqlCorrection($collId: Int!, $exId: Int!, $part: SqlExPart!, $solution: String!) {\n  me {\n    sqlExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...SqlCorrectionResult\n      }\n    }\n  }\n}\n    ${SqlCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class SqlCorrectionGQL extends Apollo.Mutation<SqlCorrectionMutation, SqlCorrectionMutationVariables> {\n    document = SqlCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const UmlCorrectionDocument = gql`\n    mutation UmlCorrection($collId: Int!, $exId: Int!, $part: UmlExPart!, $solution: UmlClassDiagramInput!) {\n  me {\n    umlExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...UmlCorrectionResult\n      }\n    }\n  }\n}\n    ${UmlCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class UmlCorrectionGQL extends Apollo.Mutation<UmlCorrectionMutation, UmlCorrectionMutationVariables> {\n    document = UmlCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const WebCorrectionDocument = gql`\n    mutation WebCorrection($collId: Int!, $exId: Int!, $part: WebExPart!, $solution: FilesSolutionInput!) {\n  me {\n    webExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...WebCorrectionResult\n      }\n    }\n  }\n}\n    ${WebCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class WebCorrectionGQL extends Apollo.Mutation<WebCorrectionMutation, WebCorrectionMutationVariables> {\n    document = WebCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const XmlCorrectionDocument = gql`\n    mutation XmlCorrection($collId: Int!, $exId: Int!, $part: XmlExPart!, $solution: XmlSolutionInput!) {\n  me {\n    xmlExercise(collId: $collId, exId: $exId) {\n      correct(part: $part, solution: $solution) {\n        ...XmlCorrectionResult\n      }\n    }\n  }\n}\n    ${XmlCorrectionResultFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class XmlCorrectionGQL extends Apollo.Mutation<XmlCorrectionMutation, XmlCorrectionMutationVariables> {\n    document = XmlCorrectionDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const LessonsForToolDocument = gql`\n    query LessonsForTool($toolId: String!) {\n  me {\n    tool(toolId: $toolId) {\n      name\n      lessons {\n        ...LessonIdentifier\n      }\n    }\n  }\n}\n    ${LessonIdentifierFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class LessonsForToolGQL extends Apollo.Query<LessonsForToolQuery, LessonsForToolQueryVariables> {\n    document = LessonsForToolDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const LessonOverviewDocument = gql`\n    query LessonOverview($toolId: String!, $lessonId: Int!) {\n  me {\n    tool(toolId: $toolId) {\n      lesson(lessonId: $lessonId) {\n        ...LessonOverview\n      }\n    }\n  }\n}\n    ${LessonOverviewFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class LessonOverviewGQL extends Apollo.Query<LessonOverviewQuery, LessonOverviewQueryVariables> {\n    document = LessonOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const LessonAsTextDocument = gql`\n    query LessonAsText($toolId: String!, $lessonId: Int!) {\n  me {\n    tool(toolId: $toolId) {\n      lesson(lessonId: $lessonId) {\n        ...LessonAsText\n      }\n    }\n  }\n}\n    ${LessonAsTextFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class LessonAsTextGQL extends Apollo.Query<LessonAsTextQuery, LessonAsTextQueryVariables> {\n    document = LessonAsTextDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const LessonAsVideoDocument = gql`\n    query LessonAsVideo($toolId: String!, $lessonId: Int!) {\n  me {\n    tool(toolId: $toolId) {\n      lesson(lessonId: $lessonId) {\n        title\n        video\n      }\n    }\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class LessonAsVideoGQL extends Apollo.Query<LessonAsVideoQuery, LessonAsVideoQueryVariables> {\n    document = LessonAsVideoDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const ToolOverviewDocument = gql`\n    query ToolOverview {\n  me {\n    tools {\n      ...CollectionTool\n    }\n  }\n}\n    ${CollectionToolFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ToolOverviewGQL extends Apollo.Query<ToolOverviewQuery, ToolOverviewQueryVariables> {\n    document = ToolOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CollectionToolOverviewDocument = gql`\n    query CollectionToolOverview($toolId: String!) {\n  me {\n    tool(toolId: $toolId) {\n      id\n      name\n      collectionCount\n      exerciseCount\n      lessonCount\n      proficiencies {\n        ...UserProficiency\n      }\n    }\n  }\n}\n    ${UserProficiencyFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CollectionToolOverviewGQL extends Apollo.Query<CollectionToolOverviewQuery, CollectionToolOverviewQueryVariables> {\n    document = CollectionToolOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const AllExercisesOverviewDocument = gql`\n    query AllExercisesOverview($toolId: String!) {\n  me {\n    tool(toolId: $toolId) {\n      allExercises {\n        topicsWithLevels {\n          ...TopicWithLevel\n        }\n        ...FieldsForLink\n      }\n    }\n  }\n}\n    ${TopicWithLevelFragmentDoc}\n${FieldsForLinkFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class AllExercisesOverviewGQL extends Apollo.Query<AllExercisesOverviewQuery, AllExercisesOverviewQueryVariables> {\n    document = AllExercisesOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CollectionListDocument = gql`\n    query CollectionList($toolId: String!) {\n  me {\n    tool(toolId: $toolId) {\n      id\n      name\n      collections {\n        ...CollectionValues\n      }\n    }\n  }\n}\n    ${CollectionValuesFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CollectionListGQL extends Apollo.Query<CollectionListQuery, CollectionListQueryVariables> {\n    document = CollectionListDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const CollectionOverviewDocument = gql`\n    query CollectionOverview($toolId: String!, $collId: Int!) {\n  me {\n    tool(toolId: $toolId) {\n      ...CollOverviewTool\n    }\n  }\n}\n    ${CollOverviewToolFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class CollectionOverviewGQL extends Apollo.Query<CollectionOverviewQuery, CollectionOverviewQueryVariables> {\n    document = CollectionOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const ExerciseOverviewDocument = gql`\n    query ExerciseOverview($toolId: String!, $collId: Int!, $exId: Int!) {\n  me {\n    tool(toolId: $toolId) {\n      id\n      name\n      collection(collId: $collId) {\n        collectionId\n        title\n        exercise(exId: $exId) {\n          ...ExerciseOverview\n        }\n      }\n    }\n  }\n}\n    ${ExerciseOverviewFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ExerciseOverviewGQL extends Apollo.Query<ExerciseOverviewQuery, ExerciseOverviewQueryVariables> {\n    document = ExerciseOverviewDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const ExerciseDocument = gql`\n    query Exercise($toolId: String!, $collId: Int!, $exId: Int!, $partId: String!) {\n  me {\n    tool(toolId: $toolId) {\n      collection(collId: $collId) {\n        exercise(exId: $exId) {\n          ...ExerciseSolveFields\n        }\n      }\n    }\n  }\n}\n    ${ExerciseSolveFieldsFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class ExerciseGQL extends Apollo.Query<ExerciseQuery, ExerciseQueryVariables> {\n    document = ExerciseDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const RegisterDocument = gql`\n    mutation Register($username: String!, $firstPassword: String!, $secondPassword: String!) {\n  register(\n    registerValues: {username: $username, firstPassword: $firstPassword, secondPassword: $secondPassword}\n  )\n}\n    `;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class RegisterGQL extends Apollo.Mutation<RegisterMutation, RegisterMutationVariables> {\n    document = RegisterDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const LoginDocument = gql`\n    mutation Login($username: String!, $password: String!) {\n  login(credentials: {username: $username, password: $password}) {\n    ...LoggedInUserWithToken\n  }\n}\n    ${LoggedInUserWithTokenFragmentDoc}`;\n\n  @Injectable({\n    providedIn: 'root'\n  })\n  export class LoginGQL extends Apollo.Mutation<LoginMutation, LoginMutationVariables> {\n    document = LoginDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }","import {Component, OnInit} from '@angular/core';\nimport {RegisterGQL} from '../../_services/apollo_services';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../../_services/authentication.service';\nimport {first} from 'rxjs/operators';\n\n@Component({templateUrl: './register-form.component.html'})\nexport class RegisterFormComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  registeredUsername: string | undefined;\n\n  constructor(\n    private router: Router,\n    private registerGQL: RegisterGQL,\n    private authenticationService: AuthenticationService\n  ) {\n\n    if (this.authenticationService.currentUserValue) {\n      // noinspection JSIgnoredPromiseFromCall\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      firstPassword: new FormControl('', [Validators.required]),\n      secondPassword: new FormControl('', [Validators.required]),\n    });\n  }\n\n  private get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    const username = this.f.username.value;\n    const firstPassword = this.f.firstPassword.value;\n    const secondPassword = this.f.secondPassword.value;\n\n    if (this.registerForm.invalid || firstPassword !== secondPassword) {\n      alert('Daten sind nicht valide!');\n      return;\n    }\n\n    this.loading = true;\n\n    this.registerGQL\n      .mutate({username, firstPassword, secondPassword})\n      .pipe(first())\n      .subscribe(\n        ({data}) => {\n          this.loading = false;\n          this.registeredUsername = data.register;\n        },\n        (err) => this.loading = false);\n  }\n\n}\n","<div class=\"container\">\n\n  <h1 class=\"title is-3 has-text-centered\" i18n>Registrieren</h1>\n\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"field\">\n      <label for=\"username\" class=\"label\"><span i18n>Nutzername</span>:</label>\n      <div class=\"control\">\n        <input type=\"text\" id=\"username\" formControlName=\"username\" class=\"input\" required\n               placeholder=\"Nutzername\" i18n-placeholder autofocus>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label for=\"firstPassword\" class=\"label\"><span i18n>Passwort</span>:</label>\n      <div class=\"control\">\n        <input type=\"password\" id=\"firstPassword\" formControlName=\"firstPassword\" class=\"input\"\n               placeholder=\"Passwort\" i18n-placeholder required>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label for=\"secondPassword\" class=\"label\"><span i18n>Passwort wiederholen</span>:</label>\n      <div class=\"control\">\n        <input type=\"password\" id=\"secondPassword\" formControlName=\"secondPassword\" class=\"input\"\n               placeholder=\"Passwort wiederholen\" i18n-placeholder required>\n      </div>\n    </div>\n\n    <div class=\"notification\" *ngIf=\"registeredUsername\">\n      <span i18n>Nutzer</span>&nbsp;<code>{{registeredUsername}}</code>&nbsp;<span i18n>wurde erfolgreich registriert</span>.\n    </div>\n\n    <br>\n\n    <div class=\"field\">\n      <div class=\"control\">\n        <button class=\"button is-link\" i18n>Registrieren</button>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n","import {flatMapArray} from '../../../../helpers';\n\nconst HTML_REPLACERS: Map<RegExp, string> = new Map([\n  [/nand/g, '&#x22bc;'], [/nor/g, '&#x22bd;'],\n  [/xor/g, '&oplus;'], [/not /g, '&not;'],\n  [/and/g, '&and;'], [/or/g, '&or;'],\n  [/impl/g, '&rArr;'], [/equiv/g, '&hArr;']\n]);\n\nexport function calculateAssignments(variables: BooleanVariable[]): Map<string, boolean>[] {\n  let assignments: Map<string, boolean>[] = [];\n\n  for (const variable of variables) {\n\n    if (assignments.length === 0) {\n      assignments = [\n        new Map([[variable.variable, false]]),\n        new Map([[variable.variable, true]])\n      ];\n    } else {\n      assignments = flatMapArray(\n        assignments,\n        (assignment: Map<string, boolean>) => [\n          new Map([...assignment, [variable.variable, false]]),\n          new Map([...assignment, [variable.variable, true]])\n        ]\n      );\n    }\n  }\n\n  return assignments;\n}\n\n// Boolean nodes\nexport abstract class BooleanNode {\n\n  private variables: BooleanVariable[] | undefined;\n\n  getVariables(): BooleanVariable[] {\n    if (!this.variables) {\n      this.variables = this.calculateVariables()\n        .sort((v1, v2) => v1.variable.charCodeAt(0) - v2.variable.charCodeAt(0));\n    }\n\n    return this.variables;\n  }\n\n  protected abstract calculateVariables(): BooleanVariable[];\n\n  abstract getSubFormulas(): BooleanNode[];\n\n  abstract evaluate(assignments: Map<string, boolean>): boolean | undefined;\n\n  abstract asString(): string;\n\n  asHtmlString(): string {\n    let base: string = this.asString();\n\n    HTML_REPLACERS.forEach((replacer, replaced) => base = base.replace(replaced, replacer));\n\n    return base;\n  }\n\n}\n\nexport class BooleanVariable extends BooleanNode {\n  constructor(readonly variable: string) {\n    super();\n  }\n\n  evaluate(assignments: Map<string, boolean>): boolean | undefined {\n    if (assignments.has(this.variable)) {\n      return assignments.get(this.variable);\n    } else {\n      return undefined;\n    }\n  }\n\n  protected calculateVariables(): BooleanVariable[] {\n    return [this];\n  }\n\n  asString(): string {\n    return this.variable;\n  }\n\n  getSubFormulas(): BooleanNode[] {\n    return [];\n  }\n\n}\n\nexport class BooleanConstant extends BooleanNode {\n  constructor(readonly value: boolean) {\n    super();\n  }\n\n  evaluate(assignments: Map<string, boolean>): boolean | undefined {\n    return this.value;\n  }\n\n  protected calculateVariables(): BooleanVariable[] {\n    return [];\n  }\n\n  asString(): string {\n    return this.value ? '1' : '0';\n  }\n\n  getSubFormulas(): BooleanNode[] {\n    return [];\n  }\n\n}\n\nexport const BooleanTrue: BooleanConstant = new BooleanConstant(true);\n\nexport const BooleanFalse: BooleanConstant = new BooleanConstant(false);\n\nexport class BooleanNot extends BooleanNode {\n  constructor(readonly child: BooleanNode) {\n    super();\n  }\n\n  evaluate(assignments: Map<string, boolean>): boolean | undefined {\n    return !(this.child.evaluate(assignments));\n  }\n\n  protected calculateVariables(): BooleanVariable[] {\n    return this.child.getVariables();\n  }\n\n  asString(): string {\n    const childString = this.child instanceof BooleanBinaryNode ? '(' + this.child.asString() + ')' : this.child.asString();\n    return 'not ' + childString;\n  }\n\n  getSubFormulas(): BooleanNode[] {\n    return [this.child];\n  }\n\n}\n\n// Boolean binary nodes\n\nexport abstract class BooleanBinaryNode extends BooleanNode {\n\n  protected abstract operator: string;\n\n\n  constructor(readonly left: BooleanNode, readonly right: BooleanNode) {\n    super();\n  }\n\n  protected calculateVariables(): BooleanVariable[] {\n    const leftVars: BooleanVariable[] = this.left.getVariables();\n    const rightVars: BooleanVariable[] = this.right.getVariables();\n\n    return Array.from(new Set(leftVars.concat(rightVars)));\n  }\n\n  asString(): string {\n    // FIXME: test parentheses!\n    const leftChildString: string = this.left instanceof BooleanBinaryNode ? `(${this.left.asString()})` : this.left.asString();\n    const rightChildString: string = this.right instanceof BooleanBinaryNode ? `(${this.right.asString()})` : this.right.asString();\n\n    return leftChildString + ' ' + this.operator + ' ' + rightChildString;\n  }\n\n  evaluate(assignments: Map<string, boolean>): boolean | undefined {\n    return this.evalFunc(this.left.evaluate(assignments), this.right.evaluate(assignments));\n  }\n\n  getSubFormulas(): BooleanNode[] {\n    const maybeLeftSubFormula = (this.left instanceof BooleanVariable) ? [] : [this.left];\n    const maybeRightSubFormula = (this.right instanceof BooleanVariable) ? [] : [this.right];\n\n    return maybeLeftSubFormula.concat(maybeRightSubFormula);\n\n  }\n\n  protected abstract evalFunc(a: boolean, b: boolean): boolean;\n}\n\nexport class BooleanAnd extends BooleanBinaryNode {\n  protected operator = 'and';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return a && b;\n  }\n}\n\nexport class BooleanOr extends BooleanBinaryNode {\n  protected operator = 'or';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return a || b;\n  }\n}\n\nexport class BooleanNAnd extends BooleanBinaryNode {\n  protected operator = 'nand';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return !(a && b);\n  }\n}\n\nexport class BooleanNOr extends BooleanBinaryNode {\n  protected operator = 'nor';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return !(a || b);\n  }\n}\n\nexport class BooleanXOr extends BooleanBinaryNode {\n  protected operator = 'xor';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return (a && !b) || (!a && b);\n  }\n}\n\nexport class BooleanXNor extends BooleanBinaryNode {\n  protected operator = 'xnor';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return (!a || b) && (a || !b);\n  }\n}\n\nexport class BooleanEquivalency extends BooleanBinaryNode {\n  protected operator = 'equiv';\n\n  protected evalFunc(a: boolean, b: boolean) {\n    return a === b;\n  }\n}\n\nexport class BooleanImplication extends BooleanBinaryNode {\n  protected operator = 'impl';\n\n  protected evalFunc(a: boolean, b: boolean): boolean {\n    return !a || b;\n  }\n}\n\nexport function instantiateOperator(leftOp: BooleanNode, opString: string, rightOp: BooleanNode): BooleanBinaryNode {\n  switch (opString) {\n    case 'and':\n      return new BooleanAnd(leftOp, rightOp);\n    case 'or':\n      return new BooleanOr(leftOp, rightOp);\n    case 'xor':\n      return new BooleanXOr(leftOp, rightOp);\n    case 'nor':\n      return new BooleanNOr(leftOp, rightOp);\n    case 'xnor':\n      return new BooleanXNor(leftOp, rightOp);\n    case 'nand':\n      return new BooleanNAnd(leftOp, rightOp);\n    case 'equiv':\n      return new BooleanEquivalency(leftOp, rightOp);\n    case 'impl':\n      return new BooleanImplication(leftOp, rightOp);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {map, tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {LoggedInUserWithTokenFragment, LoginGQL} from './apollo_services';\n\nconst currentUserField = 'currentUser';\n\nexport function getCurrentUser(): LoggedInUserWithTokenFragment | undefined {\n  const json: string | null = localStorage.getItem(currentUserField);\n\n  return json ? JSON.parse(json) : null;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  private currentUserSubject: BehaviorSubject<LoggedInUserWithTokenFragment>;\n  public currentUser: Observable<LoggedInUserWithTokenFragment>;\n\n  constructor(private http: HttpClient, private loginGQL: LoginGQL, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject<LoggedInUserWithTokenFragment>(getCurrentUser());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): LoggedInUserWithTokenFragment {\n    return this.currentUserSubject.value;\n  }\n\n  private activateLogin(user: LoggedInUserWithTokenFragment): void {\n    localStorage.setItem(currentUserField, JSON.stringify(user));\n    this.currentUserSubject.next(user);\n  }\n\n  login(username: string, password: string): Observable<LoggedInUserWithTokenFragment | null> {\n    return this.loginGQL\n      .mutate({username, password})\n      .pipe(map(({data}) => {\n        if (data.login) {\n          this.activateLogin(data.login);\n        }\n\n        return data.login;\n      }));\n  }\n\n  claimJsonWebToken(uuid: string): Observable<LoggedInUserWithTokenFragment> {\n    return this.http.get<LoggedInUserWithTokenFragment | undefined>(`/api/claimWebToken/${uuid}`)\n      .pipe(tap((user) => this.activateLogin(user)));\n  }\n\n  logout() {\n    localStorage.removeItem(currentUserField);\n    this.currentUserSubject.next(null);\n    // noinspection JSIgnoredPromiseFromCall\n    this.router.navigate(['/loginForm']);\n  }\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"collectionOverviewQuery; else loadingDataBlock\">\n    <h1 class=\"title is-3 has-text-centered\">Sammlung &quot;{{tool.collection.title}}&quot; - Aufgaben</h1>\n\n    <div class=\"mb-3\">\n      <it4all-breadcrumbs [parts]=\"breadCrumbs\"></it4all-breadcrumbs>\n    </div>\n\n    <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\" *ngIf=\"paginationNeeded\">\n      <button class=\"button pagination-previous\" (click)=\"currentPage = currentPage - 1\" [disabled]=\"currentPage < 1\">\n        Vorherige\n      </button>\n      <ul class=\"pagination-list\">\n        <li *ngFor=\"let page of pages\">\n          <button class=\"button pagination-link\" [class.is-current]=\"page === currentPage\" (click)=\"currentPage = page\">\n            {{page}}\n          </button>\n        </li>\n      </ul>\n      <button class=\"button pagination-next\" (click)=\"currentPage = currentPage + 1\"\n              [disabled]=\"currentPage >= maxPage - 1\">\n        Nächste\n      </button>\n    </nav>\n\n    <div class=\"columns is-multiline\" *ngIf=\"exercises.length > 0; else noExercisesFoundBlock\">\n      <div *ngFor=\"let exercise of getExercisesPaginated()\" class=\"column is-one-third-desktop is-half\">\n        <it4all-exercise-link-card [exercise]=\"exercise\"></it4all-exercise-link-card>\n      </div>\n    </div>\n\n  </ng-container>\n</div>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n</ng-template>\n\n\n<ng-template #noExercisesFoundBlock>\n  <div class=\"notification is-danger has-text-centered\">\n    Es konnten keine Aufgaben für diese Sammlung gefunden werden!\n  </div>\n</ng-template>\n\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {\n  CollectionOverviewGQL,\n  CollectionOverviewQuery,\n  CollOverviewToolFragment,\n  FieldsForLinkFragment\n} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\nimport {BreadCrumbPart} from \"../../../shared/breadcrumbs/breadcrumbs.component\";\n\nconst SLICE_COUNT: number = 12;\n\n// url => /tools/:toolId/collections/:collId\n\n@Component({templateUrl: './collection-overview.component.html'})\nexport class CollectionOverviewComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  collectionOverviewQuery: CollectionOverviewQuery;\n\n  paginationNeeded = false;\n\n  maxPage = 0;\n  currentPage = 0;\n\n  pages: number[] = [];\n\n  constructor(private route: ActivatedRoute, private collectionOverviewGQL: CollectionOverviewGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId: string = paramMap.get('toolId');\n      const collId: number = parseInt(paramMap.get('collId'), 10);\n\n      this.collectionOverviewGQL\n        .watch({toolId, collId})\n        .valueChanges\n        .subscribe(({data}) => {\n          this.collectionOverviewQuery = data;\n\n          this.paginationNeeded = this.exercises.length > SLICE_COUNT;\n\n          this.maxPage = Math.ceil(this.collectionOverviewQuery.me.tool.collection.exercises.length / SLICE_COUNT);\n\n          this.pages = Array(this.maxPage).fill(0).map((value, index) => index);\n        });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  get tool(): CollOverviewToolFragment {\n    return this.collectionOverviewQuery.me.tool;\n  }\n\n  get exercises(): FieldsForLinkFragment[] {\n    return this.tool.collection.exercises;\n  }\n\n  getExercisesPaginated(): FieldsForLinkFragment[] {\n    return this.exercises.slice(this.currentPage * SLICE_COUNT, (this.currentPage + 1) * SLICE_COUNT);\n  }\n\n  get breadCrumbs(): BreadCrumbPart[] {\n    return [\n      {routerLinkPart: '/', title: 'Tools'},\n      {routerLinkPart: `tools/${this.tool.id}`, title: this.tool.name},\n      {routerLinkPart: 'collections', title: 'Sammlungen'},\n      {routerLinkPart: this.tool.collection.collectionId.toString(), title: this.tool.collection.title}\n    ]\n  }\n\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {\n  MatchType,\n  UmlImplementationMatchFragment,\n  UmlImplementationMatchingResultFragment\n} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-uml-impl-result',\n  template: `\n    <h3 class=\"subtitle is-5\" [ngClass]=\"implResultSuccessful ? 'has-text-dark-success' : 'has-text-danger'\">\n      Der Vergleich der Vererbungen war {{implResultSuccessful ? '' : 'nicht'}} erfolgreich.\n    </h3>\n\n    <div class=\"content\" *ngIf=\"!implResultSuccessful\">\n      <ul>\n        <li *ngFor=\"let m of implResult.allMatches\">\n          <div [ngClass]=\"isCorrect(m) ? 'has-text-dark-success' : 'has-text-danger'\">\n            Die Vererbung von <code>{{m.userArg.subClass}}</code> nach\n            <code>{{m.userArg.superClass}}</code> ist {{isCorrect(m) ? '' : 'nicht'}} korrekt.\n\n            <div *ngIf=\"!isCorrect(m)\" class=\"content\">\n              <ul>\n                <li [ngClass]=\"directionCorrect(m) ? 'has-text-dark-success' : 'has-text-danger'\">\n                  Die Vererbungsrichtung war {{directionCorrect(m) ? '' : 'nicht'}} korrekt.\n                </li>\n              </ul>\n            </div>\n          </div>\n        </li>\n\n        <li *ngFor=\"let mu of implResult.notMatchedForUser\" class=\"has-text-danger\">\n          Die Vererbung von <code>{{mu.subClass}}</code> nach <code>{{mu.superClass}}</code> ist falsch.\n        </li>\n\n        <li *ngFor=\"let ms of implResult.notMatchedForSample\" class=\"has-text-danger\">\n          Die Vererbung von <code>{{ms.subClass}}</code> nach <code>{{ms.superClass}}</code> fehlt.\n        </li>\n      </ul>\n    </div>\n  `\n})\nexport class UmlImplResultComponent implements OnChanges {\n\n  @Input() implResult: UmlImplementationMatchingResultFragment;\n\n  implResultSuccessful = false;\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.implResultSuccessful = this.implResult.allMatches.every(this.isCorrect);\n  }\n\n  isCorrect(m: UmlImplementationMatchFragment): boolean {\n    return m.matchType === MatchType.SuccessfulMatch;\n  }\n\n  directionCorrect(m: UmlImplementationMatchFragment): boolean {\n    return m.userArg.subClass === m.sampleArg.subClass;\n  }\n\n\n}\n","import {Component, Input} from '@angular/core';\nimport {GradedHtmlTaskResultFragment} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-html-task-result',\n  template: `\n    <span [ngClass]=\"htmlResult.isSuccessful ? 'has-text-success' : 'has-text-danger'\">\n      ({{htmlResult.points}} / {{htmlResult.maxPoints}})\n      Teilaufgabe {{htmlResult.id}} ist {{htmlResult.isSuccessful ? '' : 'nicht'}} korrekt:\n    </span>\n\n    <ul>\n      <li [ngClass]=\"htmlResult.elementFound ? 'has-text-success' : 'has-text-danger'\">\n        Das Element konnte {{htmlResult.elementFound ? '' : 'nicht'}} gefunden werden!\n      </li>\n\n      <ng-container *ngFor=\"let attributeResult of htmlResult.attributeResults\">\n        <it4all-html-attribute-result [attributeResult]=\"attributeResult\"></it4all-html-attribute-result>\n      </ng-container>\n\n      <ng-container *ngIf=\"htmlResult.textContentResult\">\n        <li [ngClass]=\"htmlResult.textContentResult.isSuccessful ? 'has-text-success' : 'has-text-danger'\">\n          Das Element sollte den Textinhalt <code>{{htmlResult.textContentResult.awaitedContent}}</code> haben.\n          Gefunden wurde <code>{{htmlResult.textContentResult.maybeFoundContent}}</code>.\n        </li>\n      </ng-container>\n    </ul>\n  `\n})\nexport class HtmlTaskResultComponent {\n\n  @Input() htmlResult: GradedHtmlTaskResultFragment;\n\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'it4all-solution-saved',\n  template: `\n    <div class=\"notification is-light-grey\" [ngClass]=\"solutionSaved ? 'has-text-dark-success' : 'has-text-danger'\">\n      &#10004; Ihre Lösung wurde <span [innerHTML]=\"solutionSaved ? '' : '<b>nicht</b>'\"></span> gespeichert.\n    </div>`,\n})\nexport class SolutionSavedComponent {\n\n  @Input() solutionSaved: boolean;\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {isAssociation, isImplementation, isMyJointClass, MyJointClass} from '../_model/joint-class-diag-elements';\nimport {getIdForUmlExPart, getUmlExerciseTextParts, SelectableClass, UmlExerciseTextPart} from '../uml-tools';\nimport {GRID_SIZE, PAPER_HEIGHT} from '../_model/uml-consts';\nimport {addAssociationToGraph, addClassToGraph, addImplementationToGraph} from '../_model/class-diag-helpers';\nimport {umlAssocfromConnection, umlImplfromConnection} from '../_model/my-uml-interfaces';\nimport {ComponentWithExerciseDirective} from '../../_helpers/component-with-exercise.directive';\nimport {DexieService} from '../../../../_services/dexie.service';\nimport {environment} from '../../../../../environments/environment';\nimport {\n  ExerciseSolveFieldsFragment,\n  UmlClassDiagramInput,\n  UmlCorrectionGQL,\n  UmlCorrectionMutation,\n  UmlCorrectionMutationVariables,\n  UmlCorrectionResultFragment,\n  UmlExerciseContentFragment,\n  UmlExPart,\n  UmlResultFragment\n} from '../../../../_services/apollo_services';\n\nimport * as joint from 'jointjs';\n\n\nenum CreatableClassDiagramObject {\n  Class,\n  Association,\n  Implementation\n}\n\ninterface SelectableClassDiagramObject {\n  name: string;\n  key: CreatableClassDiagramObject;\n  selected: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'it4all-uml-diagram-drawing',\n  templateUrl: './uml-diagram-drawing.component.html',\n  styles: [`\n    #myPaper {\n      border: 1px solid slategrey;\n      border-radius: 5px;\n    }\n  `]\n})\nexport class UmlDiagramDrawingComponent\n  extends ComponentWithExerciseDirective<UmlClassDiagramInput, UmlCorrectionMutation, UmlCorrectionMutationVariables>\n  implements OnInit {\n\n  readonly nextPartId: string = getIdForUmlExPart(UmlExPart.MemberAllocation);\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() contentFragment: UmlExerciseContentFragment;\n\n  partId: string;\n\n  withHelp: boolean;\n\n  graph: joint.dia.Graph = new joint.dia.Graph();\n  paper: joint.dia.Paper;\n\n  selectableClasses: SelectableClass[];\n  umlExerciseTextParts: UmlExerciseTextPart[];\n\n  markedClass: MyJointClass | undefined;\n  editedClass: MyJointClass | undefined;\n  editedAssociation: joint.shapes.uml.Association | undefined;\n\n  creatableClassDiagramObjects: SelectableClassDiagramObject[];\n\n  corrected = false;\n\n  readonly debug = !environment.production;\n\n  constructor(umlCorrectionGQL: UmlCorrectionGQL, dexieService: DexieService) {\n    super(umlCorrectionGQL, dexieService);\n  }\n\n  ngOnInit(): void {\n    this.partId = getIdForUmlExPart(this.contentFragment.umlPart);\n\n    this.withHelp = this.contentFragment.umlPart === UmlExPart.DiagramDrawingHelp;\n\n    this.creatableClassDiagramObjects = [\n      {name: 'Klasse', key: CreatableClassDiagramObject.Class, selected: false, disabled: this.withHelp},\n      {name: 'Assoziation', key: CreatableClassDiagramObject.Association, selected: false},\n      {name: 'Vererbung', key: CreatableClassDiagramObject.Implementation, selected: false}\n    ];\n\n    const {selectableClasses, textParts} = getUmlExerciseTextParts(this.exerciseFragment, this.contentFragment);\n\n    this.selectableClasses = selectableClasses;\n    this.umlExerciseTextParts = textParts;\n\n    const paperJQueryElement = $('#myPaper');\n\n    this.paper = new joint.dia.Paper({\n      el: paperJQueryElement, model: this.graph,\n      width: Math.floor(paperJQueryElement.width()), height: PAPER_HEIGHT,\n      gridSize: GRID_SIZE, drawGrid: {name: 'dot'}\n    });\n\n    this.createPaperEvents(this.paper);\n\n    // load classes\n    const declaration = this.contentFragment.umlSampleSolutions[0];\n\n    this.loadOldSolutionAbstract(this.exerciseFragment, this.partId,\n      (oldSol) => this.loadClassDiagram(oldSol),\n      () => this.loadClassDiagram(declaration, false)\n    );\n  }\n\n  loadClassDiagram(cd: UmlClassDiagramInput, loadAttributesAndMethods: boolean = true): void {\n    for (const clazz of cd.classes) {\n      const attributes = loadAttributesAndMethods ? clazz.attributes : [];\n      const methods = loadAttributesAndMethods ? clazz.methods : [];\n\n      addClassToGraph(clazz.name, this.paper, attributes, methods);\n    }\n\n    const allCells: MyJointClass[] = this.graph.getCells().filter(isMyJointClass);\n\n    if (loadAttributesAndMethods) {\n      for (const assoc of cd.associations) {\n        addAssociationToGraph(\n          allCells.find((c) => c.getClassName() === assoc.firstEnd),\n          assoc.firstMult === 'UNBOUND' ? '*' : '1',\n          allCells.find((c) => c.getClassName() === assoc.secondEnd),\n          assoc.secondMult === 'UNBOUND' ? '*' : '1',\n          this.graph\n        );\n      }\n\n      for (const impl of cd.implementations) {\n        addImplementationToGraph(\n          allCells.find((c) => c.getClassName() === impl.subClass),\n          allCells.find((c) => c.getClassName() === impl.superClass),\n          this.graph\n        );\n      }\n    }\n  }\n\n  createPaperEvents(paper: joint.dia.Paper): void {\n    paper.on('blank:pointerclick', (evt: joint.dia.Event, x: number, y: number) => {\n        const selectedObjectToCreate: SelectableClassDiagramObject =\n          this.creatableClassDiagramObjects.find((scdo) => scdo.selected);\n\n        if (selectedObjectToCreate && CreatableClassDiagramObject.Class === selectedObjectToCreate.key) {\n          addClassToGraph('Klasse 1', paper, [], [], {x, y});\n        }\n      }\n    );\n\n    paper.on('cell:pointerclick', (cellView: joint.dia.CellView, event: joint.dia.Event /*, x: number, y: number*/) => {\n      if (cellView.model instanceof MyJointClass) {\n        const selectedObjectToCreate: SelectableClassDiagramObject =\n          this.creatableClassDiagramObjects.find((scdo) => scdo.selected);\n\n        if (!this.markedClass) {\n          this.markedClass = cellView.model as MyJointClass;\n          cellView.highlight();\n        } else if (this.markedClass === cellView.model) {\n          this.markedClass = undefined;\n          cellView.unhighlight();\n        } else if (selectedObjectToCreate) {\n          if (selectedObjectToCreate.key === CreatableClassDiagramObject.Association) {\n            addAssociationToGraph(this.markedClass, '*', cellView.model as MyJointClass, '*', this.graph);\n          } else if (selectedObjectToCreate.key === CreatableClassDiagramObject.Implementation) {\n            addImplementationToGraph(this.markedClass, cellView.model as MyJointClass, this.graph);\n          }\n\n          this.markedClass.findView(paper).unhighlight();\n          this.markedClass = undefined;\n        }\n      } else {\n        // console.info(cellView.model);\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n      }\n    });\n\n    paper.on('cell:contextmenu', (cellView: joint.dia.CellView/*, event: joint.dia.Event, x: number, y: number*/) => {\n      if (this.withHelp) {\n        if (cellView.model instanceof MyJointClass) {\n          // Cannot change classes\n          return;\n        } else if (cellView.model instanceof joint.shapes.uml.Association) {\n          // Change association...\n          this.editedAssociation = cellView.model;\n        }\n      } else if (cellView.model instanceof MyJointClass) {\n        if (!this.editedClass) {\n          this.editedClass = cellView.model as MyJointClass;\n        } else {\n          this.editedClass = undefined;\n        }\n      } else {\n        console.log(cellView.model);\n      }\n    });\n  }\n\n  createClass(selectableClass: SelectableClass): void {\n    if (this.withHelp || selectableClass.selected) {\n      // Class is already in graph!\n      return;\n    }\n\n    selectableClass.selected = true;\n\n    addClassToGraph(selectableClass.name, this.paper);\n  }\n\n  toggle(toCreate: SelectableClassDiagramObject): void {\n    this.creatableClassDiagramObjects.forEach((scdo) => scdo.selected = (scdo.key === toCreate.key) ? !scdo.selected : false);\n  }\n\n  readFile(files: FileList): void {\n    const fileReader = new FileReader();\n\n    fileReader.onload = ((pe) => {\n      const read: string = pe.target.result as string;\n\n      const loaded: UmlClassDiagramInput = JSON.parse(read);\n\n      for (const clazz of loaded.classes) {\n        addClassToGraph(clazz.name, this.paper, clazz.attributes || [], clazz.methods || []);\n      }\n\n      const allCells = this.graph.getCells().filter(isMyJointClass);\n\n      for (const impl of loaded.implementations) {\n        addImplementationToGraph(\n          allCells.find((c) => c.getClassName() === impl.subClass),\n          allCells.find((c) => c.getClassName() === impl.superClass),\n          this.graph\n        );\n      }\n    });\n\n    fileReader.readAsText(files.item(0));\n  }\n\n  // Results\n\n  get correctionResult(): UmlCorrectionResultFragment | null {\n    return this.resultQuery?.me.umlExercise?.correct;\n  }\n\n  get result(): UmlResultFragment | null {\n    return this.correctionResult?.result;\n  }\n\n  // Correction\n\n  protected getSolution(): UmlClassDiagramInput {\n    return {\n      classes: this.graph.getCells().filter(isMyJointClass).map((cell) => cell.getAsUmlClass()),\n      associations: this.graph.getLinks().filter(isAssociation).map(umlAssocfromConnection),\n      implementations: this.graph.getLinks().filter(isImplementation).map(umlImplfromConnection)\n    };\n  }\n\n  protected getMutationQueryVariables(): UmlCorrectionMutationVariables {\n    return {\n      exId: this.exerciseFragment.exerciseId,\n      collId: this.exerciseFragment.collectionId,\n      solution: this.getSolution(),\n      part: this.contentFragment.umlPart,\n    };\n  }\n\n  correct(): void {\n    super.correctAbstract(this.exerciseFragment, this.partId);\n\n    this.corrected = true;\n  }\n\n}\n","<div class=\"container is-fluid\">\n  <div class=\"columns\">\n    <div class=\"column is-three-fifths\">\n      <div id=\"myPaper\"></div>\n\n      <ng-container *ngIf=\"debug\">\n        <br>\n\n        <div class=\"columns\">\n          <div class=\"column is-one-quarter-desktop\">\n            <label class=\"label\" for=\"importFile\">Alte Lösung importieren:</label>\n          </div>\n          <div class=\"column\">\n            <input type=\"file\" id=\"importFile\" class=\"input is-fullwidth\" (change)=\"readFile($event.target.files)\">\n          </div>\n        </div>\n      </ng-container>\n\n    </div>\n    <div class=\"column\">\n\n      <it4all-tabs>\n        <it4all-tab [title]=\"exerciseTextTabTitle\">\n          <div class=\"notification is-light-grey\">\n            <ng-container *ngFor=\"let tp of umlExerciseTextParts\">\n              <span *ngIf=\"tp.selectableClass\" (click)=\"createClass(tp.selectableClass)\">{{tp.text}}</span>\n              <span *ngIf=\"!tp.selectableClass\">{{tp.text}}</span>\n            </ng-container>\n          </div>\n\n          <div class=\"columns\">\n            <div class=\"column\" *ngFor=\"let x of creatableClassDiagramObjects\">\n              <button class=\"button is-fullwidth\" (click)=\"toggle(x)\"\n                      [ngClass]=\"x.selected ? 'is-link': ''\" [disabled]=\"x.disabled\">\n                {{x.name}}\n              </button>\n            </div>\n          </div>\n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <button class=\"button is-link is-fullwidth\" [class.is-loading]=\"isCorrecting\" (click)=\"correct()\">\n                Korrektur\n              </button>\n            </div>\n            <!--\n            <div class=\"column\">\n              <button class=\"button is-primary is-fullwidth\" (click)=\"showSampleSolution()\" disabled>Musterlösung\n                anzeigen\n              </button>\n            </div>\n            -->\n            <div class=\"column\">\n              <button class=\"button is-fullwidth\" [routerLink]=\"['..', nextPartId]\" [disabled]=\"!corrected\"\n                      [ngClass]=\"corrected ? 'is-link': 'is-dark'\">\n                Zum nächsten Aufgabenteil\n              </button>\n            </div>\n            <div class=\"column\">\n              <a [routerLink]=\"['../..']\" class=\"button is-dark is-fullwidth\">Bearbeiten beenden</a>\n            </div>\n          </div>\n        </it4all-tab>\n        <it4all-tab [title]=\"correctionTabTitle\">\n\n          <it4all-solution-saved *ngIf=\"result\" [solutionSaved]=\"correctionResult.solutionSaved\">\n          </it4all-solution-saved>\n\n          <div class=\"message\" *ngIf=\"queryError\">\n            <div class=\"message-header\">Es gab einen Fehler bei der Korrektur:</div>\n            <div class=\"message-body\">\n              <pre>{{queryError.message}}</pre>\n            </div>\n          </div>\n\n          <it4all-uml-diag-drawing-correction *ngIf=\"resultQuery\" [result]=\"result\">\n          </it4all-uml-diag-drawing-correction>\n        </it4all-tab>\n      </it4all-tabs>\n\n      <ng-container *ngIf=\"editedClass\">\n        <hr>\n\n        <it4all-uml-class-edit [editedClass]=\"editedClass\" (cancel)=\"editedClass = undefined\"></it4all-uml-class-edit>\n      </ng-container>\n\n      <ng-container *ngIf=\"editedAssociation\">\n        <hr>\n\n        <it4all-uml-assoc-edit [editedAssociation]=\"editedAssociation\"\n                               (cancel)=\"editedAssociation = undefined\"></it4all-uml-assoc-edit>\n      </ng-container>\n\n    </div>\n  </div>\n</div>\n\n","<ng-container *ngIf=\" exerciseQuery; else loadingDataBlock\">\n\n  <it4all-ebnf-exercise\n    *ngIf=\"ebnfExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"ebnfExerciseContent\">\n  </it4all-ebnf-exercise>\n\n  <it4all-flask-exercise\n    *ngIf=\"flaskExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"flaskExerciseContent\">\n  </it4all-flask-exercise>\n\n  <it4all-programming-exercise\n    *ngIf=\"programmingExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"programmingExerciseContent\">\n  </it4all-programming-exercise>\n\n  <it4all-regex-exercise\n    *ngIf=\"regexExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"regexExerciseContent\">\n  </it4all-regex-exercise>\n\n  <it4all-sql-exercise\n    *ngIf=\"sqlExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"sqlExerciseContent\">\n  </it4all-sql-exercise>\n\n  <it4all-uml-exercise\n    *ngIf=\"umlExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"umlExerciseContent\">\n  </it4all-uml-exercise>\n\n  <it4all-web-exercise\n    *ngIf=\"webExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"webExerciseContent\">\n  </it4all-web-exercise>\n\n  <it4all-xml-exercise\n    *ngIf=\"xmlExerciseContent\"\n    [exerciseFragment]=\"exercise\"\n    [contentFragment]=\"xmlExerciseContent\">\n  </it4all-xml-exercise>\n\n</ng-container>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Aufgabe...</div>\n</ng-template>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {\n  EbnfExerciseContentFragment,\n  ExerciseGQL,\n  ExerciseQuery,\n  ExerciseSolveFieldsFragment,\n  FlaskExerciseContentFragment,\n  ProgrammingExerciseContentFragment,\n  RegexExerciseContentFragment,\n  SqlExerciseContentFragment,\n  UmlExerciseContentFragment,\n  WebExerciseContentFragment,\n  XmlExerciseContentFragment\n} from '../../../_services/apollo_services';\nimport {Subscription} from 'rxjs';\nimport {EbnfExerciseComponent} from \"../ebnf/ebnf-exercise/ebnf-exercise.component\";\n\n\n@Component({templateUrl: './exercise.component.html'})\nexport class ExerciseComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n  private apolloSub: Subscription;\n\n  exerciseQuery: ExerciseQuery;\n\n  constructor(private route: ActivatedRoute, private exerciseGQL: ExerciseGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n      const collId = parseInt(paramMap.get('collId'), 10);\n      const exId = parseInt(paramMap.get('exId'), 10);\n      const partId = paramMap.get('partId');\n\n      this.apolloSub = this.exerciseGQL\n        .watch({toolId, collId, exId, partId})\n        .valueChanges\n        .subscribe(({data}) => this.exerciseQuery = data);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.apolloSub.unsubscribe();\n    this.sub.unsubscribe();\n  }\n\n  // Exercise content\n\n  get exercise(): ExerciseSolveFieldsFragment {\n    return this.exerciseQuery.me.tool.collection.exercise;\n  }\n\n  get ebnfExerciseContent(): EbnfExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'EbnfExerciseContent' ? this.exercise.content : null;\n  }\n\n  get flaskExerciseContent(): FlaskExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'FlaskExerciseContent' ? this.exercise.content : null;\n  }\n\n  get programmingExerciseContent(): ProgrammingExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'ProgrammingExerciseContent' ? this.exercise.content : null;\n  }\n\n  get regexExerciseContent(): RegexExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'RegexExerciseContent' ? this.exercise.content : null;\n  }\n\n  get sqlExerciseContent(): SqlExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'SqlExerciseContent' ? this.exercise.content : null;\n  }\n\n  get umlExerciseContent(): UmlExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'UmlExerciseContent' ? this.exercise.content : null;\n  }\n\n  get webExerciseContent(): WebExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'WebExerciseContent' ? this.exercise.content : null;\n  }\n\n  get xmlExerciseContent(): XmlExerciseContentFragment | null {\n    return this.exercise.content.__typename === 'XmlExerciseContent' ? this.exercise.content : null;\n  }\n\n}\n","import {randomInt, takeRandom} from '../../../../helpers';\nimport {\n  BooleanAnd,\n  BooleanEquivalency,\n  BooleanImplication,\n  BooleanNAnd,\n  BooleanNode,\n  BooleanNOr,\n  BooleanNot,\n  BooleanOr,\n  BooleanVariable,\n  BooleanXOr, calculateAssignments\n} from './bool-node';\n\nconst varA: BooleanVariable = new BooleanVariable('a');\nconst varB: BooleanVariable = new BooleanVariable('b');\nconst varC: BooleanVariable = new BooleanVariable('c');\n\n\nfunction generateRandomOperator(left: BooleanNode, right: BooleanNode): BooleanNode {\n  const leftNegated: boolean = randomInt(0, 3) === 2;\n  const rightNegated: boolean = randomInt(0, 3) === 2;\n\n  const leftChild = leftNegated ? new BooleanNot(left) : left;\n  const rightChild = rightNegated ? new BooleanNot(right) : right;\n\n  const operatorInt: number = randomInt(0, 20);\n\n  if (0 <= operatorInt && operatorInt < 8) {\n    return new BooleanAnd(leftChild, rightChild);\n  } else if (8 <= operatorInt && operatorInt < 16) {\n    return new BooleanOr(leftChild, rightChild);\n  } else if (operatorInt === 16) {\n    return new BooleanXOr(leftChild, rightChild);\n  } else if (operatorInt === 17) {\n    return new BooleanNAnd(leftChild, rightChild);\n  } else if (operatorInt === 18) {\n    return new BooleanNOr(leftChild, rightChild);\n  } else if (operatorInt === 19) {\n    return new BooleanEquivalency(leftChild, rightChild);\n  } else {\n    return new BooleanImplication(leftChild, rightChild);\n  }\n}\n\nexport class BooleanFormula {\n\n  private assignments: Map<string, boolean>[];\n\n  constructor(public left: BooleanVariable, public right: BooleanNode) {\n    this.assignments = calculateAssignments(right.getVariables());\n  }\n\n  getVariables(): BooleanVariable[] {\n    return this.right.getVariables();\n  }\n\n  getSubFormulas(): BooleanNode[] {\n    return this.right.getSubFormulas();\n  }\n\n  getAssignments(): Map<string, boolean>[] {\n    return this.assignments;\n  }\n\n  getValueFor(assignment: Map<string, boolean>): boolean {\n    return this.right.evaluate(assignment);\n  }\n\n  asString() {\n    return this.left.variable + ' = ' + this.right.asString();\n  }\n\n  asHtmlString() {\n    return this.left.variable + ' = ' + this.right.asHtmlString();\n  }\n\n  evaluate(assignments: Map<string, boolean>): boolean {\n    return this.right.evaluate(assignments);\n  }\n\n}\n\nexport function generateBooleanFormula(left: BooleanVariable): BooleanFormula {\n  const depth: number = randomInt(1, 3);\n\n  if (depth === 1) {\n    return new BooleanFormula(left, generateRandomOperator(varA, varB));\n  } else {\n    const vars: BooleanVariable[] = [varA, varB, varC];\n\n    const leftChild = generateRandomOperator(takeRandom(vars), takeRandom(vars));\n    const rightChild = generateRandomOperator(takeRandom(vars), takeRandom(vars));\n\n    return new BooleanFormula(left, generateRandomOperator(leftChild, rightChild));\n  }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {\n  LessonAsTextGQL,\n  LessonAsTextQuery,\n  LessonMultipleChoiceQuestionContentFragment,\n  LessonTextContentFragment\n} from '../../../../_services/apollo_services';\nimport {\n  isSolvableLessonMultipleChoiceQuestionContentFragment,\n  isSolvableLessonTextContentFragment\n} from '../solvable-lesson-content';\nimport {Subscription} from 'rxjs';\n\ntype ContentFragment = LessonTextContentFragment | LessonMultipleChoiceQuestionContentFragment;\n\n@Component({templateUrl: './lesson-as-text.component.html'})\nexport class LessonAsTextComponent implements OnInit, OnDestroy {\n\n  private sub: Subscription;\n\n  lessonQuery: LessonAsTextQuery;\n  currentIndex = 0;\n\n  constructor(private route: ActivatedRoute, private lessonGQL: LessonAsTextGQL) {\n  }\n\n  ngOnInit() {\n    this.sub = this.route.paramMap.subscribe((paramMap) => {\n      const toolId = paramMap.get('toolId');\n      const lessonId = parseInt(paramMap.get('lessonId'), 10);\n\n      this.lessonGQL\n        .watch({toolId, lessonId})\n        .valueChanges\n        .subscribe(({data}) => this.lessonQuery = data);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  get contents(): ContentFragment[] | null {\n    return this.lessonQuery?.me.tool.lesson.contents;\n  }\n\n  get contentIndexes(): number[] {\n    return this.contents?.map((value: ContentFragment, index: number) => index);\n  }\n\n  get currentContent(): ContentFragment | null {\n    return this.contents ? this.contents[this.currentIndex] : null;\n  }\n\n  get currentTextContentFragment(): LessonTextContentFragment | undefined {\n    return this.currentContent && isSolvableLessonTextContentFragment(this.currentContent) ? this.currentContent : undefined;\n  }\n\n  get currentMultipleChoiceFragment(): LessonMultipleChoiceQuestionContentFragment | undefined {\n    return this.currentContent && isSolvableLessonMultipleChoiceQuestionContentFragment(this.currentContent) ? this.currentContent : undefined;\n  }\n\n  hasMoreContent(): boolean {\n    return this.lessonQuery && this.currentIndex < (this.lessonQuery.me.tool.lesson.contents.length - 1);\n  }\n\n  previousContent(): void {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    }\n  }\n\n  nextContent(): void {\n    if (this.currentIndex <= this.lessonQuery.me.tool.lesson.contents.length) {\n      this.currentIndex++;\n    }\n  }\n\n}\n","<div class=\"container\">\n\n  <ng-container *ngIf=\"lessonQuery; else loadingDataBlock\">\n\n    <h1 class=\"title is-3 has-text-centered\">Lektion: {{lessonQuery.me.tool.lesson.title}}</h1>\n\n    <ng-container *ngIf=\"contents.length > 0; else noContentBlock\">\n\n      <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n        <button class=\"button pagination-previous\" (click)=\"currentIndex = currentIndex - 1\" [disabled]=\"currentIndex < 1\">\n          Vorheriger Inhalt\n        </button>\n        <ul class=\"pagination-list\">\n          <li *ngFor=\"let page of contentIndexes\">\n            <button class=\"button pagination-link\" [class.is-current]=\"page === currentIndex\" (click)=\"currentIndex = page\">\n              {{page}}\n            </button>\n          </li>\n        </ul>\n        <button class=\"button pagination-next\" (click)=\"currentIndex = currentIndex + 1\"\n                [disabled]=\"currentIndex >= contents.length - 1\">\n          Nächster Inhalt\n        </button>\n      </nav>\n\n      <div class=\"content box\" *ngIf=\"currentTextContentFragment\">\n        <div [innerHTML]=\"currentTextContentFragment.content\"></div>\n      </div>\n\n      <!-- class=\"content box\" -->\n      <div *ngIf=\"currentMultipleChoiceFragment\">\n        <it4all-lesson-questions-content [content]=\"currentMultipleChoiceFragment\"></it4all-lesson-questions-content>\n      </div>\n\n    </ng-container>\n\n  </ng-container>\n\n</div>\n\n<ng-template #loadingDataBlock>\n  <div class=\"notification is-primary has-text-centered\">Lade Daten...</div>\n</ng-template>\n\n<ng-template #noContentBlock>\n  <div class=\"notification is-warning has-text-centered\">Kein Inhalt gefunden!</div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\nimport {randomTools} from '../tools/random-tools/random-tools-list';\nimport {RandomTool} from '../tools/random-tools/random-tool';\nimport {CollectionToolFragment, ToolOverviewGQL, ToolOverviewQuery, ToolState} from '../_services/apollo_services';\n\n@Component({templateUrl: './tool-overview.component.html'})\nexport class ToolOverviewComponent implements OnInit {\n\n  randomTools: RandomTool[] = randomTools;\n\n  toolOverviewQuery: ToolOverviewQuery;\n\n  constructor(private toolOverviewGQL: ToolOverviewGQL) {\n  }\n\n  ngOnInit(): void {\n    this.toolOverviewGQL\n      .watch()\n      .valueChanges\n      .subscribe(({data}) => this.toolOverviewQuery = data);\n  }\n\n  isLive(toolState: ToolState): boolean {\n    return toolState === ToolState.Live;\n  }\n\n  get collectionTools(): CollectionToolFragment[] {\n    if (this.toolOverviewQuery) {\n      return this.toolOverviewQuery.me.tools;\n    } else {\n      return [];\n    }\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"title is-3 has-text-centered\"><span i18n>Tools</span>&nbsp;<code>it4all</code></h1>\n\n  <div class=\"columns is-multiline\">\n    <div class=\"column is-one-quarter-desktop is-half-tablet\" *ngFor=\"let ranTool of randomTools\">\n\n      <div class=\"card\">\n        <header class=\"card-header\">\n          <p class=\"card-header-title\">{{ranTool.name}}</p>\n        </header>\n        <div class=\"card-content\">\n          <p>&nbsp;</p>\n          <p>&nbsp;</p>\n        </div>\n        <footer class=\"card-footer\">\n          <a [routerLink]=\"['/randomTools', ranTool.id]\" class=\"card-footer-item\">Zum Tool</a>\n          <a [routerLink]=\"['/lessons', ranTool.id]\" class=\"card-footer-item\" *ngIf=\"ranTool.hasLessons\">\n            <ng-container i18n>Zu den Lektionen</ng-container>\n          </a>\n        </footer>\n      </div>\n\n    </div>\n\n    <div class=\"column is-one-quarter-desktop is-half-tablet\" *ngFor=\"let colTool of collectionTools\">\n\n      <div class=\"card\">\n        <header class=\"card-header\">\n          <p class=\"card-header-title\">\n            {{colTool.name}}\n            <sup *ngIf=\"!isLive(colTool.state)\" [innerHTML]=\"'&nbsp;&' + colTool.state.toLowerCase() + ';'\"></sup>\n          </p>\n        </header>\n        <div class=\"card-content\">\n          <p i18n>{{colTool.collectionCount}} Sammlungen mit {{colTool.exerciseCount}} Aufgaben</p>\n          <p i18n>{{colTool.lessonCount === 0 ? 'Keine' : colTool.lessonCount}} Lektionen</p>\n        </div>\n        <footer class=\"card-footer\">\n          <a [routerLink]=\"['/tools', colTool.id]\" class=\"card-footer-item\" i18n>Zum Tool</a>\n        </footer>\n      </div>\n\n    </div>\n\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BinaryClassificationResultType, RegexMatchingSingleResultFragment} from \"../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-regex-matching-result',\n  template: `\n    <div class=\"notification is-light-grey\" [ngClass]=\"correct ? 'has-text-dark-success' : 'has-text-danger'\">\n      {{correct ? '&#10004;' : '&#10008;'}} &nbsp;\n      <code>{{matchingResult.matchData}}</code> wurde {{correct ? 'korrekt' : 'fälschlicherweise'}}\n      <span [innerHTML]=\"wasMatched ? '' : '<b>nicht</b>'\"></span> erkannt.\n    </div>`\n})\nexport class RegexMatchingResultComponent implements OnInit {\n\n  @Input() matchingResult: RegexMatchingSingleResultFragment;\n\n  correct: boolean;\n  wasMatched: boolean;\n\n  ngOnInit(): void {\n    this.correct = [BinaryClassificationResultType.TruePositive, BinaryClassificationResultType.TrueNegative]\n      .includes(this.matchingResult.resultType);\n\n    this.wasMatched = [BinaryClassificationResultType.FalsePositive, BinaryClassificationResultType.TruePositive]\n      .includes(this.matchingResult.resultType);\n  }\n\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'it4all-bool-create-instructions',\n  templateUrl: './bool-create-instructions.component.html'\n})\nexport class BoolCreateInstructionsComponent {\n\n  constructor() {\n  }\n\n}\n","<hr>\n\n<h3 class=\"subtitle is-4 has-text-info has-text-centered\">Folgende Operatoren sind definiert und dürfen verwendet\n  werden:</h3>\n\n<table class=\"table is-fullwidth\">\n  <thead>\n    <tr>\n      <th>Werte</th>\n      <th></th>\n      <th>Darstellung</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Wahr</td>\n      <td></td>\n      <td><code>true</code> oder <code>1</code></td>\n    </tr>\n    <tr>\n      <td>Falsch</td>\n      <td></td>\n      <td><code>false</code> oder <code>0</code></td>\n    </tr>\n  </tbody>\n  <thead>\n    <tr>\n      <th>Standardoperatoren</th>\n      <th>Mathematisches Symbol</th>\n      <th>Darstellung</th>\n      <!--      <th>Deutsches Äquivalent</th>-->\n  </thead>\n  <tbody>\n    <tr>\n      <td>Nicht</td>\n      <td class=\"has-background-grey-light\">&not; a</td>\n      <td><code>not a</code></td>\n      <!--      <td><code>nicht a</code></td>-->\n    </tr>\n    <tr>\n      <td>Und</td>\n      <td class=\"has-background-grey-light\">a &and; b</td>\n      <td><code>a and b</code></td>\n      <!--      <td><code>a und b</code></td>-->\n    </tr>\n    <tr>\n      <td>Oder</td>\n      <td class=\"has-background-grey-light\">a &or; b</td>\n      <td><code>a or b</code></td>\n      <!--      <td><code>a oder b</code></td>-->\n    </tr>\n  </tbody>\n  <thead>\n    <tr>\n      <th>Spezialoperatoren</th>\n      <th></th>\n      <th></th>\n      <!--      <th></th>-->\n  </thead>\n  <tbody>\n    <tr>\n      <td>Exklusives Oder</td>\n      <td class=\"has-background-grey-light\">a &oplus; b</td>\n      <td><code>a xor b</code></td>\n      <!--      <td><code>a xoder b</code></td>-->\n    </tr>\n    <tr>\n      <td>Negiertes Und</td>\n      <td class=\"has-background-grey-light\">a &#x22bc; b</td>\n      <td><code>a nand b</code></td>\n      <!--      <td><code>a nund b</code></td>-->\n    </tr>\n    <tr>\n      <td>Negiertes Oder</td>\n      <td class=\"has-background-grey-light\">a &#x22bd; b</td>\n      <td><code>a nor b</code></td>\n      <!--      <td><code>a noder b</code></td>-->\n    </tr>\n    <tr>\n      <td>Äquivalenz</td>\n      <td class=\"has-background-grey-light\">a &hArr; b</td>\n      <td><code>a equiv b</code></td>\n      <!--      <td><code>a äquiv b</code></td>-->\n    </tr>\n    <tr>\n      <td>Implikation</td>\n      <td class=\"has-background-grey-light\">a &rArr; b</td>\n      <td><code>a impl b</code></td>\n      <!--      <td><code>a impl b</code></td>-->\n    </tr>\n  </tbody>\n</table>\n\n<h3 class=\"subtitle is-4 has-text-info has-text-centered\">Weitere Regeln</h3>\n<div class=\"content\">\n  <ul>\n    <li>Groß- und Kleinschreibung spielt keine Rolle.</li>\n    <li>\n      Reihenfolge der Auswertung:\n      <ul>\n        <li>Die Operatorrangfolge ist folgendermaßen festgelegt:\n          <ol>\n            <li>Nicht</li>\n            <li>Und</li>\n            <li>Oder</li>\n            <li>Implikation</li>\n            <li>Restliche Operatoren: exklusives Oder, Nicht Und, Nicht Oder, äquivalenz</li>\n          </ol>\n        </li>\n        <li>Beeinflussung der Auswertung:\n          <ul>\n            <li>Klammere, um die Reihenfolge festzulegen, in der Ausdrücke ausgewertet werden. Beispiel:\n              <code>not((a or b) and c)</code></li>\n            <li>Ansonsten wird von links nach rechts ausgewertet (bei gleicher Präzedenz der zweite Operator Vorrang)\n            </li>\n          </ul>\n        </li>\n        <li>Beispiele:\n          <ul>\n            <li>Nach Rangfolge:\n              <code>a xor b impl c or d and not e</code> &hArr; <code>a xor (b impl (c or (d and (not e))))))</code>\n            </li>\n            <li>Gleichwertiger Rang (links nach rechts):\n              <code>a xor b nor c nand d equiv e</code> &hArr; <code>((((a xor b) nor c) nand d) equiv e)</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ul>\n\n  <br>\n</div>\n","import {BooleanVariable} from './bool-node';\nimport {BooleanFormula} from './bool-formula';\n\nexport abstract class BoolComponentHelper {\n\n  readonly sampleVariable: BooleanVariable = new BooleanVariable('z');\n  readonly learnerVariable: BooleanVariable = new BooleanVariable('y');\n\n  formula: BooleanFormula;\n  // FIXME: remove assignments, get from formula!\n  assignments: Map<string, boolean>[] = [];\n\n  corrected = false;\n  completelyCorrect = false;\n\n  displayAssignmentValue(assignment: Map<string, boolean>, variable: BooleanVariable): string {\n    if (assignment.has(variable.variable)) {\n      return assignment.get(variable.variable) ? '1' : '0';\n    } else {\n      return '';\n    }\n  }\n\n  isCorrect(assignment: Map<string, boolean>): boolean {\n    return assignment.get(this.learnerVariable.variable) === assignment.get(this.sampleVariable.variable);\n  }\n\n}\n","import {Component, Input} from '@angular/core';\nimport {UserProficiencyFragment} from '../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-proficiency-card',\n  template: `\n    <div class=\"card\">\n      <header class=\"card-header\">\n        <p class=\"card-header-title\">{{proficiency.topic.title}}</p>\n      </header>\n      <div class=\"card-content\">\n        <p>Level: {{proficiency.level.title}}</p>\n\n        <p>{{proficiency.points}} von {{proficiency.pointsForNextLevel}} Punkten für nächstes Level</p>\n\n        <p>\n          <it4all-filled-points\n            [filledPoints]=\"proficiency.level.levelIndex\"\n            [maxPoints]=\"proficiency.topic.maxLevel.levelIndex\">\n          </it4all-filled-points>\n        </p>\n\n\n        <!--\n        <hr>\n\n        <div class=\"table-container\">\n\n          <table class=\"table is-fullwidth\">\n            <thead>\n              <tr>\n                <th>Level</th><th>Punkte</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Beginner</td><td>{{proficiency.beginnerPoints}}</td>\n              </tr>\n              <tr>\n                <td>Intermediate</td><td>{{proficiency.intermediatePoints}}</td>\n              </tr>\n              <tr>\n                <td>Advanced</td><td>{{proficiency.advancedPoints}}</td>\n              </tr>\n              <tr>\n                <td>Expert</td><td>{{proficiency.expertPoints}}</td>\n              </tr>\n            </tbody>\n          </table>\n\n        </div>\n       -->\n\n      </div>\n    </div>`\n})\nexport class ProficiencyCardComponent {\n\n  @Input() proficiency: UserProficiencyFragment;\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ToolOverviewComponent} from './tool-overview/tool-overview.component';\nimport {LoginFormComponent} from './user_management/login-form/login-form.component';\nimport {AuthGuard} from './_helpers/auth-guard';\nimport {LtiComponent} from './lti/lti.component';\nimport {RegisterFormComponent} from './user_management/register-form/register-form.component';\n\nconst routes: Routes = [\n  {path: '', component: ToolOverviewComponent, canActivate: [AuthGuard]},\n\n  {path: 'registerForm', component: RegisterFormComponent},\n  {path: 'loginForm', component: LoginFormComponent},\n\n  {path: 'lti/:uuid', component: LtiComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\nexport const routingComponents = [\n  ToolOverviewComponent,\n  LoginFormComponent,\n  RegisterFormComponent,\n  LtiComponent,\n];\n","import {Component, Input} from '@angular/core';\nimport {\n  MatchType,\n  XmlElementLineMatchFragment,\n  XmlElementLineMatchingResultFragment\n} from \"../../../../../_services/apollo_services\";\n\n@Component({\n  selector: 'it4all-xml-element-line-match-result',\n  template: `\n    <div *ngFor=\"let m of result.allMatches\" class=\"content\">\n\n      <div [ngClass]=\"isCorrect(m) ? 'has-text-dark-success' : 'has-text-danger'\">\n        Die Definition des Element <code>{{m.userArg.elementName}}</code> ist {{isCorrect(m) ? '' : 'nicht' }}\n        korrekt.\n\n        <ul *ngIf=\"m.analysisResult && !isCorrect(m)\">\n          <li [ngClass]=\"m.analysisResult.contentCorrect ? 'has-text-dark-success': 'has-text-danger'\">\n            Der Inhalt des Elements war {{m.analysisResult.contentCorrect ? '' : 'nicht'}} korrekt.\n\n            <ng-container *ngIf=\"!m.analysisResult.contentCorrect\">\n              Erwartet wurde <code>{{m.analysisResult.correctContent}}</code>\n            </ng-container>\n          </li>\n          <li [ngClass]=\"m.analysisResult.attributesCorrect ? 'has-text-dark-success' : 'has-text-danger'\">\n            Die Attribute des Elements waren {{m.analysisResult.attributesCorrect ? '' : 'nicht'}} korrekt.\n\n            <ng-container *ngIf=\"!m.analysisResult.attributesCorrect\">\n              Erwartet wurde <code>{{m.analysisResult.correctAttributes}}</code>.\n            </ng-container>\n          </li>\n        </ul>\n\n      </div>\n\n    </div>\n\n    <div *ngFor=\"let mu of result.notMatchedForUser\" class=\"has-text-danger\">\n      Die Definition des Elements <code>{{mu.elementName}}</code> ist falsch.\n    </div>\n\n    <div *ngFor=\"let ms of result.notMatchedForSample\" class=\"has-text-danger\">\n      Die Definition des Elements <code>{{ms.elementName}}</code> fehlt.\n    </div>\n  `\n})\nexport class XmlElementLineMatchResultComponent {\n\n  @Input() result: XmlElementLineMatchingResultFragment;\n\n  isCorrect(m: XmlElementLineMatchFragment): boolean {\n    return m.matchType === MatchType.SuccessfulMatch\n  }\n\n}\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {\n  MatchType,\n  UmlAssociationMatchFragment,\n  UmlAssociationMatchingResultFragment,\n  UmlResultFragment\n} from '../../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-uml-diag-drawing-correction',\n  template: `\n    <!-- <it4all-points-notification [points]=\"result.points\" [maxPoints]=\"result.maxPoints\"></it4all-points-notification> -->\n\n    <ng-container *ngIf=\"result.classResult\">\n      <!-- TODO: class result? -->\n    </ng-container>\n\n    <br>\n\n    <ng-container *ngIf=\"result.assocResult\">\n      <h3 class=\"subtitle is-5\" [ngClass]=\"assocResultSuccessful ? 'has-text-dark-success' : 'has-text-danger'\">\n        Der Vergleich der Assoziationen war {{assocResultSuccessful ? '' : 'nicht'}} erfolgreich.\n      </h3>\n\n      <div class=\"content\" *ngIf=\"!assocResultSuccessful\">\n        <it4all-uml-assoc-match-result [assocResult]=\"result.assocResult\"></it4all-uml-assoc-match-result>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"result.implResult\">\n      <it4all-uml-impl-result [implResult]=\"result.implResult\"></it4all-uml-impl-result>\n    </ng-container>\n  `\n})\nexport class UmlDiagDrawingCorrectionComponent implements OnChanges {\n\n  @Input() result: UmlResultFragment;\n\n  assocResultSuccessful = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.result.assocResult) {\n      this.assocResultSuccessful = this.associationResultSuccessful(this.result.assocResult);\n    }\n  }\n\n  assocMatchIsCorrect(m: UmlAssociationMatchFragment): boolean {\n    return m.matchType === MatchType.SuccessfulMatch;\n  }\n\n  associationResultSuccessful(assocResult: UmlAssociationMatchingResultFragment): boolean {\n    return assocResult.allMatches.every((x) => this.assocMatchIsCorrect(x));\n  }\n\n\n}\n","import {Component, Input} from '@angular/core';\nimport {FieldsForLinkFragment} from '../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-exercise-link-card',\n  template: `\n    <div class=\"card\">\n      <header class=\"card-header\">\n        <div class=\"card-header-title\">\n          {{exercise.exerciseId}}. {{exercise.title}}\n          &nbsp;\n          <div class=\"tag\" title=\"Schwierigkeit\">\n            <it4all-filled-points [filledPoints]=\"exercise.difficulty\" maxPoints=\"5\"></it4all-filled-points>\n          </div>\n        </div>\n      </header>\n\n      <div class=\"card-content\">\n\n        <div class=\"tags\">\n          <div class=\"tag\" [class.is-success]=\"part.solved\" *ngFor=\"let part of exercise.parts\">{{part.name}}</div>\n        </div>\n\n        <div class=\"tags\" *ngIf=\"exercise.topicsWithLevels.length > 0; else noTagsBlock\">\n          <div *ngFor=\"let topicWithLevel of exercise.topicsWithLevels\" class=\"tag\" [title]=\"topicWithLevel.topic\">\n            {{topicWithLevel.topic.abbreviation}}&nbsp; - &nbsp;\n            <it4all-filled-points [filledPoints]=\"topicWithLevel.level.levelIndex\" [maxPoints]=\"topicWithLevel.topic.maxLevel.levelIndex\">\n            </it4all-filled-points>\n          </div>\n        </div>\n\n      </div>\n\n      <footer class=\"card-footer\">\n        <a class=\"card-footer-item\"\n           [routerLink]=\"['/tools', exercise.toolId, 'collections', exercise.collectionId, 'exercises', exercise.exerciseId]\">\n          Zur Aufgabe\n        </a>\n      </footer>\n\n    </div>\n\n    <ng-template #noTagsBlock>\n      <div class=\"tag is-warning\">Keine Tags vorhanden</div>\n    </ng-template>\n  `\n})\nexport class ExerciseLinkCardComponent {\n\n  @Input() exercise: FieldsForLinkFragment;\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {getIdForUmlExPart, getUmlExerciseTextParts, SelectableClass, UmlExerciseTextPart} from '../uml-tools';\nimport {\n  ExerciseSolveFieldsFragment,\n  UmlExerciseContentFragment,\n  UmlExPart\n} from '../../../../_services/apollo_services';\n\n@Component({\n  selector: 'it4all-uml-class-selection',\n  templateUrl: './uml-class-selection.component.html'\n})\nexport class UmlClassSelectionComponent implements OnInit {\n\n  readonly nextPartId: string = getIdForUmlExPart(UmlExPart.DiagramDrawingHelp);\n\n  @Input() exerciseFragment: ExerciseSolveFieldsFragment;\n  @Input() exerciseContent: UmlExerciseContentFragment;\n\n  selectableClasses: SelectableClass[];\n  umlExerciseTextParts: UmlExerciseTextPart[];\n\n  corrected = false;\n\n  ngOnInit() {\n    const {selectableClasses, textParts} = getUmlExerciseTextParts(this.exerciseFragment, this.exerciseContent);\n\n    this.selectableClasses = selectableClasses;\n    this.umlExerciseTextParts = textParts;\n  }\n\n  getSelectedClasses(): SelectableClass[] {\n    return this.selectableClasses.filter((sc) => sc.selected);\n  }\n\n  toggleClassSelected(selectableClass: SelectableClass): void {\n    selectableClass.selected = !selectableClass.selected;\n  }\n\n  correct(): void {\n    this.corrected = true;\n  }\n\n  getCorrectClasses(): SelectableClass[] {\n    return this.selectableClasses.filter((sc) => sc.selected && sc.isCorrect);\n  }\n\n  getMissingClasses(): SelectableClass[] {\n    return this.selectableClasses.filter((sc) => !sc.selected && sc.isCorrect);\n  }\n\n  getWrongClasses(): SelectableClass[] {\n    return this.selectableClasses.filter((sc) => sc.selected && !sc.isCorrect);\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"title is-3 has-text-centered\">Klassenselektion</h1>\n\n  <div class=\"columns\">\n    <div class=\"column is-two-thirds-desktop\">\n\n      <h2 class=\"subtitle is-3 has-text-centered\">Aufgabentext</h2>\n      <div class=\"notification is-light-grey\">\n        <ng-container *ngFor=\"let textPart of umlExerciseTextParts\">\n          <span *ngIf=\"textPart.selectableClass\"\n                (click)=\"toggleClassSelected(textPart.selectableClass)\"\n                [ngClass]=\"textPart.selectableClass.selected ? 'has-text-link' : 'has-text-black'\">{{textPart.text}}</span>\n\n          <span *ngIf=\"!textPart.selectableClass\">{{textPart.text}}</span>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"column is-one-third-desktop\">\n      <h2 class=\"subtitle is-3 has-text-centered\">Gewählte Klassen</h2>\n\n      <div class=\"content\">\n        <ul>\n          <li *ngFor=\"let selectableClass of getSelectedClasses()\">{{selectableClass.name}}</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"columns\">\n    <div class=\"column\">\n      <button class=\"button is-fullwidth\" (click)=\"correct()\" [disabled]=\"corrected\"\n              [ngClass]=\"corrected ? 'is-dark' : 'is-link'\">\n        Korrektur\n      </button>\n    </div>\n    <div class=\"column\">\n      <button class=\"button is-fullwidth\" [routerLink]=\"['..', nextPartId]\" [disabled]=\"!corrected\"\n              [ngClass]=\"corrected ? 'is-link': 'is-dark'\" title=\"Führen Sie zuerst die Korrektur aus!\">\n        Zum nächsten Aufgabenteil\n      </button>\n    </div>\n    <div class=\"column\">\n      <a [routerLink]=\"['../..']\" class=\"button is-dark-warning is-fullwidth\">Bearbeiten beenden</a>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"corrected\">\n    <hr>\n\n    <h2 class=\"subtitle is-3 has-text-centered\">Korrektur</h2>\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        <h3 class=\"subtitle is-4 has-text-centered\">Korrekte Klassen:</h3>\n        <ul>\n          <li *ngFor=\"let correctClass of getCorrectClasses()\">&#10004;&nbsp;<code\n            class=\"has-text-dark-success\">{{correctClass.name}}</code></li>\n        </ul>\n      </div>\n\n      <div class=\"column\">\n        <h3 class=\"subtitle is-4 has-text-centered\">Fehlende Klassen:</h3>\n        <ul>\n          <li *ngFor=\"let missingClass of getMissingClasses()\">&#10008;&nbsp;<code>{{missingClass.name}}</code></li>\n        </ul>\n      </div>\n\n      <div class=\"column\">\n        <h3 class=\"subtitle is-4 has-text-centered\">Falsche Klassen</h3>\n        <ul>\n          <li *ngFor=\"let wrongClass of getWrongClasses()\">&#10067;&nbsp;<code>{{wrongClass.name}}</code></li>\n        </ul>\n      </div>\n    </div>\n  </ng-container>\n\n</div>\n","export {\n  START_END_SIZE,\n  COLORS,\n  calcRectHeight,\n  MIN_HEIGHT,\n  fontSize,\n  STD_ACTIVITY_ELEMENT_WIDTH,\n  STD_TEXT_ELEMENT_EVENTS,\n  strokeWidth\n};\n\nexport const PAPER_HEIGHT = 700;\nexport const GRID_SIZE = 20;\nexport const STD_PADDING = 10;\n\nexport const STD_ELEMENT_WIDTH = 200;\n\nconst STD_ACTIVITY_ELEMENT_WIDTH = 200;\n\nconst START_END_SIZE = 40;\n\nconst fontSize = 15;\nconst strokeWidth = 2;\n\nconst MIN_HEIGHT = fontSize + 2 * STD_PADDING;\n\nconst STD_TEXT_ELEMENT_EVENTS = {\n  click: 'onLeftClick',\n  contextmenu: 'onRightClick'\n};\n\nfunction calcRectHeight(lines: string[]): number {\n  return Math.max((lines.length * fontSize) + (2 * STD_PADDING), MIN_HEIGHT);\n}\n\nenum COLORS {\n  // noinspection JSUnusedGlobalSymbols\n  Black = '#000000',\n  Navy = '#000080',\n  DarkBlue = '#00008B',\n  MediumBlue = '#0000CD',\n  Blue = '#0000FF',\n  DarkGreen = '#006400',\n  Green = '#008000',\n  Teal = '#008080',\n  DarkCyan = '#008B8B',\n  DeepSkyBlue = '#00BFFF',\n  DarkTurquoise = '#00CED1',\n  MediumSpringGreen = '#00FA9A',\n  Lime = '#00FF00',\n  SpringGreen = '#00FF7F',\n  Aqua = '#00FFFF',\n  Cyan = '#00FFFF',\n  MidnightBlue = '#191970',\n  DodgerBlue = '#1E90FF',\n  LightSeaGreen = '#20B2AA',\n  ForestGreen = '#228B22',\n  SeaGreen = '#2E8B57',\n  DarkSlateGray = '#2F4F4F',\n  DarkSlateGrey = '#2F4F4F',\n  LimeGreen = '#32CD32',\n  MediumSeaGreen = '#3CB371',\n  Turquoise = '#40E0D0',\n  RoyalBlue = '#4169E1',\n  SteelBlue = '#4682B4',\n  DarkSlateBlue = '#483D8B',\n  MediumTurquoise = '#48D1CC',\n  Indigo = '#4B0082',\n  DarkOliveGreen = '#556B2F',\n  CadetBlue = '#5F9EA0',\n  CornflowerBlue = '#6495ED',\n  RebeccaPurple = '#663399',\n  MediumAquaMarine = '#66CDAA',\n  DimGray = '#696969',\n  DimGrey = '#696969',\n  SlateBlue = '#6A5ACD',\n  OliveDrab = '#6B8E23',\n  SlateGray = '#708090',\n  SlateGrey = '#708090',\n  LightSlateGray = '#778899',\n  LightSlateGrey = '#778899',\n  MediumSlateBlue = '#7B68EE',\n  LawnGreen = '#7CFC00',\n  Chartreuse = '#7FFF00',\n  Aquamarine = '#7FFFD4',\n  Maroon = '#800000',\n  Purple = '#800080',\n  Olive = '#808000',\n  Gray = '#808080',\n  Grey = '#808080',\n  SkyBlue = '#87CEEB',\n  LightSkyBlue = '#87CEFA',\n  BlueViolet = '#8A2BE2',\n  DarkRed = '#8B0000',\n  DarkMagenta = '#8B008B',\n  SaddleBrown = '#8B4513',\n  DarkSeaGreen = '#8FBC8F',\n  LightGreen = '#90EE90',\n  MediumPurple = '#9370DB',\n  DarkViolet = '#9400D3',\n  PaleGreen = '#98FB98',\n  DarkOrchid = '#9932CC',\n  YellowGreen = '#9ACD32',\n  Sienna = '#A0522D',\n  Brown = '#A52A2A',\n  DarkGray = '#A9A9A9',\n  DarkGrey = '#A9A9A9',\n  LightBlue = '#ADD8E6',\n  GreenYellow = '#ADFF2F',\n  PaleTurquoise = '#AFEEEE',\n  LightSteelBlue = '#B0C4DE',\n  PowderBlue = '#B0E0E6',\n  FireBrick = '#B22222',\n  DarkGoldenRod = '#B8860B',\n  MediumOrchid = '#BA55D3',\n  RosyBrown = '#BC8F8F',\n  DarkKhaki = '#BDB76B',\n  Silver = '#C0C0C0',\n  MediumVioletRed = '#C71585',\n  IndianRed = '#CD5C5C',\n  Peru = '#CD853F',\n  Chocolate = '#D2691E',\n  Tan = '#D2B48C',\n  LightGray = '#D3D3D3',\n  LightGrey = '#D3D3D3',\n  Thistle = '#D8BFD8',\n  Orchid = '#DA70D6',\n  GoldenRod = '#DAA520',\n  PaleVioletRed = '#DB7093',\n  Crimson = '#DC143C',\n  Gainsboro = '#DCDCDC',\n  Plum = '#DDA0DD',\n  BurlyWood = '#DEB887',\n  LightCyan = '#E0FFFF',\n  Lavender = '#E6E6FA',\n  DarkSalmon = '#E9967A',\n  Violet = '#EE82EE',\n  PaleGoldenRod = '#EEE8AA',\n  LightCoral = '#F08080',\n  Khaki = '#F0E68C',\n  AliceBlue = '#F0F8FF',\n  HoneyDew = '#F0FFF0',\n  Azure = '#F0FFFF',\n  SandyBrown = '#F4A460',\n  Wheat = '#F5DEB3',\n  Beige = '#F5F5DC',\n  WhiteSmoke = '#F5F5F5',\n  MintCream = '#F5FFFA',\n  GhostWhite = '#F8F8FF',\n  Salmon = '#FA8072',\n  AntiqueWhite = '#FAEBD7',\n  Linen = '#FAF0E6',\n  LightGoldenRodYellow = '#FAFAD2',\n  OldLace = '#FDF5E6',\n  Red = '#FF0000',\n  Fuchsia = '#FF00FF',\n  Magenta = '#FF00FF',\n  DeepPink = '#FF1493',\n  OrangeRed = '#FF4500',\n  Tomato = '#FF6347',\n  HotPink = '#FF69B4',\n  Coral = '#FF7F50',\n  DarkOrange = '#FF8C00',\n  LightSalmon = '#FFA07A',\n  Orange = '#FFA500',\n  LightPink = '#FFB6C1',\n  Pink = '#FFC0CB',\n  Gold = '#FFD700',\n  PeachPuff = '#FFDAB9',\n  NavajoWhite = '#FFDEAD',\n  Moccasin = '#FFE4B5',\n  Bisque = '#FFE4C4',\n  MistyRose = '#FFE4E1',\n  BlanchedAlmond = '#FFEBCD',\n  PapayaWhip = '#FFEFD5',\n  LavenderBlush = '#FFF0F5',\n  SeaShell = '#FFF5EE',\n  Cornsilk = '#FFF8DC',\n  LemonChiffon = '#FFFACD',\n  FloralWhite = '#FFFAF0',\n  Snow = '#FFFAFA',\n  Yellow = '#FFFF00',\n  LightYellow = '#FFFFE0',\n  Ivory = '#FFFFF0',\n  White = '#FFFFFF'\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}