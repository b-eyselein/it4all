mutation ProgrammingCorrection($collId: Int!, $exId: Int!, $part: ProgExPart!, $solution: FilesSolutionInput!) {
  programmingExercise(collId: $collId, exId: $exId) {
    correct(part: $part, solution: $solution) {
      ...ProgrammingCorrectionResult
    }
  }
}

fragment ProgrammingCorrectionResult on ProgrammingCorrectionResult {
  result {
    ...ProgrammingResult
  }
  solutionId
  proficienciesUpdated
}

fragment ProgrammingResult on ProgrammingResult {
  points
  maxPoints
  implementationCorrectionResult {
    ...ImplementationCorrectionResult
  }
  unitTestResults {
    ...UnitTestCorrectionResult
  }
}

fragment ImplementationCorrectionResult on ImplementationCorrectionResult {
  successful
  stdout
  stderr
}

fragment UnitTestCorrectionResult on UnitTestCorrectionResult {
  testId
  successful
  shouldFail
  description
  stderr
}
