query CollectionList($toolId: String!) {
  tool(toolId: $toolId) {
    name
    collections {
      id
      title
      exerciseCount
    }
  }
}

query Exercises($toolId: String!, $collId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      exercises {
        id
        title
      }
    }
  }
}

query CollectionToolOverview($toolId: String!) {
  tool(toolId: $toolId) {
    name
    exerciseCount
    collectionCount
    lessonCount
  }
}

query CollectionOverview($toolId: String!, $collId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      title
      exercises {
        ...FieldsForLink
      }
    }
  }
}

query AllExercisesOverview($toolId: String!) {
  tool(toolId: $toolId) {
    allExerciseMetaData {
      #tags {
      #  ...Tag
      #}
      ...FieldsForLink
    }
  }
}

query ExerciseOverview($toolId: String!, $collId: Int!, $exId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      exercise(exId: $exId) {
        id
        title
        text
        ... on ProgrammingExercise {
          unitTestPart {
            unitTestType
          }
        }
        ... on WebExercise{
          siteSpec {
            htmlTaskCount
            jsTaskCount
          }
        }
      }
    }
  }
}

query Exercise($toolId: String!, $collId: Int!, $exId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId){
      shortName
      exercise(exId: $exId){
        ...ExerciseSolveFields
        ...ProgExerciseContentSolveFields
        ...RegexExerciseContentSolveFields
        ...SqlExerciseContentSolveFields
        ...UmlExerciseContentSolveFields
        ...WebExerciseContentSolveFields
        ...XmlExerciseContentSolveFields
      }
    }
  }
}

query LessonsForTool($toolId: String!) {
  tool(toolId: $toolId) {
    name
    lessons {
      id
      title
      description
    }
  }
}

query Lesson($toolId: String!, $lessonId: Int!) {
  tool(toolId: $toolId) {
    name
    lesson(lessonId: $lessonId){
      id
      title
      description
    }
  }
}

# Admin queries

query CollectionToolAdmin($toolId: String!) {
  tool(toolId: $toolId) {
    name
    collectionCount
    lessonCount
  }
}

query AdminLessonIndex($toolId: String!) {
  tool(toolId: $toolId) {
    name
    lessons {
      ...LessonFragment
    }
  }
}

query CollectionAdmin($toolId: String!, $collId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      title
      exercises {
        ...FieldsForLink
      }
    }
  }
}

query AdminCollectionsIndex($toolId: String!) {
  tool(toolId: $toolId) {
    name
    collections {
      id
      title
      exerciseCount
    }
  }
}

query AdminEditCollection($toolId: String!, $collId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      asJson
    }
  }
}

query AdminEditExercise($toolId: String!, $collId: Int!, $exId: Int!) {
  tool(toolId: $toolId) {
    collection(collId: $collId) {
      exercise(exId: $exId) {
        asJson
      }
    }
  }
}

query AdminReadCollections($toolId: String!) {
  tool(toolId: $toolId) {
    name
    readCollections
  }
}

mutation AdminUpsertCollection($toolId: String!, $collId: Int!, $content: String!) {
  upsertCollection(toolId: $toolId, collId: $collId,content: $content) {
    asJson
  }
}

# Fragments

fragment Tag on ExTag {
  abbreviation
  title
}

fragment FieldsForLink on ExerciseInterface {
  id
  collectionId
  toolId
  title
  difficulty
  tags {
    abbreviation
    title
  }
}

fragment ExerciseSolveFields on ExerciseInterface {
  id
  collectionId
  toolId
  title
  text
}

fragment ProgExerciseContentSolveFields on ProgrammingExercise {
  unitTestPart {
    unitTestType
    unitTestFiles {
      ...ExFileAll
    }
  }
  implementationPart{
    files {
      ...ExFileAll
    }
  }
  progSampleSolutions: sampleSolutions {
    sample {
      files {
        ...ExFileAll
      }
    }
  }
}

fragment RegexExerciseContentSolveFields on RegexExercise {
  regexSampleSolutions: sampleSolutions {
    sample
  }
}

fragment SqlExerciseContentSolveFields on SqlExercise {
  hint
  sqlSampleSolutions: sampleSolutions{
    sample
  }
}

fragment UmlExerciseContentSolveFields on UmlExercise {
  toIgnore
  mappings {
    key
    value
  }
  umlSampleSolutions: sampleSolutions {
    sample {
      ...UmlClassDiagram
    }
  }
}

fragment UmlClassDiagram on UmlClassDiagram {
  classes {
    ...UmlClass
  }
  associations {
    ...UmlAssociation
  }
  implementations{
    ...UmlImplementation
  }
}

fragment UmlClass on UmlClass {
  classType
  name
  attributes {
    ... UmlAttribute
  }
  methods {
    ...UmlMethod
  }
}

fragment UmlAttribute on UmlAttribute{
  isAbstract
  isDerived
  isStatic
  visibility
  memberName
  memberType
}

fragment UmlMethod on UmlMethod {
  isAbstract
  isStatic
  visibility
  memberName
  parameters
  memberType
}

fragment UmlAssociation on UmlAssociation {
  assocType
  assocName
  firstEnd
  firstMult
  secondEnd
  secondMult
}

fragment UmlImplementation on UmlImplementation {
  subClass
  superClass
}

fragment WebExerciseContentSolveFields on WebExercise {
  files {
    ...ExFileAll
  }
  siteSpec {
    htmlTasks {
      text
    }
    jsTaskCount
  }
  webSampleSolutions: sampleSolutions {
    sample {
      files {
        ...ExFileAll
      }
    }
  }
}

fragment XmlExerciseContentSolveFields on XmlExercise {
  rootNode
  grammarDescription
  xmlSampleSolutions: sampleSolutions {
    sample {
      document
      grammar
    }
  }
}


fragment ExFileAll on ExerciseFile {
  name
  fileType
  content
  editable
}

fragment LessonFragment on Lesson {
  id
  title
}
