mutation RegexCorrection($collId: Int!, $exId: Int!, $part: RegexExPart!, $solution: String!) {
  correctRegex(collId: $collId, exId: $exId,part:$part, solution: $solution) {
    __typename
    solutionSaved
    points
    maxPoints
    ...RegexInternalErrorResult
    ...RegexIllegalRegexResult
    ...RegexMatchingResult
    ...RegexExtractionResult
  }
}

fragment RegexInternalErrorResult on RegexInternalErrorResult {
  msg
}

fragment RegexIllegalRegexResult on RegexIllegalRegexResult {
  message
}

fragment RegexMatchingSingleResult on RegexMatchingSingleResult {
  resultType
  matchData
}

fragment RegexMatchingResult on RegexMatchingResult {
  matchingResults {
    ...RegexMatchingSingleResult
  }
}

fragment RegexExtractionMatch on RegexMatchMatch {
  matchType
  userArg
  sampleArg
}

fragment ExtractionMatchingResult on RegexExtractedValuesComparisonMatchingResult {
  allMatches {
    ...RegexExtractionMatch
  }
  points
  maxPoints
}

fragment RegexExtractionSingleResult on RegexExtractionSingleResult {
  base
  correct
  extractionMatchingResult {
    ...ExtractionMatchingResult
  }
}

fragment RegexExtractionResult on RegexExtractionResult {
  extractionResults {
    ...RegexExtractionSingleResult
  }
}
