mutation SqlCorrection($collId: Int!, $exId: Int!, $part: SqlExPart!, $solution: String!) {
  me {
    sqlExercise(collId: $collId, exId: $exId) {
      correct(part: $part, solution: $solution) {
        ...SqlCorrectionResult
      }
    }
  }
}

fragment SqlCorrectionResult on SqlCorrectionResult {
  solutionSaved
  resultSaved
  proficienciesUpdated
  result {
    ...SqlAbstractResult
    ...SqlInternalErrorResult
    ...SqlResult
  }
}

fragment SqlAbstractResult on SqlAbstractResult {
  __typename
  points
  maxPoints
}

fragment SqlInternalErrorResult on SqlInternalErrorResult {
  msg
}

# Column comparison

fragment ColumnComparison on SqlColumnComparisonMatchingResult {
  ...SqlMatchingResult
}

# JoinExpression / Where Comparison

fragment BinaryExpressionComparison on SqlBinaryExpressionComparisonMatchingResult {
  ...SqlMatchingResult
}

# Limit comparison

fragment LimitComparison on SqlLimitComparisonMatchingResult {
  ...SqlMatchingResult
}

# Select additional comparisons

fragment SelectAdditionalComparison on SelectAdditionalComparisons {
  groupByComparison {
    ...StringMatchingResult
  }
  orderByComparison {
    ...StringMatchingResult
  }
  limitComparison {
    ...LimitComparison
  }
}

# Complete result

fragment SqlResult on SqlResult {
  staticComparison {
    columnComparison {
      ...ColumnComparison
    }
    tableComparison {
      ...StringMatchingResult
    }
    joinExpressionComparison {
      ...BinaryExpressionComparison
    }
    whereComparison {
      ...BinaryExpressionComparison
    }
    additionalComparisons {
      selectComparisons {
        ...SelectAdditionalComparison
      }
      insertComparison {
        ...StringMatchingResult
      }
    }
  }
  executionResult {
    ...SqlExecutionResult
  }
}

fragment SqlExecutionResult on SqlExecutionResult {
  userResult {
    ...SqlQueryResult
  }
  sampleResult {
    ...SqlQueryResult
  }
}

fragment SqlQueryResult on SqlQueryResult {
  tableName
  columnNames
  rows {
    ...SqlRow
  }
}

fragment SqlRow on SqlRow {
  cells {
    key
    value {
      ...SqlCell
    }
  }
}

fragment SqlCell on SqlCell {
  colName
  content
  different
}

# other fragments

fragment StringMatch on StringMatch {
  matchType
  sampleArg
  userArg
}

fragment StringMatchingResult on StringMatchingResult {
  points
  maxPoints
  allMatches {
    ...StringMatch
  }
  notMatchedForUser
  notMatchedForSample
}

fragment NewMatch on NewMatch {
  matchType
  sampleArgDescription
  userArgDescription
}

fragment SqlMatchingResult on MatchingResult  {
  points
  maxPoints
  allMatches {
    ...NewMatch
  }
}
