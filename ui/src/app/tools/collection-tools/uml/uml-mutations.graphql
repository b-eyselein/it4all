mutation UmlCorrection($collId: Int!, $exId: Int!, $part: UmlExPart!, $solution: UmlClassDiagramInput!) {
  me {
    umlExercise(collId: $collId, exId: $exId) {
      correct(part: $part, solution: $solution) {
        ...UmlCorrectionResult
      }
    }
  }
}

fragment UmlCorrectionResult on UmlCorrectionResult {
  solutionSaved
  resultSaved
  proficienciesUpdated
  result {
    ...UmlAbstractResult
    ...UmlInternalErrorResult
    ...UmlResult
  }
}

fragment UmlAbstractResult on UmlAbstractResult {
  __typename
  points
  maxPoints
}

fragment UmlInternalErrorResult on UmlInternalErrorResult {
  msg
}

fragment UmlResult on UmlResult {
  classResult {
    ...UmlClassMatchingResult
  }
  assocResult {
    ...UmlAssociationMatchingResult
  }
  implResult {
    ...UmlImplementationMatchingResult
  }
}


fragment UmlClassMatchingResult on UmlClassMatchingResult {
  allMatches {
    ...UmlClassMatch
  }
  notMatchedForUser {
    ...UmlSolutionClass
  }
  notMatchedForSample {
    ...UmlSolutionClass
  }
  points
  maxPoints
}

fragment UmlClassMatch on UmlClassMatch {
  matchType
  userArg {
    ...UmlSolutionClass
  }
  sampleArg {
    ...UmlSolutionClass
  }
  analysisResult {
    __typename
  }
}

fragment UmlSolutionClass on UmlClass  {
  classType
  name
  attributes {
    __typename
  }
  methods {
    __typename
  }
}

fragment UmlAssociationMatchingResult on UmlAssociationMatchingResult  {
  allMatches {
    ...UmlAssociationMatch
  }
  notMatchedForUser {
    ...UmlAssociation
  }
  notMatchedForSample {
    ...UmlAssociation
  }
  points
  maxPoints
}

fragment UmlAssociationMatch on UmlAssociationMatch {
  matchType
  userArg {
    ...UmlAssociation
  }
  sampleArg {
    ...UmlAssociation
  }
  analysisResult {
    assocTypeEqual
    correctAssocType
    multiplicitiesEqual
  }
}

fragment UmlAssociation on UmlAssociation {
  assocType
  assocName
  firstEnd
  firstMult
  secondEnd
  secondMult
}

fragment UmlImplementationMatchingResult on UmlImplementationMatchingResult {
  allMatches {
    ...UmlImplementationMatch
  }
  notMatchedForUser {
    ...UmlImplementation
  }
  notMatchedForSample {
    ...UmlImplementation
  }
  points
  maxPoints
}

fragment UmlImplementationMatch on UmlImplementationMatch {
  matchType
  userArg {
    ...UmlImplementation
  }
  sampleArg {
    ...UmlImplementation
  }
}

fragment UmlImplementation on UmlImplementation {
  subClass
  superClass
}
